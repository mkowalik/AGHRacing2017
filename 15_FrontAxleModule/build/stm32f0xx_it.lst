ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB35:
  25              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /**
   2:Src/stm32f0xx_it.c ****   ******************************************************************************
   3:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   4:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f0xx_it.c ****   ******************************************************************************
   6:Src/stm32f0xx_it.c ****   *
   7:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2017 STMicroelectronics
   8:Src/stm32f0xx_it.c ****   *
   9:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f0xx_it.c ****   *
  20:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f0xx_it.c ****   *
  31:Src/stm32f0xx_it.c ****   ******************************************************************************
  32:Src/stm32f0xx_it.c ****   */
  33:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 2


  34:Src/stm32f0xx_it.c **** #include "stm32f0xx_hal.h"
  35:Src/stm32f0xx_it.c **** #include "stm32f0xx.h"
  36:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  37:Src/stm32f0xx_it.c **** 
  38:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f0xx_it.c **** 
  40:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  41:Src/stm32f0xx_it.c **** 
  42:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  43:Src/stm32f0xx_it.c **** extern CAN_HandleTypeDef hcan;
  44:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim17;
  45:Src/stm32f0xx_it.c **** 
  46:Src/stm32f0xx_it.c **** /******************************************************************************/
  47:Src/stm32f0xx_it.c **** /*            Cortex-M0 Processor Interruption and Exception Handlers         */ 
  48:Src/stm32f0xx_it.c **** /******************************************************************************/
  49:Src/stm32f0xx_it.c **** 
  50:Src/stm32f0xx_it.c **** /**
  51:Src/stm32f0xx_it.c **** * @brief This function handles Non maskable interrupt.
  52:Src/stm32f0xx_it.c **** */
  53:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  54:Src/stm32f0xx_it.c **** {
  26              		.loc 1 54 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  55:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  56:Src/stm32f0xx_it.c **** 
  57:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  58:Src/stm32f0xx_it.c ****   HAL_RCC_NMI_IRQHandler();
  35              		.loc 1 58 0
  36 0002 FFF7FEFF 		bl	HAL_RCC_NMI_IRQHandler
  37              	.LVL0:
  59:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  62:Src/stm32f0xx_it.c **** }
  38              		.loc 1 62 0
  39              		@ sp needed
  40 0006 10BD     		pop	{r4, pc}
  41              		.cfi_endproc
  42              	.LFE35:
  44              		.section	.text.HardFault_Handler,"ax",%progbits
  45              		.align	1
  46              		.global	HardFault_Handler
  47              		.syntax unified
  48              		.code	16
  49              		.thumb_func
  50              		.fpu softvfp
  52              	HardFault_Handler:
  53              	.LFB36:
  63:Src/stm32f0xx_it.c **** 
  64:Src/stm32f0xx_it.c **** /**
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 3


  65:Src/stm32f0xx_it.c **** * @brief This function handles Hard fault interrupt.
  66:Src/stm32f0xx_it.c **** */
  67:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
  68:Src/stm32f0xx_it.c **** {
  54              		.loc 1 68 0
  55              		.cfi_startproc
  56              		@ Volatile: function does not return.
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.L3:
  61 0000 FEE7     		b	.L3
  62              		.cfi_endproc
  63              	.LFE36:
  65              		.section	.text.SVC_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	SVC_Handler
  68              		.syntax unified
  69              		.code	16
  70              		.thumb_func
  71              		.fpu softvfp
  73              	SVC_Handler:
  74              	.LFB37:
  69:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  70:Src/stm32f0xx_it.c **** 
  71:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  72:Src/stm32f0xx_it.c ****   while (1)
  73:Src/stm32f0xx_it.c ****   {
  74:Src/stm32f0xx_it.c ****   }
  75:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 1 */
  76:Src/stm32f0xx_it.c **** 
  77:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 1 */
  78:Src/stm32f0xx_it.c **** }
  79:Src/stm32f0xx_it.c **** 
  80:Src/stm32f0xx_it.c **** /**
  81:Src/stm32f0xx_it.c **** * @brief This function handles System service call via SWI instruction.
  82:Src/stm32f0xx_it.c **** */
  83:Src/stm32f0xx_it.c **** void SVC_Handler(void)
  84:Src/stm32f0xx_it.c **** {
  75              		.loc 1 84 0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  85:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
  86:Src/stm32f0xx_it.c **** 
  87:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
  88:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
  89:Src/stm32f0xx_it.c **** 
  90:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
  91:Src/stm32f0xx_it.c **** }
  80              		.loc 1 91 0
  81              		@ sp needed
  82 0000 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE37:
  86              		.section	.text.PendSV_Handler,"ax",%progbits
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 4


  87              		.align	1
  88              		.global	PendSV_Handler
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  92              		.fpu softvfp
  94              	PendSV_Handler:
  95              	.LFB38:
  92:Src/stm32f0xx_it.c **** 
  93:Src/stm32f0xx_it.c **** /**
  94:Src/stm32f0xx_it.c **** * @brief This function handles Pendable request for system service.
  95:Src/stm32f0xx_it.c **** */
  96:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
  97:Src/stm32f0xx_it.c **** {
  96              		.loc 1 97 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
  98:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
  99:Src/stm32f0xx_it.c **** 
 100:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 101:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 102:Src/stm32f0xx_it.c **** 
 103:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 104:Src/stm32f0xx_it.c **** }
 101              		.loc 1 104 0
 102              		@ sp needed
 103 0000 7047     		bx	lr
 104              		.cfi_endproc
 105              	.LFE38:
 107              		.section	.text.SysTick_Handler,"ax",%progbits
 108              		.align	1
 109              		.global	SysTick_Handler
 110              		.syntax unified
 111              		.code	16
 112              		.thumb_func
 113              		.fpu softvfp
 115              	SysTick_Handler:
 116              	.LFB39:
 105:Src/stm32f0xx_it.c **** 
 106:Src/stm32f0xx_it.c **** /**
 107:Src/stm32f0xx_it.c **** * @brief This function handles System tick timer.
 108:Src/stm32f0xx_it.c **** */
 109:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 110:Src/stm32f0xx_it.c **** {
 117              		.loc 1 110 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121 0000 10B5     		push	{r4, lr}
 122              	.LCFI1:
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 4, -8
 125              		.cfi_offset 14, -4
 111:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 112:Src/stm32f0xx_it.c **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 5


 113:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 114:Src/stm32f0xx_it.c ****   HAL_IncTick();
 126              		.loc 1 114 0
 127 0002 FFF7FEFF 		bl	HAL_IncTick
 128              	.LVL1:
 115:Src/stm32f0xx_it.c ****   HAL_SYSTICK_IRQHandler();
 129              		.loc 1 115 0
 130 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 131              	.LVL2:
 116:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 117:Src/stm32f0xx_it.c **** 
 118:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 119:Src/stm32f0xx_it.c **** }
 132              		.loc 1 119 0
 133              		@ sp needed
 134 000a 10BD     		pop	{r4, pc}
 135              		.cfi_endproc
 136              	.LFE39:
 138              		.section	.text.TIM17_IRQHandler,"ax",%progbits
 139              		.align	1
 140              		.global	TIM17_IRQHandler
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 144              		.fpu softvfp
 146              	TIM17_IRQHandler:
 147              	.LFB40:
 120:Src/stm32f0xx_it.c **** 
 121:Src/stm32f0xx_it.c **** /******************************************************************************/
 122:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 123:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 124:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 125:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 126:Src/stm32f0xx_it.c **** /******************************************************************************/
 127:Src/stm32f0xx_it.c **** 
 128:Src/stm32f0xx_it.c **** /**
 129:Src/stm32f0xx_it.c **** * @brief This function handles TIM17 global interrupt.
 130:Src/stm32f0xx_it.c **** */
 131:Src/stm32f0xx_it.c **** void TIM17_IRQHandler(void)
 132:Src/stm32f0xx_it.c **** {
 148              		.loc 1 132 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 10B5     		push	{r4, lr}
 153              	.LCFI2:
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 133:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 134:Src/stm32f0xx_it.c **** 
 135:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 136:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim17);
 157              		.loc 1 136 0
 158 0002 0248     		ldr	r0, .L8
 159 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 160              	.LVL3:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 6


 137:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 138:Src/stm32f0xx_it.c **** 
 139:Src/stm32f0xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 140:Src/stm32f0xx_it.c **** }
 161              		.loc 1 140 0
 162              		@ sp needed
 163 0008 10BD     		pop	{r4, pc}
 164              	.L9:
 165 000a C046     		.align	2
 166              	.L8:
 167 000c 00000000 		.word	htim17
 168              		.cfi_endproc
 169              	.LFE40:
 171              		.section	.text.CEC_CAN_IRQHandler,"ax",%progbits
 172              		.align	1
 173              		.global	CEC_CAN_IRQHandler
 174              		.syntax unified
 175              		.code	16
 176              		.thumb_func
 177              		.fpu softvfp
 179              	CEC_CAN_IRQHandler:
 180              	.LFB41:
 141:Src/stm32f0xx_it.c **** 
 142:Src/stm32f0xx_it.c **** /**
 143:Src/stm32f0xx_it.c **** * @brief This function handles HDMI-CEC and CAN global interrupts / HDMI-CEC wake-up interrupt thro
 144:Src/stm32f0xx_it.c **** */
 145:Src/stm32f0xx_it.c **** void CEC_CAN_IRQHandler(void)
 146:Src/stm32f0xx_it.c **** {
 181              		.loc 1 146 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185 0000 10B5     		push	{r4, lr}
 186              	.LCFI3:
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 4, -8
 189              		.cfi_offset 14, -4
 147:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN CEC_CAN_IRQn 0 */
 148:Src/stm32f0xx_it.c **** 
 149:Src/stm32f0xx_it.c ****   /* USER CODE END CEC_CAN_IRQn 0 */
 150:Src/stm32f0xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 190              		.loc 1 150 0
 191 0002 0248     		ldr	r0, .L11
 192 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 193              	.LVL4:
 151:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN CEC_CAN_IRQn 1 */
 152:Src/stm32f0xx_it.c **** 
 153:Src/stm32f0xx_it.c ****   /* USER CODE END CEC_CAN_IRQn 1 */
 154:Src/stm32f0xx_it.c **** }
 194              		.loc 1 154 0
 195              		@ sp needed
 196 0008 10BD     		pop	{r4, pc}
 197              	.L12:
 198 000a C046     		.align	2
 199              	.L11:
 200 000c 00000000 		.word	hcan
 201              		.cfi_endproc
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 7


 202              	.LFE41:
 204              		.text
 205              	.Letext0:
 206              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 207              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 208              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 209              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 210              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 211              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 212              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 213              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 214              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 215              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 216              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 217              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 218              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 219              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 220              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_it.c
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:16     .text.NMI_Handler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:23     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:45     .text.HardFault_Handler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:52     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:66     .text.SVC_Handler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:73     .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:87     .text.PendSV_Handler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:94     .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:108    .text.SysTick_Handler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:115    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:139    .text.TIM17_IRQHandler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:146    .text.TIM17_IRQHandler:00000000 TIM17_IRQHandler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:167    .text.TIM17_IRQHandler:0000000c $d
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:172    .text.CEC_CAN_IRQHandler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:179    .text.CEC_CAN_IRQHandler:00000000 CEC_CAN_IRQHandler
C:\Users\Wojciech\AppData\Local\Temp\cc5wKrdZ.s:200    .text.CEC_CAN_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_RCC_NMI_IRQHandler
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_TIM_IRQHandler
htim17
HAL_CAN_IRQHandler
hcan
