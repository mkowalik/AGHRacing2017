ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._Error_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	_Error_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	_Error_Handler:
  24              	.LFB37:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2017 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 2


  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f0xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "i2c.h"
  44:Src/main.c    **** #include "tim.h"
  45:Src/main.c    **** #include "gpio.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE BEGIN Includes */
  48:Src/main.c    **** #include "tm_stm32_mpu6050.h"
  49:Src/main.c    **** #include "stop_light.h"
  50:Src/main.c    **** //#include "actual_data_provider.h"
  51:Src/main.c    **** //#include "can_receiver_driver.h"
  52:Src/main.c    **** #include "CANhandler.h"
  53:Src/main.c    **** /* USER CODE END Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE BEGIN PV */
  58:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE BEGIN PFP */
  66:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN 0 */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END 0 */
  73:Src/main.c    **** 
  74:Src/main.c    **** int main(void)
  75:Src/main.c    **** {
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE BEGIN 1 */
  78:Src/main.c    **** 	TM_MPU6050_t MPU6050_Data;
  79:Src/main.c    **** 	TM_MPU6050_Interrupt_t	MPU6050_Interrupts;
  80:Src/main.c    ****   /* USER CODE END 1 */
  81:Src/main.c    **** 
  82:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Src/main.c    ****   HAL_Init();
  86:Src/main.c    **** 
  87:Src/main.c    ****   /* USER CODE BEGIN Init */
  88:Src/main.c    **** 
  89:Src/main.c    ****   /* USER CODE END Init */
  90:Src/main.c    **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 3


  91:Src/main.c    ****   /* Configure the system clock */
  92:Src/main.c    ****   SystemClock_Config();
  93:Src/main.c    **** 
  94:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE END SysInit */
  97:Src/main.c    **** 
  98:Src/main.c    ****   /* Initialize all configured peripherals */
  99:Src/main.c    ****   MX_GPIO_Init();
 100:Src/main.c    ****   MX_CAN_Init();
 101:Src/main.c    ****   MX_I2C1_Init();
 102:Src/main.c    ****   MX_ADC_Init();
 103:Src/main.c    ****   MX_TIM1_Init();
 104:Src/main.c    ****   MX_TIM3_Init();
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN 2 */
 107:Src/main.c    ****   TM_MPU6050_Init(&MPU6050_Data, TM_MPU6050_Device_0, TM_MPU6050_Accelerometer_8G, TM_MPU6050_Gyros
 108:Src/main.c    ****   TM_MPU6050_EnableInterrupts(&MPU6050_Data);
 109:Src/main.c    ****   TM_MPU6050_GeneralCallib(&MPU6050_Data);
 110:Src/main.c    ****   //TM_MPU6050_FastCallib(&MPU6050_Data);
 111:Src/main.c    ****   MPU6050_Data.Accelerometer_Offset.x = 0;
 112:Src/main.c    ****   MPU6050_Data.Accelerometer_Offset.y = 0;
 113:Src/main.c    ****   MPU6050_Data.Accelerometer_Offset.z = 0;
 114:Src/main.c    ****   MPU6050_Data.Gyroscope_Offset.x = 0;
 115:Src/main.c    ****   MPU6050_Data.Gyroscope_Offset.y = 0;
 116:Src/main.c    ****   MPU6050_Data.Gyroscope_Offset.z = 0;
 117:Src/main.c    ****   /* USER CODE END 2 */
 118:Src/main.c    **** 
 119:Src/main.c    ****   /* Infinite loop */
 120:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 121:Src/main.c    **** 
 122:Src/main.c    ****   //ActualDataProvider_init();
 123:Src/main.c    ****   CANhandler_Init();
 124:Src/main.c    ****   while (1)
 125:Src/main.c    ****   {
 126:Src/main.c    ****   /* USER CODE END WHILE */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE BEGIN 3 */
 129:Src/main.c    **** 
 130:Src/main.c    **** //	TM_MPU6050_ReadInterrupts(&MPU6050_Data, &MPU6050_Interrupts);
 131:Src/main.c    **** //	if(MPU6050_Interrupts.F.DataReady){
 132:Src/main.c    **** //		TM_MPU6050_ReadGyroscope(&MPU6050_Data);
 133:Src/main.c    **** //		TM_MPU6050_ReadAccelerometer(&MPU6050_Data);
 134:Src/main.c    **** //		TM_MPU6050_CompensateRawData(&MPU6050_Data);
 135:Src/main.c    **** //	}
 136:Src/main.c    **** 
 137:Src/main.c    **** 	CANhandler_Handler();
 138:Src/main.c    **** 
 139:Src/main.c    **** //	SET_CAN_DATA(DATA_R_ACC_X, (uint16_t)(MPU6050_Data.Accelerometer_Compensated.x * 100));
 140:Src/main.c    **** //	SET_CAN_DATA(DATA_R_ACC_Y, (uint16_t)(MPU6050_Data.Accelerometer_Compensated.y * 100));
 141:Src/main.c    **** //	SET_CAN_DATA(DATA_R_ACC_Z, (uint16_t)(MPU6050_Data.Accelerometer_Compensated.y * 100));
 142:Src/main.c    **** //
 143:Src/main.c    **** //	SET_CAN_DATA(DATA_R_GYR_X, (uint16_t)(MPU6050_Data.Gyroscope_Compensated.x * 10));
 144:Src/main.c    **** //	SET_CAN_DATA(DATA_R_GYR_Y, (uint16_t)(MPU6050_Data.Gyroscope_Compensated.y * 10));
 145:Src/main.c    **** //	SET_CAN_DATA(DATA_R_GYR_Z, (uint16_t)(MPU6050_Data.Gyroscope_Compensated.z * 10));
 146:Src/main.c    **** 
 147:Src/main.c    **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 4


 148:Src/main.c    **** 	if((GET_CAN_DATA(DATA_STOP_LIGHT) * GET_CAN_DATA_VALIDATION(DATA_STOP_LIGHT)) == 0xFF){
 149:Src/main.c    **** 	  StopLight_Set();
 150:Src/main.c    **** 	}
 151:Src/main.c    **** 	else{
 152:Src/main.c    **** 	  StopLight_Clr();
 153:Src/main.c    **** 	}
 154:Src/main.c    **** //	if( (int16_t) ActualDataProvider_getValue(STOP_DATA_CHANNEL) == 0xFF){
 155:Src/main.c    **** //		StopLight_Set();
 156:Src/main.c    **** //	}
 157:Src/main.c    **** //	else{
 158:Src/main.c    **** //		StopLight_Clr();
 159:Src/main.c    **** //	}
 160:Src/main.c    **** 
 161:Src/main.c    ****   }
 162:Src/main.c    ****   /* USER CODE END 3 */
 163:Src/main.c    **** 
 164:Src/main.c    **** }
 165:Src/main.c    **** 
 166:Src/main.c    **** /** System Clock Configuration
 167:Src/main.c    **** */
 168:Src/main.c    **** void SystemClock_Config(void)
 169:Src/main.c    **** {
 170:Src/main.c    **** 
 171:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 172:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 173:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 174:Src/main.c    **** 
 175:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 176:Src/main.c    ****     */
 177:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI14|RCC_OSCILLATORTYPE_HSE;
 178:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 179:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 180:Src/main.c    ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 181:Src/main.c    ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL15;
 185:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV3;
 186:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187:Src/main.c    ****   {
 188:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 189:Src/main.c    ****   }
 190:Src/main.c    **** 
 191:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 192:Src/main.c    ****     */
 193:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 194:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 195:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 196:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 198:Src/main.c    **** 
 199:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 202:Src/main.c    ****   }
 203:Src/main.c    **** 
 204:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 5


 205:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
 206:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 207:Src/main.c    ****   {
 208:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 209:Src/main.c    ****   }
 210:Src/main.c    **** 
 211:Src/main.c    ****     /**Configure the Systick interrupt time 
 212:Src/main.c    ****     */
 213:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 214:Src/main.c    **** 
 215:Src/main.c    ****     /**Configure the Systick 
 216:Src/main.c    ****     */
 217:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 220:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 221:Src/main.c    **** }
 222:Src/main.c    **** 
 223:Src/main.c    **** /* USER CODE BEGIN 4 */
 224:Src/main.c    **** 
 225:Src/main.c    **** /* USER CODE END 4 */
 226:Src/main.c    **** 
 227:Src/main.c    **** /**
 228:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 229:Src/main.c    ****   * @param  None
 230:Src/main.c    ****   * @retval None
 231:Src/main.c    ****   */
 232:Src/main.c    **** void _Error_Handler(char * file, int line)
 233:Src/main.c    **** {
  26              		.loc 1 233 0
  27              		.cfi_startproc
  28              		@ Volatile: function does not return.
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  34 0000 FEE7     		b	.L2
  35              		.cfi_endproc
  36              	.LFE37:
  38              		.global	__aeabi_uidiv
  39              		.section	.text.SystemClock_Config,"ax",%progbits
  40              		.align	1
  41              		.global	SystemClock_Config
  42              		.syntax unified
  43              		.code	16
  44              		.thumb_func
  45              		.fpu softvfp
  47              	SystemClock_Config:
  48              	.LFB36:
 169:Src/main.c    **** 
  49              		.loc 1 169 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 96
  52              		@ frame_needed = 0, uses_anonymous_args = 0
 169:Src/main.c    **** 
  53              		.loc 1 169 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 6


  54 0000 00B5     		push	{lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57              		.cfi_offset 14, -4
  58 0002 99B0     		sub	sp, sp, #100
  59              	.LCFI1:
  60              		.cfi_def_cfa_offset 104
 177:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  61              		.loc 1 177 0
  62 0004 1123     		movs	r3, #17
  63 0006 0B93     		str	r3, [sp, #44]
 178:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  64              		.loc 1 178 0
  65 0008 103B     		subs	r3, r3, #16
  66 000a 0C93     		str	r3, [sp, #48]
 179:Src/main.c    ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
  67              		.loc 1 179 0
  68 000c 0E93     		str	r3, [sp, #56]
 180:Src/main.c    ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
  69              		.loc 1 180 0
  70 000e 1093     		str	r3, [sp, #64]
 181:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 181 0
  72 0010 0F33     		adds	r3, r3, #15
  73 0012 1193     		str	r3, [sp, #68]
 182:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  74              		.loc 1 182 0
  75 0014 0E3B     		subs	r3, r3, #14
  76 0016 1493     		str	r3, [sp, #80]
 183:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL15;
  77              		.loc 1 183 0
  78 0018 8022     		movs	r2, #128
  79 001a 5202     		lsls	r2, r2, #9
  80 001c 1592     		str	r2, [sp, #84]
 184:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV3;
  81              		.loc 1 184 0
  82 001e D022     		movs	r2, #208
  83 0020 9203     		lsls	r2, r2, #14
  84 0022 1692     		str	r2, [sp, #88]
 185:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  85              		.loc 1 185 0
  86 0024 1793     		str	r3, [sp, #92]
 186:Src/main.c    ****   {
  87              		.loc 1 186 0
  88 0026 0BA8     		add	r0, sp, #44
  89 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
  90              	.LVL1:
  91 002c 0028     		cmp	r0, #0
  92 002e 28D1     		bne	.L7
 193:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 193 0
  94 0030 0723     		movs	r3, #7
  95 0032 0793     		str	r3, [sp, #28]
 195:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  96              		.loc 1 195 0
  97 0034 053B     		subs	r3, r3, #5
  98 0036 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 7


 196:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  99              		.loc 1 196 0
 100 0038 0023     		movs	r3, #0
 101 003a 0993     		str	r3, [sp, #36]
 197:Src/main.c    **** 
 102              		.loc 1 197 0
 103 003c 0A93     		str	r3, [sp, #40]
 199:Src/main.c    ****   {
 104              		.loc 1 199 0
 105 003e 0121     		movs	r1, #1
 106 0040 07A8     		add	r0, sp, #28
 107 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 108              	.LVL2:
 109 0046 0028     		cmp	r0, #0
 110 0048 1FD1     		bne	.L8
 204:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_SYSCLK;
 111              		.loc 1 204 0
 112 004a 2023     		movs	r3, #32
 113 004c 0193     		str	r3, [sp, #4]
 205:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 114              		.loc 1 205 0
 115 004e 103B     		subs	r3, r3, #16
 116 0050 0493     		str	r3, [sp, #16]
 206:Src/main.c    ****   {
 117              		.loc 1 206 0
 118 0052 01A8     		add	r0, sp, #4
 119 0054 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 120              	.LVL3:
 121 0058 0028     		cmp	r0, #0
 122 005a 1AD1     		bne	.L9
 213:Src/main.c    **** 
 123              		.loc 1 213 0
 124 005c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 125              	.LVL4:
 126 0060 FA21     		movs	r1, #250
 127 0062 8900     		lsls	r1, r1, #2
 128 0064 FFF7FEFF 		bl	__aeabi_uidiv
 129              	.LVL5:
 130 0068 FFF7FEFF 		bl	HAL_SYSTICK_Config
 131              	.LVL6:
 217:Src/main.c    **** 
 132              		.loc 1 217 0
 133 006c 0420     		movs	r0, #4
 134 006e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 135              	.LVL7:
 220:Src/main.c    **** }
 136              		.loc 1 220 0
 137 0072 0022     		movs	r2, #0
 138 0074 0021     		movs	r1, #0
 139 0076 0120     		movs	r0, #1
 140 0078 4042     		rsbs	r0, r0, #0
 141 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 142              	.LVL8:
 221:Src/main.c    **** 
 143              		.loc 1 221 0
 144 007e 19B0     		add	sp, sp, #100
 145              		@ sp needed
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 8


 146 0080 00BD     		pop	{pc}
 147              	.L7:
 188:Src/main.c    ****   }
 148              		.loc 1 188 0
 149 0082 BC21     		movs	r1, #188
 150 0084 0548     		ldr	r0, .L10
 151 0086 FFF7FEFF 		bl	_Error_Handler
 152              	.LVL9:
 153              	.L8:
 201:Src/main.c    ****   }
 154              		.loc 1 201 0
 155 008a C921     		movs	r1, #201
 156 008c 0348     		ldr	r0, .L10
 157 008e FFF7FEFF 		bl	_Error_Handler
 158              	.LVL10:
 159              	.L9:
 208:Src/main.c    ****   }
 160              		.loc 1 208 0
 161 0092 D021     		movs	r1, #208
 162 0094 0148     		ldr	r0, .L10
 163 0096 FFF7FEFF 		bl	_Error_Handler
 164              	.LVL11:
 165              	.L11:
 166 009a C046     		.align	2
 167              	.L10:
 168 009c 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE36:
 172              		.section	.text.main,"ax",%progbits
 173              		.align	1
 174              		.global	main
 175              		.syntax unified
 176              		.code	16
 177              		.thumb_func
 178              		.fpu softvfp
 180              	main:
 181              	.LFB35:
  75:Src/main.c    **** 
 182              		.loc 1 75 0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 248
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 00B5     		push	{lr}
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 14, -4
 191 0002 C1B0     		sub	sp, sp, #260
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 264
  85:Src/main.c    **** 
 194              		.loc 1 85 0
 195 0004 FFF7FEFF 		bl	HAL_Init
 196              	.LVL12:
  92:Src/main.c    **** 
 197              		.loc 1 92 0
 198 0008 FFF7FEFF 		bl	SystemClock_Config
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 9


 199              	.LVL13:
  99:Src/main.c    ****   MX_CAN_Init();
 200              		.loc 1 99 0
 201 000c FFF7FEFF 		bl	MX_GPIO_Init
 202              	.LVL14:
 100:Src/main.c    ****   MX_I2C1_Init();
 203              		.loc 1 100 0
 204 0010 FFF7FEFF 		bl	MX_CAN_Init
 205              	.LVL15:
 101:Src/main.c    ****   MX_ADC_Init();
 206              		.loc 1 101 0
 207 0014 FFF7FEFF 		bl	MX_I2C1_Init
 208              	.LVL16:
 102:Src/main.c    ****   MX_TIM1_Init();
 209              		.loc 1 102 0
 210 0018 FFF7FEFF 		bl	MX_ADC_Init
 211              	.LVL17:
 103:Src/main.c    ****   MX_TIM3_Init();
 212              		.loc 1 103 0
 213 001c FFF7FEFF 		bl	MX_TIM1_Init
 214              	.LVL18:
 104:Src/main.c    **** 
 215              		.loc 1 104 0
 216 0020 FFF7FEFF 		bl	MX_TIM3_Init
 217              	.LVL19:
 107:Src/main.c    ****   TM_MPU6050_EnableInterrupts(&MPU6050_Data);
 218              		.loc 1 107 0
 219 0024 0223     		movs	r3, #2
 220 0026 0093     		str	r3, [sp]
 221 0028 0023     		movs	r3, #0
 222 002a 0222     		movs	r2, #2
 223 002c 0021     		movs	r1, #0
 224 002e 02A8     		add	r0, sp, #8
 225 0030 FFF7FEFF 		bl	TM_MPU6050_Init
 226              	.LVL20:
 108:Src/main.c    ****   TM_MPU6050_GeneralCallib(&MPU6050_Data);
 227              		.loc 1 108 0
 228 0034 02A8     		add	r0, sp, #8
 229 0036 FFF7FEFF 		bl	TM_MPU6050_EnableInterrupts
 230              	.LVL21:
 109:Src/main.c    ****   //TM_MPU6050_FastCallib(&MPU6050_Data);
 231              		.loc 1 109 0
 232 003a 02A8     		add	r0, sp, #8
 233 003c FFF7FEFF 		bl	TM_MPU6050_GeneralCallib
 234              	.LVL22:
 111:Src/main.c    ****   MPU6050_Data.Accelerometer_Offset.y = 0;
 235              		.loc 1 111 0
 236 0040 0022     		movs	r2, #0
 237 0042 0023     		movs	r3, #0
 238 0044 1292     		str	r2, [sp, #72]
 239 0046 1393     		str	r3, [sp, #76]
 112:Src/main.c    ****   MPU6050_Data.Accelerometer_Offset.z = 0;
 240              		.loc 1 112 0
 241 0048 1492     		str	r2, [sp, #80]
 242 004a 1593     		str	r3, [sp, #84]
 113:Src/main.c    ****   MPU6050_Data.Gyroscope_Offset.x = 0;
 243              		.loc 1 113 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 10


 244 004c 1692     		str	r2, [sp, #88]
 245 004e 1793     		str	r3, [sp, #92]
 114:Src/main.c    ****   MPU6050_Data.Gyroscope_Offset.y = 0;
 246              		.loc 1 114 0
 247 0050 2C92     		str	r2, [sp, #176]
 248 0052 2D93     		str	r3, [sp, #180]
 115:Src/main.c    ****   MPU6050_Data.Gyroscope_Offset.z = 0;
 249              		.loc 1 115 0
 250 0054 2E92     		str	r2, [sp, #184]
 251 0056 2F93     		str	r3, [sp, #188]
 116:Src/main.c    ****   /* USER CODE END 2 */
 252              		.loc 1 116 0
 253 0058 3092     		str	r2, [sp, #192]
 254 005a 3193     		str	r3, [sp, #196]
 123:Src/main.c    ****   while (1)
 255              		.loc 1 123 0
 256 005c FFF7FEFF 		bl	CANhandler_Init
 257              	.LVL23:
 258 0060 01E0     		b	.L13
 259              	.L16:
 149:Src/main.c    **** 	}
 260              		.loc 1 149 0
 261 0062 FFF7FEFF 		bl	StopLight_Set
 262              	.LVL24:
 263              	.L13:
 137:Src/main.c    **** 
 264              		.loc 1 137 0
 265 0066 FFF7FEFF 		bl	CANhandler_Handler
 266              	.LVL25:
 148:Src/main.c    **** 	  StopLight_Set();
 267              		.loc 1 148 0
 268 006a 054A     		ldr	r2, .L17
 269 006c 1368     		ldr	r3, [r2]
 270 006e 1968     		ldr	r1, [r3]
 271 0070 1368     		ldr	r3, [r2]
 272 0072 1B7A     		ldrb	r3, [r3, #8]
 273 0074 4B43     		muls	r3, r1
 274 0076 FF2B     		cmp	r3, #255
 275 0078 F3D0     		beq	.L16
 152:Src/main.c    **** 	}
 276              		.loc 1 152 0
 277 007a FFF7FEFF 		bl	StopLight_Clr
 278              	.LVL26:
 279 007e F2E7     		b	.L13
 280              	.L18:
 281              		.align	2
 282              	.L17:
 283 0080 00000000 		.word	handle
 284              		.cfi_endproc
 285              	.LFE35:
 287              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 288              		.align	2
 289              	.LC0:
 290 0000 5372632F 		.ascii	"Src/main.c\000"
 290      6D61696E 
 290      2E6300
 291              		.text
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 11


 292              	.Letext0:
 293              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 294              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 295              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 296              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 297              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 298              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 299              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 300              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 301              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 302              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 303              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 304              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 305              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 306              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 307              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 308              		.file 17 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 309              		.file 18 "Inc/adc.h"
 310              		.file 19 "Inc/can.h"
 311              		.file 20 "Inc/i2c.h"
 312              		.file 21 "Inc/tim.h"
 313              		.file 22 "Inc/tm_stm32_mpu6050.h"
 314              		.file 23 "Inc/CANhandler.h"
 315              		.file 24 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 316              		.file 25 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 317              		.file 26 "Inc/gpio.h"
 318              		.file 27 "Inc/stop_light.h"
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:16     .text._Error_Handler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:23     .text._Error_Handler:00000000 _Error_Handler
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:40     .text.SystemClock_Config:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:47     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:168    .text.SystemClock_Config:0000009c $d
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:173    .text.main:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:180    .text.main:00000000 main
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:283    .text.main:00000080 $d
C:\Users\Wojciech\AppData\Local\Temp\ccAiM32Y.s:288    .rodata.SystemClock_Config.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_CAN_Init
MX_I2C1_Init
MX_ADC_Init
MX_TIM1_Init
MX_TIM3_Init
TM_MPU6050_Init
TM_MPU6050_EnableInterrupts
TM_MPU6050_GeneralCallib
CANhandler_Init
StopLight_Set
CANhandler_Handler
StopLight_Clr
handle
