ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_can.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_CAN_ConfigFilter
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_CAN_ConfigFilter:
  24              	.LFB36:
  25              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @file    stm32f0xx_hal_can.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Initialization and de-initialization functions 
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + IO operation functions
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *           + Peripheral State and Error functions
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   @verbatim
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================    
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]            
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Enable the CAN controller interface clock using __HAL_RCC_CAN1_CLK_ENABLE(); 
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) CAN pins configuration
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (++) Enable the clock for the CAN GPIOs using the following function:
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();   
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (++) Connect and configure the involved CAN pins to AF9 using the 
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****               following function HAL_GPIO_Init(); 
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****               
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Initialise and configure the CAN using HAL_CAN_Init() function.   
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                  
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Transmit the desired CAN frame using HAL_CAN_Transmit() function.
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Or transmit the desired CAN frame using HAL_CAN_Transmit_IT() function.
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Receive a CAN frame using HAL_CAN_Receive() function.
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 2


  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (#) Or receive a CAN frame using HAL_CAN_Receive_IT() function.
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      *** Polling mode IO operation ***
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      =================================
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      [..]    
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) Start the CAN peripheral transmission and wait the end of this operation 
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****            using HAL_CAN_Transmit(), at this stage user can specify the value of timeout
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****            according to his end application
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) Start the CAN peripheral reception and wait the end of this operation 
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****            using HAL_CAN_Receive(), at this stage user can specify the value of timeout
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****            according to his end application 
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      *** Interrupt mode IO operation ***    
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ===================================
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      [..]    
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) Start the CAN peripheral transmission using HAL_CAN_Transmit_IT()
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) Start the CAN peripheral reception using HAL_CAN_Receive_IT()         
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) Use HAL_CAN_IRQHandler() called under the used CAN Interrupt subroutine
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) At CAN end of transmission HAL_CAN_TxCpltCallback() function is executed and user can 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_TxCpltCallback 
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (+) In case of CAN Error, HAL_CAN_ErrorCallback() function is executed and user can 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             add his own code by customization of function pointer HAL_CAN_ErrorCallback
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      *** CAN HAL driver macros list ***
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ============================================= 
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      [..]
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        Below the list of most used macros in CAN HAL driver.
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) __HAL_CAN_ENABLE_IT: Enable the specified CAN interrupts
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) __HAL_CAN_DISABLE_IT: Disable the specified CAN interrupts
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) __HAL_CAN_GET_IT_SOURCE: Check if the specified CAN interrupt source is enabled or disabl
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) __HAL_CAN_CLEAR_FLAG: Clear the CAN's pending flags
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) __HAL_CAN_GET_FLAG: Get the selected CAN's flag status
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      [..] 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (@) You can refer to the CAN HAL driver header file for more useful macros 
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   @endverbatim
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****            
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @attention
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * Redistribution and use in source and binary forms, with or without modification,
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * are permitted provided that the following conditions are met:
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *      this list of conditions and the following disclaimer.
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *      this list of conditions and the following disclaimer in the documentation
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *      and/or other materials provided with the distribution.
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *      may be used to endorse or promote products derived from this software
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *      without specific prior written permission.
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 3


  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ******************************************************************************  
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #include "stm32f0xx_hal.h"
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED  
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #if defined(STM32F072xB) || defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F091xC) ||
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @addtogroup STM32F0xx_HAL_Driver
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN CAN
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief CAN driver modules
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */ 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Private_Functions CAN Private Functions
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber);
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan);
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /* Exported functions ---------------------------------------------------------*/
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions 
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *  @brief    Initialization and Configuration functions 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 4


 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim    
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]  This section provides functions allowing to:
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Initialize and configure the CAN. 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) De-initialize the CAN. 
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief Initializes the CAN peripheral according to the specified
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *        parameters in the CAN_InitStruct.
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *             the configuration information for the specified CAN.  
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef* hcan)
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart = 0U;
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(hcan == NULL)
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      return HAL_ERROR;
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TTCM));
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ABOM));
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AWUM));
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.NART));
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.RFLM));
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TXFP));
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SJW));
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.BS1));
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.BS2));
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_RESET)
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Allocate lock resource and initialize it */
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Lock = HAL_UNLOCKED;
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Init the low level hardware */
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Initialize the CAN state*/
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Exit from sleep mode */
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 5


 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Request initialisation */
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get tick */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   tickstart = HAL_GetTick();   
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Wait the acknowledge */
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   while(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Process unlocked */
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_UNLOCK(hcan);
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_TIMEOUT;
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check acknowledge */
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the time triggered communication mode */
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->Init.TTCM == ENABLE)
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the automatic bus-off management */
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->Init.ABOM == ENABLE)
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the automatic wake-up mode */
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->Init.AWUM == ENABLE)
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the no automatic retransmission */
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->Init.NART == ENABLE)
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 6


 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the receive FIFO locked mode */
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->Init.RFLM == ENABLE)
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the transmit FIFO priority */
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->Init.TXFP == ENABLE)
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the bit timing register */
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                               hcan->Init.SJW            |
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                               hcan->Init.BS1            |
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                               hcan->Init.BS2            |
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                               (hcan->Init.Prescaler - 1U) ));
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Request leave initialisation */
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get tick */
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     tickstart = HAL_GetTick();   
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Wait the acknowledge */
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK))
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if((HAL_GetTick()-tickstart) > CAN_TIMEOUT_VALUE)
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          hcan->State= HAL_CAN_STATE_TIMEOUT;
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        /* Process unlocked */
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        __HAL_UNLOCK(hcan);
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        return HAL_TIMEOUT;
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check acknowledged */
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if(HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_INAK))
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       status = CAN_INITSTATUS_SUCCESS;
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 7


 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(status == CAN_INITSTATUS_SUCCESS)
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to none */
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Initialize the CAN state */
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Initialize the CAN state */
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  sFilterConfig: pointer to a CAN_FilterConfTypeDef structure that
 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         contains the filter configuration information.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef* hcan, CAN_FilterConfTypeDef* sFilterConfi
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
  26              		.loc 1 353 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39              	.LVL1:
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t filternbrbitpos = 0U;
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(sFilterConfig->FilterNumber));
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(sFilterConfig->FilterActivation));
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 8


 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_BANKNUMBER(sFilterConfig->BankNumber));
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   filternbrbitpos = (1U) << sFilterConfig->FilterNumber;
  40              		.loc 1 364 0
  41 0002 0127     		movs	r7, #1
  42 0004 3A00     		movs	r2, r7
  43 0006 4B69     		ldr	r3, [r1, #20]
  44 0008 9A40     		lsls	r2, r2, r3
  45              	.LVL2:
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Initialisation mode for the filter */
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Select the start slave bank */
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   MODIFY_REG(hcan->Instance->FMR                         ,
  46              		.loc 1 368 0
  47 000a 0468     		ldr	r4, [r0]
  48 000c 8026     		movs	r6, #128
  49 000e B600     		lsls	r6, r6, #2
  50 0010 A359     		ldr	r3, [r4, r6]
  51 0012 414D     		ldr	r5, .L11
  52 0014 2B40     		ands	r3, r5
  53 0016 4D6A     		ldr	r5, [r1, #36]
  54 0018 2D02     		lsls	r5, r5, #8
  55 001a 2B43     		orrs	r3, r5
  56 001c 3B43     		orrs	r3, r7
  57 001e A351     		str	r3, [r4, r6]
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              CAN_FMR_CAN2SB                              ,
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              CAN_FMR_FINIT                              |
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              (uint32_t)(sFilterConfig->BankNumber << 8U)   );  /* Filter Deactivation */
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FA1R, filternbrbitpos);
  58              		.loc 1 372 0
  59 0020 0668     		ldr	r6, [r0]
  60 0022 8725     		movs	r5, #135
  61 0024 AD00     		lsls	r5, r5, #2
  62 0026 7359     		ldr	r3, [r6, r5]
  63 0028 D443     		mvns	r4, r2
  64 002a 2340     		ands	r3, r4
  65 002c 7351     		str	r3, [r6, r5]
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Filter Scale */
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
  66              		.loc 1 375 0
  67 002e CB69     		ldr	r3, [r1, #28]
  68 0030 002B     		cmp	r3, #0
  69 0032 1CD1     		bne	.L2
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* 16-bit scale for the filter */
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FS1R, filternbrbitpos);
  70              		.loc 1 378 0
  71 0034 0668     		ldr	r6, [r0]
  72 0036 103D     		subs	r5, r5, #16
  73 0038 7359     		ldr	r3, [r6, r5]
  74 003a 2340     		ands	r3, r4
  75 003c 7351     		str	r3, [r6, r5]
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 9


 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  76              		.loc 1 383 0
  77 003e CB68     		ldr	r3, [r1, #12]
  78 0040 1D04     		lsls	r5, r3, #16
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  79              		.loc 1 384 0
  80 0042 4B68     		ldr	r3, [r1, #4]
  81 0044 1B04     		lsls	r3, r3, #16
  82 0046 1B0C     		lsrs	r3, r3, #16
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
  83              		.loc 1 383 0
  84 0048 1D43     		orrs	r5, r3
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
  85              		.loc 1 382 0
  86 004a 4B69     		ldr	r3, [r1, #20]
  87 004c 4833     		adds	r3, r3, #72
  88 004e DB00     		lsls	r3, r3, #3
  89 0050 0668     		ldr	r6, [r0]
  90 0052 9D51     		str	r5, [r3, r6]
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
  91              		.loc 1 389 0
  92 0054 8B68     		ldr	r3, [r1, #8]
  93 0056 1B04     		lsls	r3, r3, #16
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  94              		.loc 1 390 0
  95 0058 0D68     		ldr	r5, [r1]
  96 005a 2D04     		lsls	r5, r5, #16
  97 005c 2D0C     		lsrs	r5, r5, #16
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
  98              		.loc 1 389 0
  99 005e 2B43     		orrs	r3, r5
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 100              		.loc 1 388 0
 101 0060 4D69     		ldr	r5, [r1, #20]
 102 0062 4835     		adds	r5, r5, #72
 103 0064 ED00     		lsls	r5, r5, #3
 104 0066 0668     		ldr	r6, [r0]
 105 0068 B446     		mov	ip, r6
 106 006a 6544     		add	r5, r5, ip
 107 006c 6B60     		str	r3, [r5, #4]
 108              	.L2:
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 109              		.loc 1 393 0
 110 006e CB69     		ldr	r3, [r1, #28]
 111 0070 012B     		cmp	r3, #1
 112 0072 1DD0     		beq	.L9
 113              	.L3:
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* 32-bit scale for the filter */
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->FS1R, filternbrbitpos);
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 10


 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR1 = 
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sFilterRegister[sFilterConfig->FilterNumber].FR2 = 
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Filter Mode */
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 114              		.loc 1 410 0
 115 0074 8B69     		ldr	r3, [r1, #24]
 116 0076 002B     		cmp	r3, #0
 117 0078 39D1     		bne	.L4
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*Id/Mask mode for the filter*/
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FM1R, filternbrbitpos);
 118              		.loc 1 413 0
 119 007a 0668     		ldr	r6, [r0]
 120 007c 8125     		movs	r5, #129
 121 007e AD00     		lsls	r5, r5, #2
 122 0080 7359     		ldr	r3, [r6, r5]
 123 0082 2340     		ands	r3, r4
 124 0084 7351     		str	r3, [r6, r5]
 125              	.L5:
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*Identifier list mode for the filter*/
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->FM1R, filternbrbitpos);
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Filter FIFO assignment */
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 126              		.loc 1 422 0
 127 0086 0B69     		ldr	r3, [r1, #16]
 128 0088 002B     		cmp	r3, #0
 129 008a 37D1     		bne	.L6
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* FIFO 0 assignation for the filter */
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->FFA1R, filternbrbitpos);
 130              		.loc 1 425 0
 131 008c 0668     		ldr	r6, [r0]
 132 008e 8525     		movs	r5, #133
 133 0090 AD00     		lsls	r5, r5, #2
 134 0092 7359     		ldr	r3, [r6, r5]
 135 0094 1C40     		ands	r4, r3
 136 0096 7451     		str	r4, [r6, r5]
 137              	.L7:
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* FIFO 1 assignation for the filter */
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->FFA1R, filternbrbitpos);
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 11


 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Filter activation */
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (sFilterConfig->FilterActivation == ENABLE)
 138              		.loc 1 434 0
 139 0098 0B6A     		ldr	r3, [r1, #32]
 140 009a 012B     		cmp	r3, #1
 141 009c 35D0     		beq	.L10
 142              	.LVL3:
 143              	.L8:
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->FA1R, filternbrbitpos);
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Leave the initialisation mode for the filter */
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->FMR, ((uint32_t)CAN_FMR_FINIT));
 144              		.loc 1 440 0
 145 009e 0168     		ldr	r1, [r0]
 146 00a0 8022     		movs	r2, #128
 147 00a2 9200     		lsls	r2, r2, #2
 148 00a4 8B58     		ldr	r3, [r1, r2]
 149 00a6 0120     		movs	r0, #1
 150              	.LVL4:
 151 00a8 8343     		bics	r3, r0
 152 00aa 8B50     		str	r3, [r1, r2]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 153              		.loc 1 444 0
 154 00ac 0020     		movs	r0, #0
 155              		@ sp needed
 156 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 157              	.LVL5:
 158              	.L9:
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 159              		.loc 1 396 0
 160 00b0 0668     		ldr	r6, [r0]
 161 00b2 8325     		movs	r5, #131
 162 00b4 AD00     		lsls	r5, r5, #2
 163 00b6 7359     		ldr	r3, [r6, r5]
 164 00b8 1343     		orrs	r3, r2
 165 00ba 7351     		str	r3, [r6, r5]
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 166              		.loc 1 400 0
 167 00bc 0B68     		ldr	r3, [r1]
 168 00be 1D04     		lsls	r5, r3, #16
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 169              		.loc 1 401 0
 170 00c0 4B68     		ldr	r3, [r1, #4]
 171 00c2 1B04     		lsls	r3, r3, #16
 172 00c4 1B0C     		lsrs	r3, r3, #16
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 173              		.loc 1 400 0
 174 00c6 1D43     		orrs	r5, r3
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 175              		.loc 1 399 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 12


 176 00c8 4B69     		ldr	r3, [r1, #20]
 177 00ca 4833     		adds	r3, r3, #72
 178 00cc DB00     		lsls	r3, r3, #3
 179 00ce 0668     		ldr	r6, [r0]
 180 00d0 9D51     		str	r5, [r3, r6]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 181              		.loc 1 405 0
 182 00d2 8B68     		ldr	r3, [r1, #8]
 183 00d4 1B04     		lsls	r3, r3, #16
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 184              		.loc 1 406 0
 185 00d6 CD68     		ldr	r5, [r1, #12]
 186 00d8 2D04     		lsls	r5, r5, #16
 187 00da 2D0C     		lsrs	r5, r5, #16
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 188              		.loc 1 405 0
 189 00dc 2B43     		orrs	r3, r5
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 190              		.loc 1 404 0
 191 00de 4D69     		ldr	r5, [r1, #20]
 192 00e0 4835     		adds	r5, r5, #72
 193 00e2 ED00     		lsls	r5, r5, #3
 194 00e4 0668     		ldr	r6, [r0]
 195 00e6 B446     		mov	ip, r6
 196 00e8 6544     		add	r5, r5, ip
 197 00ea 6B60     		str	r3, [r5, #4]
 198 00ec C2E7     		b	.L3
 199              	.L4:
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 200              		.loc 1 418 0
 201 00ee 0668     		ldr	r6, [r0]
 202 00f0 8125     		movs	r5, #129
 203 00f2 AD00     		lsls	r5, r5, #2
 204 00f4 7359     		ldr	r3, [r6, r5]
 205 00f6 1343     		orrs	r3, r2
 206 00f8 7351     		str	r3, [r6, r5]
 207 00fa C4E7     		b	.L5
 208              	.L6:
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 209              		.loc 1 430 0
 210 00fc 0568     		ldr	r5, [r0]
 211 00fe 8524     		movs	r4, #133
 212 0100 A400     		lsls	r4, r4, #2
 213 0102 2B59     		ldr	r3, [r5, r4]
 214 0104 1343     		orrs	r3, r2
 215 0106 2B51     		str	r3, [r5, r4]
 216 0108 C6E7     		b	.L7
 217              	.L10:
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 218              		.loc 1 436 0
 219 010a 0168     		ldr	r1, [r0]
 220              	.LVL6:
 221 010c 8723     		movs	r3, #135
 222 010e 9B00     		lsls	r3, r3, #2
 223 0110 CC58     		ldr	r4, [r1, r3]
 224 0112 2243     		orrs	r2, r4
 225              	.LVL7:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 13


 226 0114 CA50     		str	r2, [r1, r3]
 227 0116 C2E7     		b	.L8
 228              	.L12:
 229              		.align	2
 230              	.L11:
 231 0118 FFC0FFFF 		.word	-16129
 232              		.cfi_endproc
 233              	.LFE36:
 235              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
 236              		.align	1
 237              		.weak	HAL_CAN_MspInit
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 241              		.fpu softvfp
 243              	HAL_CAN_MspInit:
 244              	.LFB38:
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Deinitializes the CANx peripheral registers to their default reset values. 
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef* hcan)
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(hcan == NULL)
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      return HAL_ERROR;
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* DeInit the low level hardware */
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Release Lock */
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 14


 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 245              		.loc 1 486 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              	.LVL8:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */ 
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 251              		.loc 1 493 0
 252              		@ sp needed
 253 0000 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE38:
 257              		.section	.text.HAL_CAN_Init,"ax",%progbits
 258              		.align	1
 259              		.global	HAL_CAN_Init
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
 263              		.fpu softvfp
 265              	HAL_CAN_Init:
 266              	.LFB35:
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t status = CAN_INITSTATUS_FAILED;  /* Default init status */
 267              		.loc 1 169 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              	.LVL9:
 272 0000 70B5     		push	{r4, r5, r6, lr}
 273              	.LCFI1:
 274              		.cfi_def_cfa_offset 16
 275              		.cfi_offset 4, -16
 276              		.cfi_offset 5, -12
 277              		.cfi_offset 6, -8
 278              		.cfi_offset 14, -4
 279 0002 041E     		subs	r4, r0, #0
 280              	.LVL10:
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 281              		.loc 1 174 0
 282 0004 00D1     		bne	.LCB260
 283 0006 B9E0     		b	.L35	@long jump
 284              	.LCB260:
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 285              		.loc 1 193 0
 286 0008 3D23     		movs	r3, #61
 287 000a C35C     		ldrb	r3, [r0, r3]
 288 000c 002B     		cmp	r3, #0
 289 000e 1FD0     		beq	.L38
 290              	.LVL11:
 291              	.L16:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 15


 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 292              		.loc 1 202 0
 293 0010 0221     		movs	r1, #2
 294 0012 3D23     		movs	r3, #61
 295 0014 E154     		strb	r1, [r4, r3]
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 296              		.loc 1 205 0
 297 0016 2268     		ldr	r2, [r4]
 298 0018 1368     		ldr	r3, [r2]
 299 001a 8B43     		bics	r3, r1
 300 001c 1360     		str	r3, [r2]
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 301              		.loc 1 208 0
 302 001e 2268     		ldr	r2, [r4]
 303 0020 1368     		ldr	r3, [r2]
 304 0022 0139     		subs	r1, r1, #1
 305 0024 0B43     		orrs	r3, r1
 306 0026 1360     		str	r3, [r2]
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 307              		.loc 1 211 0
 308 0028 FFF7FEFF 		bl	HAL_GetTick
 309              	.LVL12:
 310 002c 0500     		movs	r5, r0
 311              	.LVL13:
 312              	.L17:
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 313              		.loc 1 214 0
 314 002e 2368     		ldr	r3, [r4]
 315 0030 5A68     		ldr	r2, [r3, #4]
 316 0032 D207     		lsls	r2, r2, #31
 317 0034 12D4     		bmi	.L39
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 318              		.loc 1 216 0
 319 0036 FFF7FEFF 		bl	HAL_GetTick
 320              	.LVL14:
 321 003a 401B     		subs	r0, r0, r5
 322 003c 0A28     		cmp	r0, #10
 323 003e F6D9     		bls	.L17
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Process unlocked */
 324              		.loc 1 218 0
 325 0040 0322     		movs	r2, #3
 326 0042 3D23     		movs	r3, #61
 327 0044 E254     		strb	r2, [r4, r3]
 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_TIMEOUT;
 328              		.loc 1 220 0
 329 0046 0022     		movs	r2, #0
 330 0048 013B     		subs	r3, r3, #1
 331 004a E254     		strb	r2, [r4, r3]
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 332              		.loc 1 221 0
 333 004c 0320     		movs	r0, #3
 334              	.LVL15:
 335              	.L15:
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 336              		.loc 1 341 0
 337              		@ sp needed
 338              	.LVL16:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 16


 339 004e 70BD     		pop	{r4, r5, r6, pc}
 340              	.LVL17:
 341              	.L38:
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Init the low level hardware */
 342              		.loc 1 196 0
 343 0050 0022     		movs	r2, #0
 344 0052 3C33     		adds	r3, r3, #60
 345 0054 C254     		strb	r2, [r0, r3]
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 346              		.loc 1 198 0
 347 0056 FFF7FEFF 		bl	HAL_CAN_MspInit
 348              	.LVL18:
 349 005a D9E7     		b	.L16
 350              	.LVL19:
 351              	.L39:
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 352              		.loc 1 226 0
 353 005c 5A68     		ldr	r2, [r3, #4]
 354 005e D207     		lsls	r2, r2, #31
 355 0060 7BD5     		bpl	.L36
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 356              		.loc 1 229 0
 357 0062 A269     		ldr	r2, [r4, #24]
 358 0064 012A     		cmp	r2, #1
 359 0066 50D0     		beq	.L40
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 360              		.loc 1 235 0
 361 0068 1A68     		ldr	r2, [r3]
 362 006a 8021     		movs	r1, #128
 363 006c 8A43     		bics	r2, r1
 364 006e 1A60     		str	r2, [r3]
 365              	.L21:
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 366              		.loc 1 239 0
 367 0070 E369     		ldr	r3, [r4, #28]
 368 0072 012B     		cmp	r3, #1
 369 0074 4ED0     		beq	.L41
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 370              		.loc 1 245 0
 371 0076 2268     		ldr	r2, [r4]
 372 0078 1368     		ldr	r3, [r2]
 373 007a 4021     		movs	r1, #64
 374 007c 8B43     		bics	r3, r1
 375 007e 1360     		str	r3, [r2]
 376              	.L23:
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 377              		.loc 1 249 0
 378 0080 236A     		ldr	r3, [r4, #32]
 379 0082 012B     		cmp	r3, #1
 380 0084 4CD0     		beq	.L42
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 381              		.loc 1 255 0
 382 0086 2268     		ldr	r2, [r4]
 383 0088 1368     		ldr	r3, [r2]
 384 008a 2021     		movs	r1, #32
 385 008c 8B43     		bics	r3, r1
 386 008e 1360     		str	r3, [r2]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 17


 387              	.L25:
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 388              		.loc 1 259 0
 389 0090 636A     		ldr	r3, [r4, #36]
 390 0092 012B     		cmp	r3, #1
 391 0094 4AD0     		beq	.L43
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 392              		.loc 1 265 0
 393 0096 2268     		ldr	r2, [r4]
 394 0098 1368     		ldr	r3, [r2]
 395 009a 1021     		movs	r1, #16
 396 009c 8B43     		bics	r3, r1
 397 009e 1360     		str	r3, [r2]
 398              	.L27:
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 399              		.loc 1 269 0
 400 00a0 A36A     		ldr	r3, [r4, #40]
 401 00a2 012B     		cmp	r3, #1
 402 00a4 48D0     		beq	.L44
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 403              		.loc 1 275 0
 404 00a6 2268     		ldr	r2, [r4]
 405 00a8 1368     		ldr	r3, [r2]
 406 00aa 0821     		movs	r1, #8
 407 00ac 8B43     		bics	r3, r1
 408 00ae 1360     		str	r3, [r2]
 409              	.L29:
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 410              		.loc 1 279 0
 411 00b0 E36A     		ldr	r3, [r4, #44]
 412 00b2 012B     		cmp	r3, #1
 413 00b4 46D0     		beq	.L45
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 414              		.loc 1 285 0
 415 00b6 2268     		ldr	r2, [r4]
 416 00b8 1368     		ldr	r3, [r2]
 417 00ba 0421     		movs	r1, #4
 418 00bc 8B43     		bics	r3, r1
 419 00be 1360     		str	r3, [r2]
 420              	.L31:
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                               hcan->Init.SJW            |
 421              		.loc 1 289 0
 422 00c0 2168     		ldr	r1, [r4]
 423 00c2 A368     		ldr	r3, [r4, #8]
 424 00c4 E268     		ldr	r2, [r4, #12]
 425 00c6 1343     		orrs	r3, r2
 426 00c8 2269     		ldr	r2, [r4, #16]
 427 00ca 1343     		orrs	r3, r2
 428 00cc 6269     		ldr	r2, [r4, #20]
 429 00ce 1343     		orrs	r3, r2
 430 00d0 6268     		ldr	r2, [r4, #4]
 431 00d2 013A     		subs	r2, r2, #1
 432 00d4 1343     		orrs	r3, r2
 433 00d6 CB61     		str	r3, [r1, #28]
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 434              		.loc 1 296 0
 435 00d8 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 18


 436 00da 1368     		ldr	r3, [r2]
 437 00dc 0121     		movs	r1, #1
 438 00de 8B43     		bics	r3, r1
 439 00e0 1360     		str	r3, [r2]
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    
 440              		.loc 1 299 0
 441 00e2 FFF7FEFF 		bl	HAL_GetTick
 442              	.LVL20:
 443 00e6 0500     		movs	r5, r0
 444              	.LVL21:
 445              	.L32:
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 446              		.loc 1 302 0
 447 00e8 2368     		ldr	r3, [r4]
 448 00ea 5A68     		ldr	r2, [r3, #4]
 449 00ec D207     		lsls	r2, r2, #31
 450 00ee 2FD5     		bpl	.L46
 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 451              		.loc 1 304 0
 452 00f0 FFF7FEFF 		bl	HAL_GetTick
 453              	.LVL22:
 454 00f4 401B     		subs	r0, r0, r5
 455 00f6 0A28     		cmp	r0, #10
 456 00f8 F6D9     		bls	.L32
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 457              		.loc 1 306 0
 458 00fa 0322     		movs	r2, #3
 459 00fc 3D23     		movs	r3, #61
 460 00fe E254     		strb	r2, [r4, r3]
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 461              		.loc 1 309 0
 462 0100 0022     		movs	r2, #0
 463 0102 013B     		subs	r3, r3, #1
 464 0104 E254     		strb	r2, [r4, r3]
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 465              		.loc 1 311 0
 466 0106 0320     		movs	r0, #3
 467 0108 A1E7     		b	.L15
 468              	.L40:
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 469              		.loc 1 231 0
 470 010a 1A68     		ldr	r2, [r3]
 471 010c 8021     		movs	r1, #128
 472 010e 0A43     		orrs	r2, r1
 473 0110 1A60     		str	r2, [r3]
 474 0112 ADE7     		b	.L21
 475              	.L41:
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 476              		.loc 1 241 0
 477 0114 2268     		ldr	r2, [r4]
 478 0116 1368     		ldr	r3, [r2]
 479 0118 4021     		movs	r1, #64
 480 011a 0B43     		orrs	r3, r1
 481 011c 1360     		str	r3, [r2]
 482 011e AFE7     		b	.L23
 483              	.L42:
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 19


 484              		.loc 1 251 0
 485 0120 2268     		ldr	r2, [r4]
 486 0122 1368     		ldr	r3, [r2]
 487 0124 2021     		movs	r1, #32
 488 0126 0B43     		orrs	r3, r1
 489 0128 1360     		str	r3, [r2]
 490 012a B1E7     		b	.L25
 491              	.L43:
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 492              		.loc 1 261 0
 493 012c 2268     		ldr	r2, [r4]
 494 012e 1368     		ldr	r3, [r2]
 495 0130 1021     		movs	r1, #16
 496 0132 0B43     		orrs	r3, r1
 497 0134 1360     		str	r3, [r2]
 498 0136 B3E7     		b	.L27
 499              	.L44:
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 500              		.loc 1 271 0
 501 0138 2268     		ldr	r2, [r4]
 502 013a 1368     		ldr	r3, [r2]
 503 013c 0821     		movs	r1, #8
 504 013e 0B43     		orrs	r3, r1
 505 0140 1360     		str	r3, [r2]
 506 0142 B5E7     		b	.L29
 507              	.L45:
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 508              		.loc 1 281 0
 509 0144 2268     		ldr	r2, [r4]
 510 0146 1368     		ldr	r3, [r2]
 511 0148 0421     		movs	r1, #4
 512 014a 0B43     		orrs	r3, r1
 513 014c 1360     		str	r3, [r2]
 514 014e B7E7     		b	.L31
 515              	.L46:
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 516              		.loc 1 316 0
 517 0150 5B68     		ldr	r3, [r3, #4]
 518 0152 DB07     		lsls	r3, r3, #31
 519 0154 09D5     		bpl	.L37
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart = 0U;
 520              		.loc 1 170 0
 521 0156 0023     		movs	r3, #0
 522 0158 00E0     		b	.L19
 523              	.L36:
 524 015a 0023     		movs	r3, #0
 525              	.L19:
 526              	.LVL23:
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 527              		.loc 1 322 0
 528 015c 012B     		cmp	r3, #1
 529 015e 06D0     		beq	.L47
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 530              		.loc 1 336 0
 531 0160 0422     		movs	r2, #4
 532 0162 3D23     		movs	r3, #61
 533              	.LVL24:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 20


 534 0164 E254     		strb	r2, [r4, r3]
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 535              		.loc 1 339 0
 536 0166 0120     		movs	r0, #1
 537 0168 71E7     		b	.L15
 538              	.LVL25:
 539              	.L37:
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 540              		.loc 1 318 0
 541 016a 0123     		movs	r3, #1
 542 016c F6E7     		b	.L19
 543              	.LVL26:
 544              	.L47:
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 545              		.loc 1 325 0
 546 016e 0023     		movs	r3, #0
 547              	.LVL27:
 548 0170 2364     		str	r3, [r4, #64]
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 549              		.loc 1 328 0
 550 0172 0122     		movs	r2, #1
 551 0174 3D33     		adds	r3, r3, #61
 552 0176 E254     		strb	r2, [r4, r3]
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 553              		.loc 1 331 0
 554 0178 0020     		movs	r0, #0
 555 017a 68E7     		b	.L15
 556              	.LVL28:
 557              	.L35:
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 558              		.loc 1 176 0
 559 017c 0120     		movs	r0, #1
 560              	.LVL29:
 561 017e 66E7     		b	.L15
 562              		.cfi_endproc
 563              	.LFE35:
 565              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
 566              		.align	1
 567              		.weak	HAL_CAN_MspDeInit
 568              		.syntax unified
 569              		.code	16
 570              		.thumb_func
 571              		.fpu softvfp
 573              	HAL_CAN_MspDeInit:
 574              	.LFB39:
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
 500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef* hcan)
 502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 575              		.loc 1 502 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 21


 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL30:
 503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
 505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */ 
 509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 581              		.loc 1 509 0
 582              		@ sp needed
 583 0000 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE39:
 587              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 588              		.align	1
 589              		.global	HAL_CAN_DeInit
 590              		.syntax unified
 591              		.code	16
 592              		.thumb_func
 593              		.fpu softvfp
 595              	HAL_CAN_DeInit:
 596              	.LFB37:
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check CAN handle */
 597              		.loc 1 453 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              	.LVL31:
 602 0000 70B5     		push	{r4, r5, r6, lr}
 603              	.LCFI2:
 604              		.cfi_def_cfa_offset 16
 605              		.cfi_offset 4, -16
 606              		.cfi_offset 5, -12
 607              		.cfi_offset 6, -8
 608              		.cfi_offset 14, -4
 609 0002 041E     		subs	r4, r0, #0
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 610              		.loc 1 455 0
 611 0004 0AD0     		beq	.L51
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 612              		.loc 1 464 0
 613 0006 3D25     		movs	r5, #61
 614 0008 0223     		movs	r3, #2
 615 000a 4355     		strb	r3, [r0, r5]
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 616              		.loc 1 467 0
 617 000c FFF7FEFF 		bl	HAL_CAN_MspDeInit
 618              	.LVL32:
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 619              		.loc 1 470 0
 620 0010 0023     		movs	r3, #0
 621 0012 6355     		strb	r3, [r4, r5]
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 622              		.loc 1 473 0
 623 0014 3C22     		movs	r2, #60
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 22


 624 0016 A354     		strb	r3, [r4, r2]
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 625              		.loc 1 476 0
 626 0018 0020     		movs	r0, #0
 627              	.L50:
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 628              		.loc 1 477 0
 629              		@ sp needed
 630              	.LVL33:
 631 001a 70BD     		pop	{r4, r5, r6, pc}
 632              	.LVL34:
 633              	.L51:
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 634              		.loc 1 457 0
 635 001c 0120     		movs	r0, #1
 636              	.LVL35:
 637 001e FCE7     		b	.L50
 638              		.cfi_endproc
 639              	.LFE37:
 641              		.section	.text.HAL_CAN_Transmit,"ax",%progbits
 642              		.align	1
 643              		.global	HAL_CAN_Transmit
 644              		.syntax unified
 645              		.code	16
 646              		.thumb_func
 647              		.fpu softvfp
 649              	HAL_CAN_Transmit:
 650              	.LFB40:
 510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
 513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Input and Output operation functions
 516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *  @brief    IO operation functions 
 517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *
 518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim   
 519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                       ##### IO operation functions #####
 521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
 522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]  This section provides functions allowing to:
 523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Transmit a CAN frame message.
 524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Receive a CAN frame message.
 525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Enter CAN peripheral in sleep mode. 
 526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Wake up the CAN peripheral from sleep mode.
 527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                
 528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
 529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
 530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  Timeout: Timeout duration.
 537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 23


 539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit(CAN_HandleTypeDef* hcan, uint32_t Timeout)
 540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 651              		.loc 1 540 0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              	.LVL36:
 656 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 657              	.LCFI3:
 658              		.cfi_def_cfa_offset 24
 659              		.cfi_offset 3, -24
 660              		.cfi_offset 4, -20
 661              		.cfi_offset 5, -16
 662              		.cfi_offset 6, -12
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 0400     		movs	r4, r0
 666 0004 0E00     		movs	r6, r1
 667              	.LVL37:
 541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart = 0U;
 543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 668              		.loc 1 549 0
 669 0006 0368     		ldr	r3, [r0]
 670 0008 9A68     		ldr	r2, [r3, #8]
 671 000a 5201     		lsls	r2, r2, #5
 672 000c 06D4     		bmi	.L53
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 673              		.loc 1 550 0 discriminator 1
 674 000e 9A68     		ldr	r2, [r3, #8]
 549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 675              		.loc 1 549 0 discriminator 1
 676 0010 1201     		lsls	r2, r2, #4
 677 0012 03D4     		bmi	.L53
 551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 678              		.loc 1 551 0
 679 0014 9A68     		ldr	r2, [r3, #8]
 550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 680              		.loc 1 550 0
 681 0016 D200     		lsls	r2, r2, #3
 682 0018 00D4     		bmi	.LCB666
 683 001a F9E0     		b	.L54	@long jump
 684              	.LCB666:
 685              	.L53:
 552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process locked */
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_LOCK(hcan);
 686              		.loc 1 554 0
 687 001c 3C22     		movs	r2, #60
 688 001e A25C     		ldrb	r2, [r4, r2]
 689 0020 012A     		cmp	r2, #1
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 24


 690 0022 00D1     		bne	.LCB671
 691 0024 F9E0     		b	.L79	@long jump
 692              	.LCB671:
 693              		.loc 1 554 0 is_stmt 0 discriminator 2
 694 0026 0121     		movs	r1, #1
 695              	.LVL38:
 696 0028 3C22     		movs	r2, #60
 697 002a A154     		strb	r1, [r4, r2]
 555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN state */
 557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 698              		.loc 1 557 0 is_stmt 1 discriminator 2
 699 002c 0132     		adds	r2, r2, #1
 700 002e A25C     		ldrb	r2, [r4, r2]
 701 0030 D2B2     		uxtb	r2, r2
 702 0032 322A     		cmp	r2, #50
 703 0034 12D0     		beq	.L57
 704 0036 622A     		cmp	r2, #98
 705 0038 14D0     		beq	.L58
 706 003a 222A     		cmp	r2, #34
 707 003c 03D0     		beq	.L84
 558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 708              		.loc 1 569 0
 709 003e 1221     		movs	r1, #18
 710 0040 3D22     		movs	r2, #61
 711 0042 A154     		strb	r1, [r4, r2]
 570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 712              		.loc 1 570 0
 713 0044 02E0     		b	.L60
 714              	.L84:
 560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 715              		.loc 1 560 0
 716 0046 4131     		adds	r1, r1, #65
 717 0048 1B32     		adds	r2, r2, #27
 718 004a A154     		strb	r1, [r4, r2]
 719              	.L60:
 571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Select one empty transmit mailbox */
 574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 720              		.loc 1 574 0
 721 004c 9A68     		ldr	r2, [r3, #8]
 722 004e 5201     		lsls	r2, r2, #5
 723 0050 0CD4     		bmi	.L80
 575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 25


 577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else if (HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 724              		.loc 1 578 0
 725 0052 9A68     		ldr	r2, [r3, #8]
 726 0054 1201     		lsls	r2, r2, #4
 727 0056 60D5     		bpl	.L81
 579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 728              		.loc 1 580 0
 729 0058 0125     		movs	r5, #1
 730 005a 08E0     		b	.L61
 731              	.L57:
 563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 732              		.loc 1 563 0
 733 005c 5221     		movs	r1, #82
 734 005e 3D22     		movs	r2, #61
 735 0060 A154     		strb	r1, [r4, r2]
 564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 736              		.loc 1 564 0
 737 0062 F3E7     		b	.L60
 738              	.L58:
 566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 739              		.loc 1 566 0
 740 0064 7221     		movs	r1, #114
 741 0066 3D22     		movs	r2, #61
 742 0068 A154     		strb	r1, [r4, r2]
 567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 743              		.loc 1 567 0
 744 006a EFE7     		b	.L60
 745              	.L80:
 576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 746              		.loc 1 576 0
 747 006c 0025     		movs	r5, #0
 748              	.L61:
 749              	.LVL39:
 581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
 585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set up the Id */
 588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 750              		.loc 1 588 0
 751 006e 2A00     		movs	r2, r5
 752 0070 1832     		adds	r2, r2, #24
 753 0072 1201     		lsls	r2, r2, #4
 754 0074 D058     		ldr	r0, [r2, r3]
 755              	.LVL40:
 756 0076 0121     		movs	r1, #1
 757 0078 0140     		ands	r1, r0
 758 007a D150     		str	r1, [r2, r3]
 589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if (hcan->pTxMsg->IDE == CAN_ID_STD)
 759              		.loc 1 589 0
 760 007c 226B     		ldr	r2, [r4, #48]
 761 007e 9368     		ldr	r3, [r2, #8]
 762 0080 002B     		cmp	r3, #0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 26


 763 0082 4CD1     		bne	.L62
 590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));  
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 764              		.loc 1 592 0
 765 0084 2068     		ldr	r0, [r4]
 766 0086 2900     		movs	r1, r5
 767 0088 1831     		adds	r1, r1, #24
 768 008a 0901     		lsls	r1, r1, #4
 769 008c 0F58     		ldr	r7, [r1, r0]
 770 008e 1368     		ldr	r3, [r2]
 771 0090 5B05     		lsls	r3, r3, #21
 593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 772              		.loc 1 593 0
 773 0092 D268     		ldr	r2, [r2, #12]
 592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 774              		.loc 1 592 0
 775 0094 1343     		orrs	r3, r2
 776 0096 3B43     		orrs	r3, r7
 777 0098 0B50     		str	r3, [r1, r0]
 778              	.L63:
 594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->IDE | \
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set up the DLC */
 604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 779              		.loc 1 604 0
 780 009a 226B     		ldr	r2, [r4, #48]
 781 009c 0F20     		movs	r0, #15
 782 009e 1369     		ldr	r3, [r2, #16]
 783 00a0 0340     		ands	r3, r0
 784 00a2 1361     		str	r3, [r2, #16]
 605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 785              		.loc 1 605 0
 786 00a4 2900     		movs	r1, r5
 787 00a6 1831     		adds	r1, r1, #24
 788 00a8 0901     		lsls	r1, r1, #4
 789 00aa 2368     		ldr	r3, [r4]
 790 00ac 5B18     		adds	r3, r3, r1
 791 00ae 5A68     		ldr	r2, [r3, #4]
 792 00b0 8243     		bics	r2, r0
 793 00b2 5A60     		str	r2, [r3, #4]
 606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 794              		.loc 1 606 0
 795 00b4 2368     		ldr	r3, [r4]
 796 00b6 5B18     		adds	r3, r3, r1
 797 00b8 5A68     		ldr	r2, [r3, #4]
 798 00ba 206B     		ldr	r0, [r4, #48]
 799 00bc 0069     		ldr	r0, [r0, #16]
 800 00be 0243     		orrs	r2, r0
 801 00c0 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 27


 607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set up the data field */
 609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 802              		.loc 1 609 0
 803 00c2 226B     		ldr	r2, [r4, #48]
 804 00c4 D37D     		ldrb	r3, [r2, #23]
 805 00c6 1B06     		lsls	r3, r3, #24
 806 00c8 907D     		ldrb	r0, [r2, #22]
 807 00ca 0004     		lsls	r0, r0, #16
 808 00cc 0343     		orrs	r3, r0
 809 00ce 507D     		ldrb	r0, [r2, #21]
 810 00d0 0002     		lsls	r0, r0, #8
 811 00d2 0343     		orrs	r3, r0
 812 00d4 127D     		ldrb	r2, [r2, #20]
 813 00d6 1343     		orrs	r3, r2
 814 00d8 2F01     		lsls	r7, r5, #4
 815 00da 2268     		ldr	r2, [r4]
 816 00dc D019     		adds	r0, r2, r7
 817 00de 8930     		adds	r0, r0, #137
 818 00e0 FF30     		adds	r0, r0, #255
 819 00e2 0360     		str	r3, [r0]
 610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 820              		.loc 1 613 0
 821 00e4 226B     		ldr	r2, [r4, #48]
 822 00e6 D37E     		ldrb	r3, [r2, #27]
 823 00e8 1B06     		lsls	r3, r3, #24
 824 00ea 907E     		ldrb	r0, [r2, #26]
 825 00ec 0004     		lsls	r0, r0, #16
 826 00ee 0343     		orrs	r3, r0
 827 00f0 507E     		ldrb	r0, [r2, #25]
 828 00f2 0002     		lsls	r0, r0, #8
 829 00f4 0343     		orrs	r3, r0
 830 00f6 127E     		ldrb	r2, [r2, #24]
 831 00f8 1343     		orrs	r3, r2
 832 00fa 2268     		ldr	r2, [r4]
 833 00fc 9446     		mov	ip, r2
 834 00fe 6744     		add	r7, r7, ip
 835 0100 3A00     		movs	r2, r7
 836 0102 8D32     		adds	r2, r2, #141
 837 0104 FF32     		adds	r2, r2, #255
 838 0106 1360     		str	r3, [r2]
 614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
 615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
 616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Request transmission */
 619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
 839              		.loc 1 619 0
 840 0108 2268     		ldr	r2, [r4]
 841 010a 8B58     		ldr	r3, [r1, r2]
 842 010c 0120     		movs	r0, #1
 843 010e 0343     		orrs	r3, r0
 844 0110 8B50     		str	r3, [r1, r2]
 620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 28


 621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Get tick */
 622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     tickstart = HAL_GetTick();   
 845              		.loc 1 622 0
 846 0112 FFF7FEFF 		bl	HAL_GetTick
 847              	.LVL41:
 848 0116 0700     		movs	r7, r0
 849              	.LVL42:
 623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check End of transmission flag */
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     while(!(__HAL_CAN_TRANSMIT_STATUS(hcan, transmitmailbox)))
 850              		.loc 1 625 0
 851 0118 45E0     		b	.L65
 852              	.LVL43:
 853              	.L81:
 584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 854              		.loc 1 584 0
 855 011a 0225     		movs	r5, #2
 856 011c A7E7     		b	.L61
 857              	.LVL44:
 858              	.L62:
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->IDE | \
 859              		.loc 1 598 0
 860 011e 2800     		movs	r0, r5
 861 0120 1830     		adds	r0, r0, #24
 862 0122 0001     		lsls	r0, r0, #4
 863 0124 2168     		ldr	r1, [r4]
 864 0126 4758     		ldr	r7, [r0, r1]
 865 0128 5168     		ldr	r1, [r2, #4]
 866 012a C900     		lsls	r1, r1, #3
 867 012c 0B43     		orrs	r3, r1
 600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 868              		.loc 1 600 0
 869 012e D268     		ldr	r2, [r2, #12]
 599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 870              		.loc 1 599 0
 871 0130 1343     		orrs	r3, r2
 598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->IDE | \
 872              		.loc 1 598 0
 873 0132 3B43     		orrs	r3, r7
 874 0134 2268     		ldr	r2, [r4]
 875 0136 8350     		str	r3, [r0, r2]
 876 0138 AFE7     		b	.L63
 877              	.LVL45:
 878              	.L88:
 626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check for the Timeout */
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if(Timeout != HAL_MAX_DELAY)
 629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 879              		.loc 1 630 0
 880 013a 002E     		cmp	r6, #0
 881 013c 04D0     		beq	.L66
 882              		.loc 1 630 0 is_stmt 0 discriminator 1
 883 013e FFF7FEFF 		bl	HAL_GetTick
 884              	.LVL46:
 885 0142 C01B     		subs	r0, r0, r7
 886 0144 8642     		cmp	r6, r0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 29


 887 0146 2ED2     		bcs	.L65
 888              	.L66:
 631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         {
 632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_TIMEOUT;
 889              		.loc 1 632 0 is_stmt 1
 890 0148 0322     		movs	r2, #3
 891 014a 3D23     		movs	r3, #61
 892 014c E254     		strb	r2, [r4, r3]
 633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Cancel transmission */
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           __HAL_CAN_CANCEL_TRANSMIT(hcan, transmitmailbox);
 893              		.loc 1 635 0
 894 014e 002D     		cmp	r5, #0
 895 0150 09D1     		bne	.L67
 896              		.loc 1 635 0 is_stmt 0 discriminator 1
 897 0152 2268     		ldr	r2, [r4]
 898 0154 9368     		ldr	r3, [r2, #8]
 899 0156 8021     		movs	r1, #128
 900 0158 0B43     		orrs	r3, r1
 901 015a 9360     		str	r3, [r2, #8]
 902              	.L68:
 636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Process unlocked */
 638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           __HAL_UNLOCK(hcan);
 903              		.loc 1 638 0 is_stmt 1
 904 015c 0022     		movs	r2, #0
 905 015e 3C23     		movs	r3, #60
 906 0160 E254     		strb	r2, [r4, r3]
 639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           return HAL_TIMEOUT;
 907              		.loc 1 639 0
 908 0162 0320     		movs	r0, #3
 909 0164 4BE0     		b	.L55
 910              	.L67:
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 911              		.loc 1 635 0 discriminator 2
 912 0166 012D     		cmp	r5, #1
 913 0168 06D0     		beq	.L85
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 914              		.loc 1 635 0 is_stmt 0 discriminator 4
 915 016a 2268     		ldr	r2, [r4]
 916 016c 9168     		ldr	r1, [r2, #8]
 917 016e 8023     		movs	r3, #128
 918 0170 1B04     		lsls	r3, r3, #16
 919 0172 0B43     		orrs	r3, r1
 920 0174 9360     		str	r3, [r2, #8]
 921 0176 F1E7     		b	.L68
 922              	.L85:
 635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 923              		.loc 1 635 0 discriminator 3
 924 0178 2268     		ldr	r2, [r4]
 925 017a 9168     		ldr	r1, [r2, #8]
 926 017c 8023     		movs	r3, #128
 927 017e 1B02     		lsls	r3, r3, #8
 928 0180 0B43     		orrs	r3, r1
 929 0182 9360     		str	r3, [r2, #8]
 930 0184 EAE7     		b	.L68
 931              	.L70:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 30


 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 932              		.loc 1 625 0 is_stmt 1 discriminator 2
 933 0186 012D     		cmp	r5, #1
 934 0188 1AD0     		beq	.L86
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 935              		.loc 1 625 0 is_stmt 0 discriminator 5
 936 018a 2368     		ldr	r3, [r4]
 937 018c 9B68     		ldr	r3, [r3, #8]
 938 018e 244A     		ldr	r2, .L90
 939 0190 1340     		ands	r3, r2
 940 0192 244A     		ldr	r2, .L90+4
 941 0194 9446     		mov	ip, r2
 942 0196 6344     		add	r3, r3, ip
 943 0198 5A1E     		subs	r2, r3, #1
 944 019a 9341     		sbcs	r3, r3, r2
 945 019c DBB2     		uxtb	r3, r3
 946              	.L71:
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 947              		.loc 1 625 0 discriminator 8
 948 019e 002B     		cmp	r3, #0
 949 01a0 19D0     		beq	.L87
 628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 950              		.loc 1 628 0 is_stmt 1
 951 01a2 731C     		adds	r3, r6, #1
 952 01a4 C9D1     		bne	.L88
 953              	.L65:
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 954              		.loc 1 625 0
 955 01a6 002D     		cmp	r5, #0
 956 01a8 EDD1     		bne	.L70
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 957              		.loc 1 625 0 is_stmt 0 discriminator 1
 958 01aa 2368     		ldr	r3, [r4]
 959 01ac 9B68     		ldr	r3, [r3, #8]
 960 01ae 1E4A     		ldr	r2, .L90+8
 961 01b0 1340     		ands	r3, r2
 962 01b2 1E4A     		ldr	r2, .L90+12
 963 01b4 9446     		mov	ip, r2
 964 01b6 6344     		add	r3, r3, ip
 965 01b8 5A1E     		subs	r2, r3, #1
 966 01ba 9341     		sbcs	r3, r3, r2
 967 01bc DBB2     		uxtb	r3, r3
 968 01be EEE7     		b	.L71
 969              	.L86:
 625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 970              		.loc 1 625 0 discriminator 4
 971 01c0 2368     		ldr	r3, [r4]
 972 01c2 9B68     		ldr	r3, [r3, #8]
 973 01c4 1A4A     		ldr	r2, .L90+16
 974 01c6 1340     		ands	r3, r2
 975 01c8 1A4A     		ldr	r2, .L90+20
 976 01ca 9446     		mov	ip, r2
 977 01cc 6344     		add	r3, r3, ip
 978 01ce 5A1E     		subs	r2, r3, #1
 979 01d0 9341     		sbcs	r3, r3, r2
 980 01d2 DBB2     		uxtb	r3, r3
 981 01d4 E3E7     		b	.L71
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 31


 982              	.L87:
 640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         }
 641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN state */
 645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 983              		.loc 1 645 0 is_stmt 1
 984 01d6 3D33     		adds	r3, r3, #61
 985 01d8 E35C     		ldrb	r3, [r4, r3]
 986 01da DBB2     		uxtb	r3, r3
 987 01dc 522B     		cmp	r3, #82
 988 01de 0FD0     		beq	.L75
 989 01e0 722B     		cmp	r3, #114
 990 01e2 11D0     		beq	.L76
 991 01e4 422B     		cmp	r3, #66
 992 01e6 03D0     		beq	.L89
 646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0;
 649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX1;
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_READY;
 993              		.loc 1 657 0
 994 01e8 0122     		movs	r2, #1
 995 01ea 3D23     		movs	r3, #61
 996 01ec E254     		strb	r2, [r4, r3]
 658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 997              		.loc 1 658 0
 998 01ee 02E0     		b	.L78
 999              	.L89:
 648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1000              		.loc 1 648 0
 1001 01f0 2222     		movs	r2, #34
 1002 01f2 053B     		subs	r3, r3, #5
 1003 01f4 E254     		strb	r2, [r4, r3]
 1004              	.L78:
 659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
 662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1005              		.loc 1 662 0
 1006 01f6 0022     		movs	r2, #0
 1007 01f8 3C23     		movs	r3, #60
 1008 01fa E254     		strb	r2, [r4, r3]
 663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
 665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_OK;
 1009              		.loc 1 665 0
 1010 01fc 0020     		movs	r0, #0
 1011              	.LVL47:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 32


 1012              	.L55:
 666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN state */
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR; 
 671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1013              		.loc 1 675 0
 1014              		@ sp needed
 1015              	.LVL48:
 1016              	.LVL49:
 1017 01fe F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1018              	.LVL50:
 1019              	.L75:
 651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1020              		.loc 1 651 0
 1021 0200 3222     		movs	r2, #50
 1022 0202 3D23     		movs	r3, #61
 1023 0204 E254     		strb	r2, [r4, r3]
 652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1024              		.loc 1 652 0
 1025 0206 F6E7     		b	.L78
 1026              	.L76:
 654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1027              		.loc 1 654 0
 1028 0208 6222     		movs	r2, #98
 1029 020a 3D23     		movs	r3, #61
 1030 020c E254     		strb	r2, [r4, r3]
 655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_TX */
 1031              		.loc 1 655 0
 1032 020e F2E7     		b	.L78
 1033              	.LVL51:
 1034              	.L54:
 670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1035              		.loc 1 670 0
 1036 0210 0422     		movs	r2, #4
 1037 0212 3D23     		movs	r3, #61
 1038 0214 C254     		strb	r2, [r0, r3]
 673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1039              		.loc 1 673 0
 1040 0216 0120     		movs	r0, #1
 1041              	.LVL52:
 1042 0218 F1E7     		b	.L55
 1043              	.LVL53:
 1044              	.L79:
 554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1045              		.loc 1 554 0
 1046 021a 0220     		movs	r0, #2
 1047              	.LVL54:
 1048 021c EFE7     		b	.L55
 1049              	.L91:
 1050 021e C046     		.align	2
 1051              	.L90:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 33


 1052 0220 00000110 		.word	268500992
 1053 0224 0000FFEF 		.word	-268500992
 1054 0228 01000004 		.word	67108865
 1055 022c FFFFFFFB 		.word	-67108865
 1056 0230 00010008 		.word	134217984
 1057 0234 00FFFFF7 		.word	-134217984
 1058              		.cfi_endproc
 1059              	.LFE40:
 1061              		.section	.text.HAL_CAN_Transmit_IT,"ax",%progbits
 1062              		.align	1
 1063              		.global	HAL_CAN_Transmit_IT
 1064              		.syntax unified
 1065              		.code	16
 1066              		.thumb_func
 1067              		.fpu softvfp
 1069              	HAL_CAN_Transmit_IT:
 1070              	.LFB41:
 676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 680:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 681:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 682:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 683:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
 684:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1071              		.loc 1 684 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075              	.LVL55:
 1076 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1077              	.LCFI4:
 1078              		.cfi_def_cfa_offset 20
 1079              		.cfi_offset 4, -20
 1080              		.cfi_offset 5, -16
 1081              		.cfi_offset 6, -12
 1082              		.cfi_offset 7, -8
 1083              		.cfi_offset 14, -4
 1084              	.LVL56:
 685:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t transmitmailbox = CAN_TXSTATUS_NOMAILBOX;
 686:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 687:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 688:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(hcan->pTxMsg->IDE));
 689:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_RTR(hcan->pTxMsg->RTR));
 690:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_DLC(hcan->pTxMsg->DLC));
 691:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(((hcan->Instance->TSR&CAN_TSR_TME0) == CAN_TSR_TME0) || \
 1085              		.loc 1 692 0
 1086 0002 0268     		ldr	r2, [r0]
 1087 0004 9368     		ldr	r3, [r2, #8]
 1088 0006 5B01     		lsls	r3, r3, #5
 1089 0008 06D4     		bmi	.L93
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 1090              		.loc 1 693 0 discriminator 1
 1091 000a 9368     		ldr	r3, [r2, #8]
 692:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 34


 1092              		.loc 1 692 0 discriminator 1
 1093 000c 1B01     		lsls	r3, r3, #4
 1094 000e 03D4     		bmi	.L93
 694:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME2) == CAN_TSR_TME2))
 1095              		.loc 1 694 0
 1096 0010 9368     		ldr	r3, [r2, #8]
 693:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      ((hcan->Instance->TSR&CAN_TSR_TME1) == CAN_TSR_TME1) || \
 1097              		.loc 1 693 0
 1098 0012 DB00     		lsls	r3, r3, #3
 1099 0014 00D4     		bmi	.LCB1090
 1100 0016 96E0     		b	.L94	@long jump
 1101              	.LCB1090:
 1102              	.L93:
 695:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 696:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process Locked */
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_LOCK(hcan);
 1103              		.loc 1 697 0
 1104 0018 3C23     		movs	r3, #60
 1105 001a C35C     		ldrb	r3, [r0, r3]
 1106 001c 012B     		cmp	r3, #1
 1107 001e 00D1     		bne	.LCB1095
 1108 0020 96E0     		b	.L104	@long jump
 1109              	.LCB1095:
 1110              		.loc 1 697 0 is_stmt 0 discriminator 2
 1111 0022 0121     		movs	r1, #1
 1112 0024 3C23     		movs	r3, #60
 1113 0026 C154     		strb	r1, [r0, r3]
 698:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 699:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Select one empty transmit mailbox */
 700:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME0))
 1114              		.loc 1 700 0 is_stmt 1 discriminator 2
 1115 0028 9368     		ldr	r3, [r2, #8]
 1116 002a 5B01     		lsls	r3, r3, #5
 1117 002c 04D4     		bmi	.L105
 701:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_0;
 703:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 704:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else if(HAL_IS_BIT_SET(hcan->Instance->TSR, CAN_TSR_TME1))
 1118              		.loc 1 704 0
 1119 002e 9368     		ldr	r3, [r2, #8]
 1120 0030 1B01     		lsls	r3, r3, #4
 1121 0032 5CD5     		bpl	.L106
 705:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 706:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_1;
 1122              		.loc 1 706 0
 1123 0034 0123     		movs	r3, #1
 1124 0036 00E0     		b	.L96
 1125              	.L105:
 702:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1126              		.loc 1 702 0
 1127 0038 0023     		movs	r3, #0
 1128              	.L96:
 1129              	.LVL57:
 707:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 708:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 709:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       transmitmailbox = CAN_TXMAILBOX_2;
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 35


 711:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 712:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 713:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set up the Id */
 714:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR &= CAN_TI0R_TXRQ;
 1130              		.loc 1 714 0
 1131 003a 1900     		movs	r1, r3
 1132 003c 1831     		adds	r1, r1, #24
 1133 003e 0901     		lsls	r1, r1, #4
 1134 0040 8D58     		ldr	r5, [r1, r2]
 1135 0042 0124     		movs	r4, #1
 1136 0044 2C40     		ands	r4, r5
 1137 0046 8C50     		str	r4, [r1, r2]
 715:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if(hcan->pTxMsg->IDE == CAN_ID_STD)
 1138              		.loc 1 715 0
 1139 0048 016B     		ldr	r1, [r0, #48]
 1140 004a 8A68     		ldr	r2, [r1, #8]
 1141 004c 002A     		cmp	r2, #0
 1142 004e 50D1     		bne	.L97
 716:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 717:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       assert_param(IS_CAN_STDID(hcan->pTxMsg->StdId));
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->StdId << CAN_TI0R_STID_Pos
 1143              		.loc 1 718 0
 1144 0050 0568     		ldr	r5, [r0]
 1145 0052 1C00     		movs	r4, r3
 1146 0054 1834     		adds	r4, r4, #24
 1147 0056 2401     		lsls	r4, r4, #4
 1148 0058 6659     		ldr	r6, [r4, r5]
 1149 005a 0A68     		ldr	r2, [r1]
 1150 005c 5205     		lsls	r2, r2, #21
 719:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 1151              		.loc 1 719 0
 1152 005e C968     		ldr	r1, [r1, #12]
 718:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 1153              		.loc 1 718 0
 1154 0060 0A43     		orrs	r2, r1
 1155 0062 3243     		orrs	r2, r6
 1156 0064 6251     		str	r2, [r4, r5]
 1157              	.L98:
 720:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 721:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     else
 722:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 723:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       assert_param(IS_CAN_EXTID(hcan->pTxMsg->ExtId));
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TIR |= ((hcan->pTxMsg->ExtId << CAN_TI0R_EXID_Pos
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |                     
 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 727:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 728:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 729:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set up the DLC */
 730:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->pTxMsg->DLC &= (uint8_t)0x0000000FU;
 1158              		.loc 1 730 0
 1159 0066 016B     		ldr	r1, [r0, #48]
 1160 0068 0F25     		movs	r5, #15
 1161 006a 0A69     		ldr	r2, [r1, #16]
 1162 006c 2A40     		ands	r2, r5
 1163 006e 0A61     		str	r2, [r1, #16]
 731:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR &= 0xFFFFFFF0U;
 1164              		.loc 1 731 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 36


 1165 0070 1A00     		movs	r2, r3
 1166 0072 1832     		adds	r2, r2, #24
 1167 0074 1201     		lsls	r2, r2, #4
 1168 0076 0168     		ldr	r1, [r0]
 1169 0078 8918     		adds	r1, r1, r2
 1170 007a 4C68     		ldr	r4, [r1, #4]
 1171 007c AC43     		bics	r4, r5
 1172 007e 4C60     		str	r4, [r1, #4]
 732:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TDTR |= hcan->pTxMsg->DLC;
 1173              		.loc 1 732 0
 1174 0080 0168     		ldr	r1, [r0]
 1175 0082 8C46     		mov	ip, r1
 1176 0084 6244     		add	r2, r2, ip
 1177 0086 5168     		ldr	r1, [r2, #4]
 1178 0088 046B     		ldr	r4, [r0, #48]
 1179 008a 2469     		ldr	r4, [r4, #16]
 1180 008c 2143     		orrs	r1, r4
 1181 008e 5160     		str	r1, [r2, #4]
 733:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 734:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set up the data field */
 735:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR, ((uint32_t)hcan->pTxMsg->Data[3] <<
 1182              		.loc 1 735 0
 1183 0090 016B     		ldr	r1, [r0, #48]
 1184 0092 CA7D     		ldrb	r2, [r1, #23]
 1185 0094 1206     		lsls	r2, r2, #24
 1186 0096 8C7D     		ldrb	r4, [r1, #22]
 1187 0098 2404     		lsls	r4, r4, #16
 1188 009a 2243     		orrs	r2, r4
 1189 009c 4C7D     		ldrb	r4, [r1, #21]
 1190 009e 2402     		lsls	r4, r4, #8
 1191 00a0 2243     		orrs	r2, r4
 1192 00a2 097D     		ldrb	r1, [r1, #20]
 1193 00a4 0A43     		orrs	r2, r1
 1194 00a6 1901     		lsls	r1, r3, #4
 1195 00a8 0468     		ldr	r4, [r0]
 1196 00aa 6418     		adds	r4, r4, r1
 1197 00ac 8934     		adds	r4, r4, #137
 1198 00ae FF34     		adds	r4, r4, #255
 1199 00b0 2260     		str	r2, [r4]
 736:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[2] <<
 737:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[1] <<
 738:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[0] <<
 739:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR, ((uint32_t)hcan->pTxMsg->Data[7] <<
 1200              		.loc 1 739 0
 1201 00b2 046B     		ldr	r4, [r0, #48]
 1202 00b4 E27E     		ldrb	r2, [r4, #27]
 1203 00b6 1206     		lsls	r2, r2, #24
 1204 00b8 A57E     		ldrb	r5, [r4, #26]
 1205 00ba 2D04     		lsls	r5, r5, #16
 1206 00bc 2A43     		orrs	r2, r5
 1207 00be 657E     		ldrb	r5, [r4, #25]
 1208 00c0 2D02     		lsls	r5, r5, #8
 1209 00c2 2A43     		orrs	r2, r5
 1210 00c4 247E     		ldrb	r4, [r4, #24]
 1211 00c6 2243     		orrs	r2, r4
 1212 00c8 0468     		ldr	r4, [r0]
 1213 00ca A446     		mov	ip, r4
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 37


 1214 00cc 6144     		add	r1, r1, ip
 1215 00ce 8D31     		adds	r1, r1, #141
 1216 00d0 FF31     		adds	r1, r1, #255
 1217 00d2 0A60     		str	r2, [r1]
 740:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[6] <<
 741:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[5] <<
 742:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                                 ((uint32_t)hcan->pTxMsg->Data[4] <<
 743:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 744:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN state */
 745:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 1218              		.loc 1 745 0
 1219 00d4 3D22     		movs	r2, #61
 1220 00d6 825C     		ldrb	r2, [r0, r2]
 1221 00d8 D2B2     		uxtb	r2, r2
 1222 00da 322A     		cmp	r2, #50
 1223 00dc 2BD0     		beq	.L100
 1224 00de 622A     		cmp	r2, #98
 1225 00e0 2DD0     		beq	.L101
 1226 00e2 222A     		cmp	r2, #34
 1227 00e4 12D0     		beq	.L108
 746:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 747:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 749:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 750:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 753:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 756:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 757:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->State = HAL_CAN_STATE_BUSY_TX;
 1228              		.loc 1 757 0
 1229 00e6 1221     		movs	r1, #18
 1230 00e8 3D22     		movs	r2, #61
 1231 00ea 8154     		strb	r1, [r0, r2]
 758:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1232              		.loc 1 758 0
 1233 00ec 11E0     		b	.L103
 1234              	.LVL58:
 1235              	.L106:
 710:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1236              		.loc 1 710 0
 1237 00ee 0223     		movs	r3, #2
 1238 00f0 A3E7     		b	.L96
 1239              	.LVL59:
 1240              	.L97:
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |                     
 1241              		.loc 1 724 0
 1242 00f2 0568     		ldr	r5, [r0]
 1243 00f4 1C00     		movs	r4, r3
 1244 00f6 1834     		adds	r4, r4, #24
 1245 00f8 2401     		lsls	r4, r4, #4
 1246 00fa 6659     		ldr	r6, [r4, r5]
 1247 00fc 4F68     		ldr	r7, [r1, #4]
 1248 00fe FF00     		lsls	r7, r7, #3
 1249 0100 3A43     		orrs	r2, r7
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 38


 726:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1250              		.loc 1 726 0
 1251 0102 C968     		ldr	r1, [r1, #12]
 725:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->RTR);
 1252              		.loc 1 725 0
 1253 0104 0A43     		orrs	r2, r1
 724:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                                            hcan->pTxMsg->IDE |                     
 1254              		.loc 1 724 0
 1255 0106 3243     		orrs	r2, r6
 1256 0108 6251     		str	r2, [r4, r5]
 1257 010a ACE7     		b	.L98
 1258              	.L108:
 748:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1259              		.loc 1 748 0
 1260 010c 4221     		movs	r1, #66
 1261 010e 1B32     		adds	r2, r2, #27
 1262 0110 8154     		strb	r1, [r0, r2]
 1263              	.L103:
 759:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 760:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 761:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to none */
 762:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1264              		.loc 1 762 0
 1265 0112 0022     		movs	r2, #0
 1266 0114 0264     		str	r2, [r0, #64]
 763:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 764:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process Unlocked */
 765:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 1267              		.loc 1 765 0
 1268 0116 3C21     		movs	r1, #60
 1269 0118 4254     		strb	r2, [r0, r1]
 766:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 767:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Request transmission */
 768:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->Instance->sTxMailBox[transmitmailbox].TIR |= CAN_TI0R_TXRQ;
 1270              		.loc 1 768 0
 1271 011a 0168     		ldr	r1, [r0]
 1272 011c 1833     		adds	r3, r3, #24
 1273              	.LVL60:
 1274 011e 1B01     		lsls	r3, r3, #4
 1275              	.LVL61:
 1276 0120 5A58     		ldr	r2, [r3, r1]
 1277 0122 0124     		movs	r4, #1
 1278 0124 2243     		orrs	r2, r4
 1279 0126 5A50     		str	r2, [r3, r1]
 769:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 770:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Enable interrupts: */
 771:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Enable Error warning Interrupt */
 772:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Enable Error passive Interrupt */
 773:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Enable Bus-off Interrupt */
 774:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Enable Last error code Interrupt */
 775:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Enable Error Interrupt */
 776:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Enable Transmit mailbox empty Interrupt */
 777:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1280              		.loc 1 777 0
 1281 0128 0268     		ldr	r2, [r0]
 1282 012a 5169     		ldr	r1, [r2, #20]
 1283 012c 094B     		ldr	r3, .L109
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 39


 1284 012e 0B43     		orrs	r3, r1
 1285 0130 5361     		str	r3, [r2, #20]
 778:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                               CAN_IT_EPV |
 779:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                               CAN_IT_BOF |
 780:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                               CAN_IT_LEC |
 781:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                               CAN_IT_ERR |
 782:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                               CAN_IT_TME  );
 783:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 784:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 785:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 786:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Change CAN state */
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_ERROR;
 788:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 789:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 791:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 792:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 793:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 1286              		.loc 1 793 0
 1287 0132 0020     		movs	r0, #0
 1288              	.LVL62:
 1289              	.L95:
 794:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1290              		.loc 1 794 0
 1291              		@ sp needed
 1292 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 1293              	.LVL63:
 1294              	.L100:
 751:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1295              		.loc 1 751 0
 1296 0136 5221     		movs	r1, #82
 1297 0138 3D22     		movs	r2, #61
 1298 013a 8154     		strb	r1, [r0, r2]
 752:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1299              		.loc 1 752 0
 1300 013c E9E7     		b	.L103
 1301              	.L101:
 754:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 1302              		.loc 1 754 0
 1303 013e 7221     		movs	r1, #114
 1304 0140 3D22     		movs	r2, #61
 1305 0142 8154     		strb	r1, [r0, r2]
 755:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1306              		.loc 1 755 0
 1307 0144 E5E7     		b	.L103
 1308              	.LVL64:
 1309              	.L94:
 787:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1310              		.loc 1 787 0
 1311 0146 0422     		movs	r2, #4
 1312 0148 3D23     		movs	r3, #61
 1313 014a C254     		strb	r2, [r0, r3]
 790:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1314              		.loc 1 790 0
 1315 014c 0120     		movs	r0, #1
 1316              	.LVL65:
 1317 014e F1E7     		b	.L95
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 40


 1318              	.LVL66:
 1319              	.L104:
 697:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 1320              		.loc 1 697 0
 1321 0150 0220     		movs	r0, #2
 1322              	.LVL67:
 1323 0152 EFE7     		b	.L95
 1324              	.L110:
 1325              		.align	2
 1326              	.L109:
 1327 0154 018F0000 		.word	36609
 1328              		.cfi_endproc
 1329              	.LFE41:
 1331              		.section	.text.HAL_CAN_Receive,"ax",%progbits
 1332              		.align	1
 1333              		.global	HAL_CAN_Receive
 1334              		.syntax unified
 1335              		.code	16
 1336              		.thumb_func
 1337              		.fpu softvfp
 1339              	HAL_CAN_Receive:
 1340              	.LFB42:
 795:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 796:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 797:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 798:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 799:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 800:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  FIFONumber:    FIFO number.
 801:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  Timeout:       Timeout duration.
 802:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 803:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 804:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive(CAN_HandleTypeDef* hcan, uint8_t FIFONumber, uint32_t Timeout)
 805:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1341              		.loc 1 805 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345              	.LVL68:
 1346 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1347              	.LCFI5:
 1348              		.cfi_def_cfa_offset 24
 1349              		.cfi_offset 3, -24
 1350              		.cfi_offset 4, -20
 1351              		.cfi_offset 5, -16
 1352              		.cfi_offset 6, -12
 1353              		.cfi_offset 7, -8
 1354              		.cfi_offset 14, -4
 1355 0002 0400     		movs	r4, r0
 1356 0004 0D00     		movs	r5, r1
 1357 0006 1600     		movs	r6, r2
 1358              	.LVL69:
 806:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart = 0U;
 807:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
 808:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 809:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
 810:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 811:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 41


 812:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process locked */
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_LOCK(hcan);
 1359              		.loc 1 813 0
 1360 0008 3C23     		movs	r3, #60
 1361 000a C35C     		ldrb	r3, [r0, r3]
 1362 000c 012B     		cmp	r3, #1
 1363 000e 00D1     		bne	.LCB1353
 1364 0010 3DE1     		b	.L149	@long jump
 1365              	.LCB1353:
 1366              		.loc 1 813 0 is_stmt 0 discriminator 2
 1367 0012 0122     		movs	r2, #1
 1368              	.LVL70:
 1369 0014 3C23     		movs	r3, #60
 1370 0016 C254     		strb	r2, [r0, r3]
 814:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 815:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||         \
 1371              		.loc 1 816 0 is_stmt 1 discriminator 2
 1372 0018 0029     		cmp	r1, #0
 1373 001a 0FD1     		bne	.L113
 1374              		.loc 1 816 0 is_stmt 0 discriminator 1
 1375 001c 0133     		adds	r3, r3, #1
 1376 001e C35C     		ldrb	r3, [r0, r3]
 1377 0020 222B     		cmp	r3, #34
 1378 0022 1CD0     		beq	.L114
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1379              		.loc 1 817 0 is_stmt 1 discriminator 2
 1380 0024 3D23     		movs	r3, #61
 1381 0026 C35C     		ldrb	r3, [r0, r3]
 816:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1382              		.loc 1 816 0 discriminator 2
 1383 0028 422B     		cmp	r3, #66
 1384 002a 18D0     		beq	.L114
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1385              		.loc 1 818 0
 1386 002c 3D23     		movs	r3, #61
 1387 002e C35C     		ldrb	r3, [r0, r3]
 817:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1388              		.loc 1 817 0
 1389 0030 622B     		cmp	r3, #98
 1390 0032 14D0     		beq	.L114
 819:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1391              		.loc 1 819 0
 1392 0034 3D23     		movs	r3, #61
 1393 0036 C35C     		ldrb	r3, [r0, r3]
 818:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1394              		.loc 1 818 0
 1395 0038 722B     		cmp	r3, #114
 1396 003a 10D0     		beq	.L114
 1397              	.L113:
 820:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 821:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 823:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_BUSY;
 825:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 826:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 42


 827:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||         \
 1398              		.loc 1 828 0
 1399 003c 012D     		cmp	r5, #1
 1400 003e 13D0     		beq	.L154
 1401              	.L115:
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 832:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 833:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 835:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_BUSY;
 837:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 838:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 839:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
 840:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1402              		.loc 1 840 0
 1403 0040 002D     		cmp	r5, #0
 1404 0042 35D1     		bne	.L117
 841:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 842:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 1405              		.loc 1 842 0
 1406 0044 3D23     		movs	r3, #61
 1407 0046 E35C     		ldrb	r3, [r4, r3]
 1408 0048 DBB2     		uxtb	r3, r3
 1409 004a 322B     		cmp	r3, #50
 1410 004c 28D0     		beq	.L119
 1411 004e 522B     		cmp	r3, #82
 1412 0050 2AD0     		beq	.L120
 1413 0052 122B     		cmp	r3, #18
 1414 0054 1DD0     		beq	.L155
 843:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 844:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 846:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 847:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 850:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 853:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 854:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1415              		.loc 1 854 0
 1416 0056 2222     		movs	r2, #34
 1417 0058 3D23     		movs	r3, #61
 1418 005a E254     		strb	r2, [r4, r3]
 855:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1419              		.loc 1 855 0
 1420 005c 1CE0     		b	.L122
 1421              	.L114:
 822:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1422              		.loc 1 822 0
 1423 005e 0022     		movs	r2, #0
 1424 0060 3C23     		movs	r3, #60
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 43


 1425 0062 E254     		strb	r2, [r4, r3]
 824:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1426              		.loc 1 824 0
 1427 0064 0220     		movs	r0, #2
 1428              	.LVL71:
 1429 0066 13E1     		b	.L112
 1430              	.LVL72:
 1431              	.L154:
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1432              		.loc 1 828 0 discriminator 1
 1433 0068 3D23     		movs	r3, #61
 1434 006a E35C     		ldrb	r3, [r4, r3]
 1435 006c 322B     		cmp	r3, #50
 1436 006e 0BD0     		beq	.L116
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1437              		.loc 1 829 0 discriminator 2
 1438 0070 3D23     		movs	r3, #61
 1439 0072 E35C     		ldrb	r3, [r4, r3]
 828:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1440              		.loc 1 828 0 discriminator 2
 1441 0074 522B     		cmp	r3, #82
 1442 0076 07D0     		beq	.L116
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1443              		.loc 1 830 0
 1444 0078 3D23     		movs	r3, #61
 1445 007a E35C     		ldrb	r3, [r4, r3]
 829:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1446              		.loc 1 829 0
 1447 007c 622B     		cmp	r3, #98
 1448 007e 03D0     		beq	.L116
 831:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 1449              		.loc 1 831 0
 1450 0080 3D23     		movs	r3, #61
 1451 0082 E35C     		ldrb	r3, [r4, r3]
 830:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1452              		.loc 1 830 0
 1453 0084 722B     		cmp	r3, #114
 1454 0086 DBD1     		bne	.L115
 1455              	.L116:
 834:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1456              		.loc 1 834 0
 1457 0088 0022     		movs	r2, #0
 1458 008a 3C23     		movs	r3, #60
 1459 008c E254     		strb	r2, [r4, r3]
 836:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1460              		.loc 1 836 0
 1461 008e 0220     		movs	r0, #2
 1462              	.LVL73:
 1463 0090 FEE0     		b	.L112
 1464              	.LVL74:
 1465              	.L155:
 845:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1466              		.loc 1 845 0
 1467 0092 4222     		movs	r2, #66
 1468 0094 2B33     		adds	r3, r3, #43
 1469 0096 E254     		strb	r2, [r4, r3]
 1470              	.L122:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 44


 856:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 857:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 858:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 859:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 861:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 862:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 865:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 868:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 871:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 874:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 875:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 876:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 877:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get tick */
 878:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   tickstart = HAL_GetTick();   
 1471              		.loc 1 878 0
 1472 0098 FFF7FEFF 		bl	HAL_GetTick
 1473              	.LVL75:
 1474 009c 0700     		movs	r7, r0
 1475              	.LVL76:
 879:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 880:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check pending message */
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   while(__HAL_CAN_MSG_PENDING(hcan, FIFONumber) == 0U)
 1476              		.loc 1 881 0
 1477 009e 3AE0     		b	.L128
 1478              	.LVL77:
 1479              	.L119:
 848:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1480              		.loc 1 848 0
 1481 00a0 6222     		movs	r2, #98
 1482 00a2 3D23     		movs	r3, #61
 1483 00a4 E254     		strb	r2, [r4, r3]
 849:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 1484              		.loc 1 849 0
 1485 00a6 F7E7     		b	.L122
 1486              	.L120:
 851:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1487              		.loc 1 851 0
 1488 00a8 7222     		movs	r2, #114
 1489 00aa 3D23     		movs	r3, #61
 1490 00ac E254     		strb	r2, [r4, r3]
 852:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1491              		.loc 1 852 0
 1492 00ae F3E7     		b	.L122
 1493              	.L117:
 860:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1494              		.loc 1 860 0
 1495 00b0 3D23     		movs	r3, #61
 1496 00b2 E35C     		ldrb	r3, [r4, r3]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 45


 1497 00b4 DBB2     		uxtb	r3, r3
 1498 00b6 222B     		cmp	r3, #34
 1499 00b8 0BD0     		beq	.L124
 1500 00ba 422B     		cmp	r3, #66
 1501 00bc 0DD0     		beq	.L125
 1502 00be 122B     		cmp	r3, #18
 1503 00c0 03D0     		beq	.L156
 872:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1504              		.loc 1 872 0
 1505 00c2 3222     		movs	r2, #50
 1506 00c4 3D23     		movs	r3, #61
 1507 00c6 E254     		strb	r2, [r4, r3]
 873:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1508              		.loc 1 873 0
 1509 00c8 E6E7     		b	.L122
 1510              	.L156:
 863:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1511              		.loc 1 863 0
 1512 00ca 5222     		movs	r2, #82
 1513 00cc 2B33     		adds	r3, r3, #43
 1514 00ce E254     		strb	r2, [r4, r3]
 864:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 1515              		.loc 1 864 0
 1516 00d0 E2E7     		b	.L122
 1517              	.L124:
 866:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1518              		.loc 1 866 0
 1519 00d2 6222     		movs	r2, #98
 1520 00d4 3D23     		movs	r3, #61
 1521 00d6 E254     		strb	r2, [r4, r3]
 867:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 1522              		.loc 1 867 0
 1523 00d8 DEE7     		b	.L122
 1524              	.L125:
 869:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1525              		.loc 1 869 0
 1526 00da 7222     		movs	r2, #114
 1527 00dc 3D23     		movs	r3, #61
 1528 00de E254     		strb	r2, [r4, r3]
 870:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 1529              		.loc 1 870 0
 1530 00e0 DAE7     		b	.L122
 1531              	.LVL78:
 1532              	.L158:
 882:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 883:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check for the Timeout */
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if(Timeout != HAL_MAX_DELAY)
 885:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 886:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 1533              		.loc 1 886 0
 1534 00e2 002E     		cmp	r6, #0
 1535 00e4 04D0     		beq	.L129
 1536              		.loc 1 886 0 is_stmt 0 discriminator 1
 1537 00e6 FFF7FEFF 		bl	HAL_GetTick
 1538              	.LVL79:
 1539 00ea C01B     		subs	r0, r0, r7
 1540 00ec 8642     		cmp	r6, r0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 46


 1541 00ee 12D2     		bcs	.L128
 1542              	.L129:
 887:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 888:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_TIMEOUT;
 1543              		.loc 1 888 0 is_stmt 1
 1544 00f0 0322     		movs	r2, #3
 1545 00f2 3D23     		movs	r3, #61
 1546 00f4 E254     		strb	r2, [r4, r3]
 889:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 890:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Process unlocked */
 891:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         __HAL_UNLOCK(hcan);
 1547              		.loc 1 891 0
 1548 00f6 0022     		movs	r2, #0
 1549 00f8 013B     		subs	r3, r3, #1
 1550 00fa E254     		strb	r2, [r4, r3]
 892:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 893:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         return HAL_TIMEOUT;
 1551              		.loc 1 893 0
 1552 00fc 0320     		movs	r0, #3
 1553 00fe C7E0     		b	.L112
 1554              	.L130:
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 1555              		.loc 1 881 0 discriminator 2
 1556 0100 2368     		ldr	r3, [r4]
 1557 0102 1A69     		ldr	r2, [r3, #16]
 1558 0104 0323     		movs	r3, #3
 1559 0106 1A40     		ands	r2, r3
 1560 0108 5342     		rsbs	r3, r2, #0
 1561 010a 5341     		adcs	r3, r3, r2
 1562 010c DBB2     		uxtb	r3, r3
 1563              	.L131:
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 1564              		.loc 1 881 0 is_stmt 0 discriminator 4
 1565 010e 002B     		cmp	r3, #0
 1566 0110 0BD0     		beq	.L157
 884:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1567              		.loc 1 884 0 is_stmt 1
 1568 0112 731C     		adds	r3, r6, #1
 1569 0114 E5D1     		bne	.L158
 1570              	.L128:
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 1571              		.loc 1 881 0
 1572 0116 002D     		cmp	r5, #0
 1573 0118 F2D1     		bne	.L130
 881:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 1574              		.loc 1 881 0 is_stmt 0 discriminator 1
 1575 011a 2368     		ldr	r3, [r4]
 1576 011c DA68     		ldr	r2, [r3, #12]
 1577 011e 0323     		movs	r3, #3
 1578 0120 1A40     		ands	r2, r3
 1579 0122 5342     		rsbs	r3, r2, #0
 1580 0124 5341     		adcs	r3, r3, r2
 1581 0126 DBB2     		uxtb	r3, r3
 1582 0128 F1E7     		b	.L131
 1583              	.L157:
 894:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 895:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 47


 896:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 897:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 898:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set RxMsg pointer */
 899:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1584              		.loc 1 899 0 is_stmt 1
 1585 012a 002D     		cmp	r5, #0
 1586 012c 76D1     		bne	.L133
 900:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 901:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 1587              		.loc 1 901 0
 1588 012e 636B     		ldr	r3, [r4, #52]
 1589              	.LVL80:
 1590              	.L134:
 902:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 903:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 904:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
 906:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 907:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 908:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the Id */
 909:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 1591              		.loc 1 909 0
 1592 0130 2A00     		movs	r2, r5
 1593 0132 1B32     		adds	r2, r2, #27
 1594 0134 1201     		lsls	r2, r2, #4
 1595 0136 2168     		ldr	r1, [r4]
 1596 0138 5158     		ldr	r1, [r2, r1]
 1597 013a 0422     		movs	r2, #4
 1598 013c 0A40     		ands	r2, r1
 1599 013e 9A60     		str	r2, [r3, #8]
 910:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 1600              		.loc 1 910 0
 1601 0140 6ED1     		bne	.L135
 911:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 912:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_TI0R_STID
 1602              		.loc 1 912 0
 1603 0142 2A00     		movs	r2, r5
 1604 0144 1B32     		adds	r2, r2, #27
 1605 0146 1201     		lsls	r2, r2, #4
 1606 0148 2168     		ldr	r1, [r4]
 1607 014a 5258     		ldr	r2, [r2, r1]
 1608 014c 520D     		lsrs	r2, r2, #21
 1609 014e 1A60     		str	r2, [r3]
 1610              	.L136:
 913:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 914:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
 915:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg->ExtId = (0xFFFFFFF8U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_EXID_P
 917:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 918:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_RTR_Pos;
 1611              		.loc 1 918 0
 1612 0150 2A00     		movs	r2, r5
 1613 0152 1B32     		adds	r2, r2, #27
 1614 0154 1201     		lsls	r2, r2, #4
 1615 0156 2168     		ldr	r1, [r4]
 1616 0158 5058     		ldr	r0, [r2, r1]
 1617 015a 4008     		lsrs	r0, r0, #1
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 48


 1618 015c 0121     		movs	r1, #1
 1619 015e 0140     		ands	r1, r0
 1620 0160 D960     		str	r1, [r3, #12]
 919:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the DLC */
 920:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_DLC_Po
 1621              		.loc 1 920 0
 1622 0162 2168     		ldr	r1, [r4]
 1623 0164 8918     		adds	r1, r1, r2
 1624 0166 4868     		ldr	r0, [r1, #4]
 1625 0168 0F21     		movs	r1, #15
 1626 016a 0140     		ands	r1, r0
 1627 016c 1961     		str	r1, [r3, #16]
 921:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the FMI */
 922:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->FMI = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_FMI_Po
 1628              		.loc 1 922 0
 1629 016e 2168     		ldr	r1, [r4]
 1630 0170 8C46     		mov	ip, r1
 1631 0172 6244     		add	r2, r2, ip
 1632 0174 5168     		ldr	r1, [r2, #4]
 1633 0176 090A     		lsrs	r1, r1, #8
 1634 0178 FF22     		movs	r2, #255
 1635 017a 0A40     		ands	r2, r1
 1636 017c DA61     		str	r2, [r3, #28]
 923:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the FIFONumber */
 924:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 1637              		.loc 1 924 0
 1638 017e 1D62     		str	r5, [r3, #32]
 925:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the data field */
 926:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[0] = (CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1639              		.loc 1 926 0
 1640 0180 2A01     		lsls	r2, r5, #4
 1641 0182 2168     		ldr	r1, [r4]
 1642 0184 8918     		adds	r1, r1, r2
 1643 0186 B931     		adds	r1, r1, #185
 1644 0188 FF31     		adds	r1, r1, #255
 1645 018a 0968     		ldr	r1, [r1]
 1646 018c 1975     		strb	r1, [r3, #20]
 927:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[1] = (CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1647              		.loc 1 927 0
 1648 018e 2168     		ldr	r1, [r4]
 1649 0190 8918     		adds	r1, r1, r2
 1650 0192 B931     		adds	r1, r1, #185
 1651 0194 FF31     		adds	r1, r1, #255
 1652 0196 0968     		ldr	r1, [r1]
 1653 0198 090A     		lsrs	r1, r1, #8
 1654 019a 5975     		strb	r1, [r3, #21]
 928:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[2] = (CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1655              		.loc 1 928 0
 1656 019c 2168     		ldr	r1, [r4]
 1657 019e 8918     		adds	r1, r1, r2
 1658 01a0 B931     		adds	r1, r1, #185
 1659 01a2 FF31     		adds	r1, r1, #255
 1660 01a4 0968     		ldr	r1, [r1]
 1661 01a6 090C     		lsrs	r1, r1, #16
 1662 01a8 9975     		strb	r1, [r3, #22]
 929:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[3] = (CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 1663              		.loc 1 929 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 49


 1664 01aa 2168     		ldr	r1, [r4]
 1665 01ac 8918     		adds	r1, r1, r2
 1666 01ae B931     		adds	r1, r1, #185
 1667 01b0 FF31     		adds	r1, r1, #255
 1668 01b2 0968     		ldr	r1, [r1]
 1669 01b4 090E     		lsrs	r1, r1, #24
 1670 01b6 D975     		strb	r1, [r3, #23]
 930:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[4] = (CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1671              		.loc 1 930 0
 1672 01b8 2168     		ldr	r1, [r4]
 1673 01ba 8918     		adds	r1, r1, r2
 1674 01bc BD31     		adds	r1, r1, #189
 1675 01be FF31     		adds	r1, r1, #255
 1676 01c0 0968     		ldr	r1, [r1]
 1677 01c2 1976     		strb	r1, [r3, #24]
 931:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[5] = (CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1678              		.loc 1 931 0
 1679 01c4 2168     		ldr	r1, [r4]
 1680 01c6 8918     		adds	r1, r1, r2
 1681 01c8 BD31     		adds	r1, r1, #189
 1682 01ca FF31     		adds	r1, r1, #255
 1683 01cc 0968     		ldr	r1, [r1]
 1684 01ce 090A     		lsrs	r1, r1, #8
 1685 01d0 5976     		strb	r1, [r3, #25]
 932:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[6] = (CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1686              		.loc 1 932 0
 1687 01d2 2168     		ldr	r1, [r4]
 1688 01d4 8918     		adds	r1, r1, r2
 1689 01d6 BD31     		adds	r1, r1, #189
 1690 01d8 FF31     		adds	r1, r1, #255
 1691 01da 0968     		ldr	r1, [r1]
 1692 01dc 090C     		lsrs	r1, r1, #16
 1693 01de 9976     		strb	r1, [r3, #26]
 933:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[7] = (CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 1694              		.loc 1 933 0
 1695 01e0 2168     		ldr	r1, [r4]
 1696 01e2 8C46     		mov	ip, r1
 1697 01e4 6244     		add	r2, r2, ip
 1698 01e6 BD32     		adds	r2, r2, #189
 1699 01e8 FF32     		adds	r2, r2, #255
 1700 01ea 1268     		ldr	r2, [r2]
 1701 01ec 120E     		lsrs	r2, r2, #24
 1702 01ee DA76     		strb	r2, [r3, #27]
 934:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 935:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Release the FIFO */
 936:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1703              		.loc 1 936 0
 1704 01f0 002D     		cmp	r5, #0
 1705 01f2 1DD1     		bne	.L137
 937:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 938:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Release FIFO0 */
 939:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 1706              		.loc 1 939 0
 1707 01f4 2268     		ldr	r2, [r4]
 1708 01f6 D368     		ldr	r3, [r2, #12]
 1709              	.LVL81:
 1710 01f8 2021     		movs	r1, #32
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 50


 1711 01fa 0B43     		orrs	r3, r1
 1712 01fc D360     		str	r3, [r2, #12]
 1713              	.L138:
 940:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 941:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 942:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 943:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Release FIFO1 */
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
 945:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 946:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 947:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
 948:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1714              		.loc 1 948 0
 1715 01fe 002D     		cmp	r5, #0
 1716 0200 2CD1     		bne	.L139
 949:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 950:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 1717              		.loc 1 950 0
 1718 0202 3D23     		movs	r3, #61
 1719 0204 E35C     		ldrb	r3, [r4, r3]
 1720 0206 DBB2     		uxtb	r3, r3
 1721 0208 622B     		cmp	r3, #98
 1722 020a 1FD0     		beq	.L141
 1723 020c 722B     		cmp	r3, #114
 1724 020e 21D0     		beq	.L142
 1725 0210 422B     		cmp	r3, #66
 1726 0212 13D0     		beq	.L159
 951:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 952:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 954:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 955:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 958:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 961:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 962:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 1727              		.loc 1 962 0
 1728 0214 0122     		movs	r2, #1
 1729 0216 3D23     		movs	r3, #61
 1730 0218 E254     		strb	r2, [r4, r3]
 963:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1731              		.loc 1 963 0
 1732 021a 12E0     		b	.L144
 1733              	.LVL82:
 1734              	.L133:
 905:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1735              		.loc 1 905 0
 1736 021c A36B     		ldr	r3, [r4, #56]
 1737              	.LVL83:
 1738 021e 87E7     		b	.L134
 1739              	.L135:
 916:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1740              		.loc 1 916 0
 1741 0220 2A00     		movs	r2, r5
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 51


 1742 0222 1B32     		adds	r2, r2, #27
 1743 0224 1201     		lsls	r2, r2, #4
 1744 0226 2168     		ldr	r1, [r4]
 1745 0228 5258     		ldr	r2, [r2, r1]
 1746 022a D208     		lsrs	r2, r2, #3
 1747 022c 5A60     		str	r2, [r3, #4]
 1748 022e 8FE7     		b	.L136
 1749              	.L137:
 944:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1750              		.loc 1 944 0
 1751 0230 2268     		ldr	r2, [r4]
 1752 0232 1369     		ldr	r3, [r2, #16]
 1753              	.LVL84:
 1754 0234 2021     		movs	r1, #32
 1755 0236 0B43     		orrs	r3, r1
 1756 0238 1361     		str	r3, [r2, #16]
 1757 023a E0E7     		b	.L138
 1758              	.L159:
 953:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1759              		.loc 1 953 0
 1760 023c 1222     		movs	r2, #18
 1761 023e 053B     		subs	r3, r3, #5
 1762 0240 E254     		strb	r2, [r4, r3]
 1763              	.L144:
 964:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 965:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 966:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 967:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 969:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 970:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 973:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 976:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 979:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 982:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 983:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 984:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 985:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process unlocked */
 986:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1764              		.loc 1 986 0
 1765 0242 0022     		movs	r2, #0
 1766 0244 3C23     		movs	r3, #60
 1767 0246 E254     		strb	r2, [r4, r3]
 987:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 988:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
 989:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 1768              		.loc 1 989 0
 1769 0248 0020     		movs	r0, #0
 1770 024a 21E0     		b	.L112
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 52


 1771              	.L141:
 956:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1772              		.loc 1 956 0
 1773 024c 3222     		movs	r2, #50
 1774 024e 3D23     		movs	r3, #61
 1775 0250 E254     		strb	r2, [r4, r3]
 957:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1776              		.loc 1 957 0
 1777 0252 F6E7     		b	.L144
 1778              	.L142:
 959:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1779              		.loc 1 959 0
 1780 0254 5222     		movs	r2, #82
 1781 0256 3D23     		movs	r3, #61
 1782 0258 E254     		strb	r2, [r4, r3]
 960:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 1783              		.loc 1 960 0
 1784 025a F2E7     		b	.L144
 1785              	.L139:
 968:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 1786              		.loc 1 968 0
 1787 025c 3D23     		movs	r3, #61
 1788 025e E35C     		ldrb	r3, [r4, r3]
 1789 0260 DBB2     		uxtb	r3, r3
 1790 0262 622B     		cmp	r3, #98
 1791 0264 0BD0     		beq	.L146
 1792 0266 722B     		cmp	r3, #114
 1793 0268 0DD0     		beq	.L147
 1794 026a 522B     		cmp	r3, #82
 1795 026c 03D0     		beq	.L160
 980:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1796              		.loc 1 980 0
 1797 026e 0122     		movs	r2, #1
 1798 0270 3D23     		movs	r3, #61
 1799 0272 E254     		strb	r2, [r4, r3]
 981:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 1800              		.loc 1 981 0
 1801 0274 E5E7     		b	.L144
 1802              	.L160:
 971:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1803              		.loc 1 971 0
 1804 0276 1222     		movs	r2, #18
 1805 0278 153B     		subs	r3, r3, #21
 1806 027a E254     		strb	r2, [r4, r3]
 972:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 1807              		.loc 1 972 0
 1808 027c E1E7     		b	.L144
 1809              	.L146:
 974:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1810              		.loc 1 974 0
 1811 027e 2222     		movs	r2, #34
 1812 0280 3D23     		movs	r3, #61
 1813 0282 E254     		strb	r2, [r4, r3]
 975:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 1814              		.loc 1 975 0
 1815 0284 DDE7     		b	.L144
 1816              	.L147:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 53


 977:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1817              		.loc 1 977 0
 1818 0286 4222     		movs	r2, #66
 1819 0288 3D23     		movs	r3, #61
 1820 028a E254     		strb	r2, [r4, r3]
 978:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 1821              		.loc 1 978 0
 1822 028c D9E7     		b	.L144
 1823              	.LVL85:
 1824              	.L149:
 813:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1825              		.loc 1 813 0
 1826 028e 0220     		movs	r0, #2
 1827              	.LVL86:
 1828              	.L112:
 990:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 1829              		.loc 1 990 0
 1830              		@ sp needed
 1831              	.LVL87:
 1832              	.LVL88:
 1833 0290 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1834              		.cfi_endproc
 1835              	.LFE42:
 1837              		.section	.text.HAL_CAN_Receive_IT,"ax",%progbits
 1838              		.align	1
 1839              		.global	HAL_CAN_Receive_IT
 1840              		.syntax unified
 1841              		.code	16
 1842              		.thumb_func
 1843              		.fpu softvfp
 1845              	HAL_CAN_Receive_IT:
 1846              	.LFB43:
 991:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 992:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
 993:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
 994:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
 995:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
 996:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  FIFONumber:    FIFO number.
 997:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
 998:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
 999:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1000:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 1847              		.loc 1 1000 0
 1848              		.cfi_startproc
 1849              		@ args = 0, pretend = 0, frame = 0
 1850              		@ frame_needed = 0, uses_anonymous_args = 0
 1851              	.LVL89:
 1852 0000 30B5     		push	{r4, r5, lr}
 1853              	.LCFI6:
 1854              		.cfi_def_cfa_offset 12
 1855              		.cfi_offset 4, -12
 1856              		.cfi_offset 5, -8
 1857              		.cfi_offset 14, -4
1001:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check the parameters */
1002:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
1003:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1004:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process locked */
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 54


1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_LOCK(hcan);
 1858              		.loc 1 1005 0
 1859 0002 3C23     		movs	r3, #60
 1860 0004 C35C     		ldrb	r3, [r0, r3]
 1861 0006 012B     		cmp	r3, #1
 1862 0008 7DD0     		beq	.L178
 1863              		.loc 1 1005 0 is_stmt 0 discriminator 2
 1864 000a 0122     		movs	r2, #1
 1865 000c 3C23     		movs	r3, #60
 1866 000e C254     		strb	r2, [r0, r3]
1006:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1007:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO0 */
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO0) && ((hcan->State == HAL_CAN_STATE_BUSY_RX0) ||        \
 1867              		.loc 1 1008 0 is_stmt 1 discriminator 2
 1868 0010 0029     		cmp	r1, #0
 1869 0012 0FD1     		bne	.L163
 1870              		.loc 1 1008 0 is_stmt 0 discriminator 1
 1871 0014 0133     		adds	r3, r3, #1
 1872 0016 C35C     		ldrb	r3, [r0, r3]
 1873 0018 222B     		cmp	r3, #34
 1874 001a 1CD0     		beq	.L164
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1875              		.loc 1 1009 0 is_stmt 1 discriminator 2
 1876 001c 3D23     		movs	r3, #61
 1877 001e C35C     		ldrb	r3, [r0, r3]
1008:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1878              		.loc 1 1008 0 discriminator 2
 1879 0020 422B     		cmp	r3, #66
 1880 0022 18D0     		beq	.L164
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1881              		.loc 1 1010 0
 1882 0024 3D23     		movs	r3, #61
 1883 0026 C35C     		ldrb	r3, [r0, r3]
1009:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0) ||      \
 1884              		.loc 1 1009 0
 1885 0028 622B     		cmp	r3, #98
 1886 002a 14D0     		beq	.L164
1011:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1887              		.loc 1 1011 0
 1888 002c 3D23     		movs	r3, #61
 1889 002e C35C     		ldrb	r3, [r0, r3]
1010:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1890              		.loc 1 1010 0
 1891 0030 722B     		cmp	r3, #114
 1892 0032 10D0     		beq	.L164
 1893              	.L163:
1012:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1013:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
1015:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_BUSY;
1017:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1018:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1019:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check if CAN state is not busy for RX FIFO1 */
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if ((FIFONumber == CAN_FIFO1) && ((hcan->State == HAL_CAN_STATE_BUSY_RX1) ||        \
 1894              		.loc 1 1020 0
 1895 0034 0129     		cmp	r1, #1
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 55


 1896 0036 13D0     		beq	.L181
 1897              	.L165:
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
1024:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1025:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
1027:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_BUSY;
1029:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1030:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1031:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1032:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 1898              		.loc 1 1032 0
 1899 0038 0029     		cmp	r1, #0
 1900 003a 44D1     		bne	.L167
1033:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1034:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 1901              		.loc 1 1034 0
 1902 003c 3D23     		movs	r3, #61
 1903 003e C35C     		ldrb	r3, [r0, r3]
 1904 0040 DBB2     		uxtb	r3, r3
 1905 0042 322B     		cmp	r3, #50
 1906 0044 37D0     		beq	.L169
 1907 0046 522B     		cmp	r3, #82
 1908 0048 39D0     		beq	.L170
 1909 004a 122B     		cmp	r3, #18
 1910 004c 1DD0     		beq	.L182
1035:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1036:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1038:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1039:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX1):
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1042:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1045:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1046:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
 1911              		.loc 1 1046 0
 1912 004e 2222     		movs	r2, #34
 1913 0050 3D23     		movs	r3, #61
 1914 0052 C254     		strb	r2, [r0, r3]
1047:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1915              		.loc 1 1047 0
 1916 0054 1CE0     		b	.L172
 1917              	.L164:
1014:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1918              		.loc 1 1014 0
 1919 0056 0022     		movs	r2, #0
 1920 0058 3C23     		movs	r3, #60
 1921 005a C254     		strb	r2, [r0, r3]
1016:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1922              		.loc 1 1016 0
 1923 005c 0220     		movs	r0, #2
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 56


 1924              	.LVL90:
 1925 005e 53E0     		b	.L162
 1926              	.LVL91:
 1927              	.L181:
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1928              		.loc 1 1020 0 discriminator 1
 1929 0060 3D23     		movs	r3, #61
 1930 0062 C35C     		ldrb	r3, [r0, r3]
 1931 0064 322B     		cmp	r3, #50
 1932 0066 0BD0     		beq	.L166
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1933              		.loc 1 1021 0 discriminator 2
 1934 0068 3D23     		movs	r3, #61
 1935 006a C35C     		ldrb	r3, [r0, r3]
1020:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX1) ||      \
 1936              		.loc 1 1020 0 discriminator 2
 1937 006c 522B     		cmp	r3, #82
 1938 006e 07D0     		beq	.L166
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1939              		.loc 1 1022 0
 1940 0070 3D23     		movs	r3, #61
 1941 0072 C35C     		ldrb	r3, [r0, r3]
1021:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_RX0_RX1) ||     \
 1942              		.loc 1 1021 0
 1943 0074 622B     		cmp	r3, #98
 1944 0076 03D0     		beq	.L166
1023:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 1945              		.loc 1 1023 0
 1946 0078 3D23     		movs	r3, #61
 1947 007a C35C     		ldrb	r3, [r0, r3]
1022:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                     (hcan->State == HAL_CAN_STATE_BUSY_TX_RX0_RX1)))
 1948              		.loc 1 1022 0
 1949 007c 722B     		cmp	r3, #114
 1950 007e DBD1     		bne	.L165
 1951              	.L166:
1026:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 1952              		.loc 1 1026 0
 1953 0080 0022     		movs	r2, #0
 1954 0082 3C23     		movs	r3, #60
 1955 0084 C254     		strb	r2, [r0, r3]
1028:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 1956              		.loc 1 1028 0
 1957 0086 0220     		movs	r0, #2
 1958              	.LVL92:
 1959 0088 3EE0     		b	.L162
 1960              	.LVL93:
 1961              	.L182:
1037:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1962              		.loc 1 1037 0
 1963 008a 4222     		movs	r2, #66
 1964 008c 2B33     		adds	r3, r3, #43
 1965 008e C254     		strb	r2, [r0, r3]
 1966              	.L172:
1048:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1049:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1050:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1051:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 57


1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
1053:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1054:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX):
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1057:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1060:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0_RX1;
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1063:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1066:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1067:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1068:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1069:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set CAN error code to none */
1070:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 1967              		.loc 1 1070 0
 1968 0090 0022     		movs	r2, #0
 1969 0092 0264     		str	r2, [r0, #64]
1071:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1072:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Enable interrupts: */
1073:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /*  - Enable Error warning Interrupt */
1074:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /*  - Enable Error passive Interrupt */
1075:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /*  - Enable Bus-off Interrupt */
1076:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /*  - Enable Last error code Interrupt */
1077:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /*  - Enable Error Interrupt */
1078:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_CAN_ENABLE_IT(hcan, CAN_IT_EWG |
 1970              		.loc 1 1078 0
 1971 0094 0468     		ldr	r4, [r0]
 1972 0096 6569     		ldr	r5, [r4, #20]
 1973 0098 8F23     		movs	r3, #143
 1974 009a 1B02     		lsls	r3, r3, #8
 1975 009c 2B43     		orrs	r3, r5
 1976 009e 6361     		str	r3, [r4, #20]
1079:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                             CAN_IT_EPV |
1080:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                             CAN_IT_BOF |
1081:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                             CAN_IT_LEC |
1082:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                             CAN_IT_ERR);
1083:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1084:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process unlocked */
1085:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 1977              		.loc 1 1085 0
 1978 00a0 3C23     		movs	r3, #60
 1979 00a2 C254     		strb	r2, [r0, r3]
1086:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1087:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 1980              		.loc 1 1087 0
 1981 00a4 0029     		cmp	r1, #0
 1982 00a6 27D0     		beq	.L183
1088:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1089:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Enable FIFO 0 overrun and message pending Interrupt */
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
1091:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1092:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 58


1093:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1094:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Enable FIFO 1 overrun and message pending Interrupt */
1095:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
 1983              		.loc 1 1095 0
 1984 00a8 0268     		ldr	r2, [r0]
 1985 00aa 5369     		ldr	r3, [r2, #20]
 1986 00ac 5021     		movs	r1, #80
 1987              	.LVL94:
 1988 00ae 0B43     		orrs	r3, r1
 1989 00b0 5361     		str	r3, [r2, #20]
1096:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1097:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1098:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
1099:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 1990              		.loc 1 1099 0
 1991 00b2 0020     		movs	r0, #0
 1992              	.LVL95:
 1993 00b4 28E0     		b	.L162
 1994              	.LVL96:
 1995              	.L169:
1040:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 1996              		.loc 1 1040 0
 1997 00b6 6222     		movs	r2, #98
 1998 00b8 3D23     		movs	r3, #61
 1999 00ba C254     		strb	r2, [r0, r3]
1041:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
 2000              		.loc 1 1041 0
 2001 00bc E8E7     		b	.L172
 2002              	.L170:
1043:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2003              		.loc 1 1043 0
 2004 00be 7222     		movs	r2, #114
 2005 00c0 3D23     		movs	r3, #61
 2006 00c2 C254     		strb	r2, [r0, r3]
1044:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 2007              		.loc 1 1044 0
 2008 00c4 E4E7     		b	.L172
 2009              	.L167:
1052:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2010              		.loc 1 1052 0
 2011 00c6 3D23     		movs	r3, #61
 2012 00c8 C35C     		ldrb	r3, [r0, r3]
 2013 00ca DBB2     		uxtb	r3, r3
 2014 00cc 222B     		cmp	r3, #34
 2015 00ce 0BD0     		beq	.L174
 2016 00d0 422B     		cmp	r3, #66
 2017 00d2 0DD0     		beq	.L175
 2018 00d4 122B     		cmp	r3, #18
 2019 00d6 03D0     		beq	.L184
1064:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2020              		.loc 1 1064 0
 2021 00d8 3222     		movs	r2, #50
 2022 00da 3D23     		movs	r3, #61
 2023 00dc C254     		strb	r2, [r0, r3]
1065:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2024              		.loc 1 1065 0
 2025 00de D7E7     		b	.L172
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 59


 2026              	.L184:
1055:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2027              		.loc 1 1055 0
 2028 00e0 5222     		movs	r2, #82
 2029 00e2 2B33     		adds	r3, r3, #43
 2030 00e4 C254     		strb	r2, [r0, r3]
1056:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0):
 2031              		.loc 1 1056 0
 2032 00e6 D3E7     		b	.L172
 2033              	.L174:
1058:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2034              		.loc 1 1058 0
 2035 00e8 6222     		movs	r2, #98
 2036 00ea 3D23     		movs	r3, #61
 2037 00ec C254     		strb	r2, [r0, r3]
1059:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
 2038              		.loc 1 1059 0
 2039 00ee CFE7     		b	.L172
 2040              	.L175:
1061:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2041              		.loc 1 1061 0
 2042 00f0 7222     		movs	r2, #114
 2043 00f2 3D23     		movs	r3, #61
 2044 00f4 C254     		strb	r2, [r0, r3]
1062:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_READY */
 2045              		.loc 1 1062 0
 2046 00f6 CBE7     		b	.L172
 2047              	.L183:
1090:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2048              		.loc 1 1090 0
 2049 00f8 0268     		ldr	r2, [r0]
 2050 00fa 5369     		ldr	r3, [r2, #20]
 2051 00fc 0A31     		adds	r1, r1, #10
 2052              	.LVL97:
 2053 00fe 0B43     		orrs	r3, r1
 2054 0100 5361     		str	r3, [r2, #20]
 2055              		.loc 1 1099 0
 2056 0102 0020     		movs	r0, #0
 2057              	.LVL98:
 2058 0104 00E0     		b	.L162
 2059              	.LVL99:
 2060              	.L178:
1005:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2061              		.loc 1 1005 0
 2062 0106 0220     		movs	r0, #2
 2063              	.LVL100:
 2064              	.L162:
1100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2065              		.loc 1 1100 0
 2066              		@ sp needed
 2067 0108 30BD     		pop	{r4, r5, pc}
 2068              		.cfi_endproc
 2069              	.LFE43:
 2071              		.section	.text.HAL_CAN_Sleep,"ax",%progbits
 2072              		.align	1
 2073              		.global	HAL_CAN_Sleep
 2074              		.syntax unified
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 60


 2075              		.code	16
 2076              		.thumb_func
 2077              		.fpu softvfp
 2079              	HAL_CAN_Sleep:
 2080              	.LFB44:
1101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Enters the Sleep (low power) mode.
1104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status.
1107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Sleep(CAN_HandleTypeDef* hcan)
1109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2081              		.loc 1 1109 0
 2082              		.cfi_startproc
 2083              		@ args = 0, pretend = 0, frame = 0
 2084              		@ frame_needed = 0, uses_anonymous_args = 0
 2085              	.LVL101:
 2086 0000 70B5     		push	{r4, r5, r6, lr}
 2087              	.LCFI7:
 2088              		.cfi_def_cfa_offset 16
 2089              		.cfi_offset 4, -16
 2090              		.cfi_offset 5, -12
 2091              		.cfi_offset 6, -8
 2092              		.cfi_offset 14, -4
 2093 0002 0400     		movs	r4, r0
 2094              	.LVL102:
1110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart = 0U;
1111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    
1112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process locked */
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_LOCK(hcan);
 2095              		.loc 1 1113 0
 2096 0004 3C23     		movs	r3, #60
 2097 0006 C35C     		ldrb	r3, [r0, r3]
 2098 0008 012B     		cmp	r3, #1
 2099 000a 37D0     		beq	.L191
 2100              		.loc 1 1113 0 is_stmt 0 discriminator 2
 2101 000c 0122     		movs	r2, #1
 2102 000e 3C23     		movs	r3, #60
 2103 0010 C254     		strb	r2, [r0, r3]
1114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY; 
 2104              		.loc 1 1116 0 is_stmt 1 discriminator 2
 2105 0012 0132     		adds	r2, r2, #1
 2106 0014 0133     		adds	r3, r3, #1
 2107 0016 C254     		strb	r2, [r0, r3]
1117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
1118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Request Sleep mode */
1119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   MODIFY_REG(hcan->Instance->MCR,
 2108              		.loc 1 1119 0 discriminator 2
 2109 0018 0168     		ldr	r1, [r0]
 2110 001a 0B68     		ldr	r3, [r1]
 2111 001c 0320     		movs	r0, #3
 2112              	.LVL103:
 2113 001e 8343     		bics	r3, r0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 61


 2114 0020 1343     		orrs	r3, r2
 2115 0022 0B60     		str	r3, [r1]
1120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              CAN_MCR_INRQ       ,
1121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****              CAN_MCR_SLEEP       );
1122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    
1123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Sleep mode status */
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 2116              		.loc 1 1124 0 discriminator 2
 2117 0024 2368     		ldr	r3, [r4]
 2118 0026 5968     		ldr	r1, [r3, #4]
 2119 0028 0A42     		tst	r2, r1
 2120 002a 02D0     		beq	.L187
1125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 2121              		.loc 1 1125 0 discriminator 1
 2122 002c 5B68     		ldr	r3, [r3, #4]
1124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 2123              		.loc 1 1124 0 discriminator 1
 2124 002e DB07     		lsls	r3, r3, #31
 2125 0030 04D5     		bpl	.L188
 2126              	.L187:
1126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
1128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
 2127              		.loc 1 1128 0
 2128 0032 0022     		movs	r2, #0
 2129 0034 3C23     		movs	r3, #60
 2130 0036 E254     		strb	r2, [r4, r3]
1129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
 2131              		.loc 1 1131 0
 2132 0038 0120     		movs	r0, #1
 2133 003a 20E0     		b	.L186
 2134              	.L188:
1132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get tick */
1135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   tickstart = HAL_GetTick();   
 2135              		.loc 1 1135 0
 2136 003c FFF7FEFF 		bl	HAL_GetTick
 2137              	.LVL104:
 2138 0040 0500     		movs	r5, r0
 2139              	.LVL105:
1136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Wait the acknowledge */
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   while (HAL_IS_BIT_CLR(hcan->Instance->MSR, CAN_MSR_SLAK) ||
 2140              		.loc 1 1138 0
 2141 0042 04E0     		b	.L189
 2142              	.LVL106:
 2143              	.L190:
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
1140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 2144              		.loc 1 1141 0
 2145 0044 FFF7FEFF 		bl	HAL_GetTick
 2146              	.LVL107:
 2147 0048 401B     		subs	r0, r0, r5
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 62


 2148 004a 0A28     		cmp	r0, #10
 2149 004c 0ED8     		bhi	.L192
 2150              	.L189:
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 2151              		.loc 1 1138 0
 2152 004e 2368     		ldr	r3, [r4]
 2153 0050 5A68     		ldr	r2, [r3, #4]
 2154 0052 9207     		lsls	r2, r2, #30
 2155 0054 F6D5     		bpl	.L190
1139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 2156              		.loc 1 1139 0 discriminator 1
 2157 0056 5B68     		ldr	r3, [r3, #4]
1138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_INAK)   )
 2158              		.loc 1 1138 0 discriminator 1
 2159 0058 DB07     		lsls	r3, r3, #31
 2160 005a F3D4     		bmi	.L190
1142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_TIMEOUT;
1144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Process unlocked */
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_TIMEOUT;
1147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 2161              		.loc 1 1151 0
 2162 005c 0122     		movs	r2, #1
 2163 005e 3D23     		movs	r3, #61
 2164 0060 E254     		strb	r2, [r4, r3]
1152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process unlocked */
1154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_UNLOCK(hcan);
 2165              		.loc 1 1154 0
 2166 0062 0022     		movs	r2, #0
 2167 0064 013B     		subs	r3, r3, #1
 2168 0066 E254     		strb	r2, [r4, r3]
1155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
1157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
 2169              		.loc 1 1157 0
 2170 0068 0020     		movs	r0, #0
 2171 006a 08E0     		b	.L186
 2172              	.L192:
1143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Process unlocked */
 2173              		.loc 1 1143 0
 2174 006c 0322     		movs	r2, #3
 2175 006e 3D23     		movs	r3, #61
 2176 0070 E254     		strb	r2, [r4, r3]
1145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_TIMEOUT;
 2177              		.loc 1 1145 0
 2178 0072 0022     		movs	r2, #0
 2179 0074 013B     		subs	r3, r3, #1
 2180 0076 E254     		strb	r2, [r4, r3]
1146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2181              		.loc 1 1146 0
 2182 0078 0320     		movs	r0, #3
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 63


 2183 007a 00E0     		b	.L186
 2184              	.LVL108:
 2185              	.L191:
1113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 2186              		.loc 1 1113 0
 2187 007c 0220     		movs	r0, #2
 2188              	.LVL109:
 2189              	.L186:
1158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2190              		.loc 1 1158 0
 2191              		@ sp needed
 2192              	.LVL110:
 2193 007e 70BD     		pop	{r4, r5, r6, pc}
 2194              		.cfi_endproc
 2195              	.LFE44:
 2197              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 2198              		.align	1
 2199              		.global	HAL_CAN_WakeUp
 2200              		.syntax unified
 2201              		.code	16
 2202              		.thumb_func
 2203              		.fpu softvfp
 2205              	HAL_CAN_WakeUp:
 2206              	.LFB45:
1159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode, after that the CAN peripheral
1162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         is in the normal mode.
1163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status.
1166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef* hcan)
1168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2207              		.loc 1 1168 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 0
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211              	.LVL111:
 2212 0000 70B5     		push	{r4, r5, r6, lr}
 2213              	.LCFI8:
 2214              		.cfi_def_cfa_offset 16
 2215              		.cfi_offset 4, -16
 2216              		.cfi_offset 5, -12
 2217              		.cfi_offset 6, -8
 2218              		.cfi_offset 14, -4
 2219 0002 0400     		movs	r4, r0
 2220              	.LVL112:
1169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t tickstart = 0U;
1170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
1171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process locked */
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_LOCK(hcan);
 2221              		.loc 1 1172 0
 2222 0004 3C23     		movs	r3, #60
 2223 0006 C35C     		ldrb	r3, [r0, r3]
 2224 0008 012B     		cmp	r3, #1
 2225 000a 01D1     		bne	.L199
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 64


 2226 000c 0220     		movs	r0, #2
 2227              	.LVL113:
 2228              	.L194:
1173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_BUSY;  
1176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  
1177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Wake up request */
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
1180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get tick */
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   tickstart = HAL_GetTick();   
1182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Sleep mode status */
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   while(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
1185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State= HAL_CAN_STATE_TIMEOUT;
1189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Process unlocked */
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       __HAL_UNLOCK(hcan);
1192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       return HAL_TIMEOUT;
1194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(HAL_IS_BIT_SET(hcan->Instance->MSR, CAN_MSR_SLAK))
1198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Process unlocked */
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_UNLOCK(hcan);
1201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Return function status */
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     return HAL_ERROR;
1204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY; 
1208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Process unlocked */
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_UNLOCK(hcan);
1211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
1214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2229              		.loc 1 1214 0
 2230              		@ sp needed
 2231              	.LVL114:
 2232 000e 70BD     		pop	{r4, r5, r6, pc}
 2233              	.LVL115:
 2234              	.L199:
1172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 2235              		.loc 1 1172 0 discriminator 2
 2236 0010 0122     		movs	r2, #1
 2237 0012 3C23     		movs	r3, #60
 2238 0014 C254     		strb	r2, [r0, r3]
1175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 65


 2239              		.loc 1 1175 0 discriminator 2
 2240 0016 0221     		movs	r1, #2
 2241 0018 0133     		adds	r3, r3, #1
 2242 001a C154     		strb	r1, [r0, r3]
1178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 2243              		.loc 1 1178 0 discriminator 2
 2244 001c 0268     		ldr	r2, [r0]
 2245 001e 1368     		ldr	r3, [r2]
 2246 0020 8B43     		bics	r3, r1
 2247 0022 1360     		str	r3, [r2]
1181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 2248              		.loc 1 1181 0 discriminator 2
 2249 0024 FFF7FEFF 		bl	HAL_GetTick
 2250              	.LVL116:
 2251 0028 0500     		movs	r5, r0
 2252              	.LVL117:
 2253              	.L195:
1184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2254              		.loc 1 1184 0
 2255 002a 2368     		ldr	r3, [r4]
 2256 002c 5A68     		ldr	r2, [r3, #4]
 2257 002e 9207     		lsls	r2, r2, #30
 2258 0030 0CD5     		bpl	.L200
1186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2259              		.loc 1 1186 0
 2260 0032 FFF7FEFF 		bl	HAL_GetTick
 2261              	.LVL118:
 2262 0036 401B     		subs	r0, r0, r5
 2263 0038 0A28     		cmp	r0, #10
 2264 003a F6D9     		bls	.L195
1188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2265              		.loc 1 1188 0
 2266 003c 0322     		movs	r2, #3
 2267 003e 3D23     		movs	r3, #61
 2268 0040 E254     		strb	r2, [r4, r3]
1191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2269              		.loc 1 1191 0
 2270 0042 0022     		movs	r2, #0
 2271 0044 013B     		subs	r3, r3, #1
 2272 0046 E254     		strb	r2, [r4, r3]
1193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2273              		.loc 1 1193 0
 2274 0048 0320     		movs	r0, #3
 2275 004a E0E7     		b	.L194
 2276              	.L200:
1197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2277              		.loc 1 1197 0
 2278 004c 5B68     		ldr	r3, [r3, #4]
 2279 004e 9B07     		lsls	r3, r3, #30
 2280 0050 07D4     		bmi	.L201
1207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 2281              		.loc 1 1207 0
 2282 0052 0122     		movs	r2, #1
 2283 0054 3D23     		movs	r3, #61
 2284 0056 E254     		strb	r2, [r4, r3]
1210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
 2285              		.loc 1 1210 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 66


 2286 0058 0022     		movs	r2, #0
 2287 005a 013B     		subs	r3, r3, #1
 2288 005c E254     		strb	r2, [r4, r3]
1213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2289              		.loc 1 1213 0
 2290 005e 0020     		movs	r0, #0
 2291 0060 D5E7     		b	.L194
 2292              	.L201:
1200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2293              		.loc 1 1200 0
 2294 0062 0022     		movs	r2, #0
 2295 0064 3C23     		movs	r3, #60
 2296 0066 E254     		strb	r2, [r4, r3]
1203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2297              		.loc 1 1203 0
 2298 0068 0120     		movs	r0, #1
 2299 006a D0E7     		b	.L194
 2300              		.cfi_endproc
 2301              	.LFE45:
 2303              		.section	.text.HAL_CAN_TxCpltCallback,"ax",%progbits
 2304              		.align	1
 2305              		.weak	HAL_CAN_TxCpltCallback
 2306              		.syntax unified
 2307              		.code	16
 2308              		.thumb_func
 2309              		.fpu softvfp
 2311              	HAL_CAN_TxCpltCallback:
 2312              	.LFB47:
1215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Handles CAN interrupt request  
1218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
1221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef* hcan)
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Overrun flag for FIFO0 */
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV0))    &&
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0)))
1229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to FOV0 error */
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV0;
1232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Clear FIFO0 Overrun Flag */
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Overrun flag for FIFO1 */
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_FOV1))    &&
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1)))
1240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to FOV1 error */
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     errorcode |= HAL_CAN_ERROR_FOV1;
1243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 67


1244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Clear FIFO1 Overrun Flag */
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check End of transmission flag */
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_TME))
1250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Check Transmit request completion status */
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     if((__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_0)) ||
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1)) ||
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2)))
1255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Check Transmit success */
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK0)) ||
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1)) ||
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2)))
1260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Call transmit function */
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         CAN_Transmit_IT(hcan);
1263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       else /* Transmit failure */
1265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
1266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         /* Set CAN error code to TXFAIL error */
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_TXFAIL;
1268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
1269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       /* Clear transmission status flags (RQCPx and TXOKx) */
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_RQCP0  | CAN_TSR_RQCP1  | CAN_TSR_RQCP2 | \
1272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
1273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check End of reception flag for FIFO0 */
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP0)) &&
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0) != 0U))
1279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Call receive function */
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO0);
1282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check End of reception flag for FIFO1 */
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FMP1)) &&
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1) != 0U))
1287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Call receive function */
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CAN_Receive_IT(hcan, CAN_FIFO1);
1290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set error code in handle */
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   hcan->ErrorCode |= errorcode;
1294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Error Warning Flag */
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EWG))    &&
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG)) &&
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to EWG error */
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 68


1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EWG;
1302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
1303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Error Passive Flag */
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_EPV))    &&
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV)) &&
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to EPV error */
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_EPV;
1312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
1313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Bus-Off Flag */
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_BOF))    &&
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF)) &&
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set CAN error code to BOF error */
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_BOF;
1322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
1323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Check Last error code Flag */
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((!HAL_IS_BIT_CLR(hcan->Instance->ESR, CAN_ESR_LEC)) &&
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC))         &&
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
1329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->Instance->ESR & CAN_ESR_LEC)
1331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_0):
1333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Set CAN error code to STF error */
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_STF;
1335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
1336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_1):
1337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Set CAN error code to FOR error */
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_FOR;
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
1340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
1341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Set CAN error code to ACK error */
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_ACK;
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
1344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_2):
1345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Set CAN error code to BR error */
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BR;
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
1348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
1349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Set CAN error code to BD error */
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_BD;
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
1352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
1353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           /* Set CAN error code to CRC error */
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           hcan->ErrorCode |= HAL_CAN_ERROR_CRC;
1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
1356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default:
1357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 69


1358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Clear Last error code Flag */ 
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
1362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(hcan->ErrorCode != HAL_CAN_ERROR_NONE)
1366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Clear ERRI Flag */ 
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     SET_BIT(hcan->Instance->MSR, CAN_MSR_ERRI);
1369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Set the CAN state ready to be able to start again the process */
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Disable interrupts: */
1374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error Interrupt */
1379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable FIFO 0 message pending Interrupt */
1380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable FIFO 0 Overrun Interrupt */
1381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable FIFO 1 message pending Interrupt */
1382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable FIFO 1 Overrun Interrupt */
1383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Transmit mailbox empty Interrupt */
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_EPV |
1386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_BOF |
1387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_LEC |
1388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_ERR |
1389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_FMP0|
1390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_FOV0|
1391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_FMP1|
1392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_FOV1|
1393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_TME  );
1394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Call Error callback function */
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
1397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }  
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
1399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
1405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_TxCpltCallback(CAN_HandleTypeDef* hcan)
1407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2313              		.loc 1 1407 0
 2314              		.cfi_startproc
 2315              		@ args = 0, pretend = 0, frame = 0
 2316              		@ frame_needed = 0, uses_anonymous_args = 0
 2317              		@ link register save eliminated.
 2318              	.LVL119:
1408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 70


1409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
1410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_TxCpltCallback could be implemented in the user file
1413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
1414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2319              		.loc 1 1414 0
 2320              		@ sp needed
 2321 0000 7047     		bx	lr
 2322              		.cfi_endproc
 2323              	.LFE47:
 2325              		.section	.text.CAN_Transmit_IT,"ax",%progbits
 2326              		.align	1
 2327              		.syntax unified
 2328              		.code	16
 2329              		.thumb_func
 2330              		.fpu softvfp
 2332              	CAN_Transmit_IT:
 2333              	.LFB52:
1415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Transmission  complete callback in non blocking mode 
1418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
1421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_RxCpltCallback(CAN_HandleTypeDef* hcan)
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
1424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
1426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_RxCpltCallback could be implemented in the user file
1429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
1431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Error CAN callback.
1434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
1437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
1440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
1441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   UNUSED(hcan);
1442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
1445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****    */
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
1447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
1450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Peripheral State and Error functions
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 71


1453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *  @brief   CAN Peripheral State functions 
1454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *
1455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @verbatim   
1456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
1457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****             ##### Peripheral State and Error functions #####
1458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   ==============================================================================
1459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     [..]
1460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     This subsection provides functions allowing to :
1461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Check the CAN state.
1462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       (+) Check CAN Errors detected during interrupt process
1463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          
1464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** @endverbatim
1465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @{
1466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  return the CAN state
1470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL state
1473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef* hcan)
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
1476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return CAN state */
1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return hcan->State;
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
1479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Return the CAN error code
1482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.
1484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval CAN Error Code
1485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return hcan->ErrorCode;
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
1490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
1493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1496:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @}
1497:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1498:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1499:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /** @addtogroup CAN_Private_Functions CAN Private Functions
1500:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *  @brief    CAN Frame message Rx/Tx functions 
1501:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  *
1502:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  * @{
1503:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****  */
1504:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1505:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1506:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Initiates and transmits a CAN frame message.
1507:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan: pointer to a CAN_HandleTypeDef structure that contains
1508:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1509:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 72


1510:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1511:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** static HAL_StatusTypeDef CAN_Transmit_IT(CAN_HandleTypeDef* hcan)
1512:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2334              		.loc 1 1512 0
 2335              		.cfi_startproc
 2336              		@ args = 0, pretend = 0, frame = 0
 2337              		@ frame_needed = 0, uses_anonymous_args = 0
 2338              	.LVL120:
 2339 0000 10B5     		push	{r4, lr}
 2340              	.LCFI9:
 2341              		.cfi_def_cfa_offset 8
 2342              		.cfi_offset 4, -8
 2343              		.cfi_offset 14, -4
1513:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Disable Transmit mailbox empty Interrupt */
1514:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   __HAL_CAN_DISABLE_IT(hcan, CAN_IT_TME);
 2344              		.loc 1 1514 0
 2345 0002 0268     		ldr	r2, [r0]
 2346 0004 5369     		ldr	r3, [r2, #20]
 2347 0006 0121     		movs	r1, #1
 2348 0008 8B43     		bics	r3, r1
 2349 000a 5361     		str	r3, [r2, #20]
1515:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1516:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(hcan->State == HAL_CAN_STATE_BUSY_TX)
 2350              		.loc 1 1516 0
 2351 000c 3D23     		movs	r3, #61
 2352 000e C35C     		ldrb	r3, [r0, r3]
 2353 0010 122B     		cmp	r3, #18
 2354 0012 0CD0     		beq	.L211
 2355              	.L204:
1517:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {   
1518:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Disable interrupts: */
1519:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1520:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1521:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1522:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1523:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error Interrupt */
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1525:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_EPV |
1526:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_BOF |
1527:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_LEC |
1528:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_ERR );
1529:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1530:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1531:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1532:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   switch(hcan->State)
 2356              		.loc 1 1532 0
 2357 0014 3D23     		movs	r3, #61
 2358 0016 C35C     		ldrb	r3, [r0, r3]
 2359 0018 DBB2     		uxtb	r3, r3
 2360 001a 522B     		cmp	r3, #82
 2361 001c 14D0     		beq	.L206
 2362 001e 722B     		cmp	r3, #114
 2363 0020 16D0     		beq	.L207
 2364 0022 422B     		cmp	r3, #66
 2365 0024 09D0     		beq	.L212
1533:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1534:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0):
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 73


1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0;
1536:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
1537:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX1):
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX1;
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
1540:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_BUSY_RX0_RX1;
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
1543:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
1544:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_READY;
 2366              		.loc 1 1544 0
 2367 0026 0122     		movs	r2, #1
 2368 0028 3D23     		movs	r3, #61
 2369 002a C254     		strb	r2, [r0, r3]
1545:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
 2370              		.loc 1 1545 0
 2371 002c 08E0     		b	.L209
 2372              	.L211:
1524:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_EPV |
 2373              		.loc 1 1524 0
 2374 002e 0268     		ldr	r2, [r0]
 2375 0030 5369     		ldr	r3, [r2, #20]
 2376 0032 0949     		ldr	r1, .L213
 2377 0034 0B40     		ands	r3, r1
 2378 0036 5361     		str	r3, [r2, #20]
 2379 0038 ECE7     		b	.L204
 2380              	.L212:
1535:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
 2381              		.loc 1 1535 0
 2382 003a 2222     		movs	r2, #34
 2383 003c 053B     		subs	r3, r3, #5
 2384 003e C254     		strb	r2, [r0, r3]
 2385              	.L209:
1546:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1547:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1548:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Transmission complete callback */ 
1549:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_TxCpltCallback(hcan);
 2386              		.loc 1 1549 0
 2387 0040 FFF7FEFF 		bl	HAL_CAN_TxCpltCallback
 2388              	.LVL121:
1550:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1551:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
1552:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2389              		.loc 1 1552 0
 2390 0044 0020     		movs	r0, #0
 2391              		@ sp needed
 2392 0046 10BD     		pop	{r4, pc}
 2393              	.LVL122:
 2394              	.L206:
1538:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
 2395              		.loc 1 1538 0
 2396 0048 3222     		movs	r2, #50
 2397 004a 3D23     		movs	r3, #61
 2398 004c C254     		strb	r2, [r0, r3]
1539:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2399              		.loc 1 1539 0
 2400 004e F7E7     		b	.L209
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 74


 2401              	.L207:
1541:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       break;
 2402              		.loc 1 1541 0
 2403 0050 6222     		movs	r2, #98
 2404 0052 3D23     		movs	r3, #61
 2405 0054 C254     		strb	r2, [r0, r3]
1542:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     default: /* HAL_CAN_STATE_BUSY_TX */
 2406              		.loc 1 1542 0
 2407 0056 F3E7     		b	.L209
 2408              	.L214:
 2409              		.align	2
 2410              	.L213:
 2411 0058 FF70FFFF 		.word	-36609
 2412              		.cfi_endproc
 2413              	.LFE52:
 2415              		.section	.text.HAL_CAN_RxCpltCallback,"ax",%progbits
 2416              		.align	1
 2417              		.weak	HAL_CAN_RxCpltCallback
 2418              		.syntax unified
 2419              		.code	16
 2420              		.thumb_func
 2421              		.fpu softvfp
 2423              	HAL_CAN_RxCpltCallback:
 2424              	.LFB48:
1423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2425              		.loc 1 1423 0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 0
 2428              		@ frame_needed = 0, uses_anonymous_args = 0
 2429              		@ link register save eliminated.
 2430              	.LVL123:
1430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2431              		.loc 1 1430 0
 2432              		@ sp needed
 2433 0000 7047     		bx	lr
 2434              		.cfi_endproc
 2435              	.LFE48:
 2437              		.section	.text.CAN_Receive_IT,"ax",%progbits
 2438              		.align	1
 2439              		.syntax unified
 2440              		.code	16
 2441              		.thumb_func
 2442              		.fpu softvfp
 2444              	CAN_Receive_IT:
 2445              	.LFB53:
1553:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1554:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** /**
1555:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @brief  Receives a correct CAN frame.
1556:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  hcan:       Pointer to a CAN_HandleTypeDef structure that contains
1557:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   *         the configuration information for the specified CAN.  
1558:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @param  FIFONumber: Specify the FIFO number    
1559:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval HAL status
1560:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   * @retval None
1561:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   */
1562:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** static HAL_StatusTypeDef CAN_Receive_IT(CAN_HandleTypeDef* hcan, uint8_t FIFONumber)
1563:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** {
 2446              		.loc 1 1563 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 75


 2447              		.cfi_startproc
 2448              		@ args = 0, pretend = 0, frame = 0
 2449              		@ frame_needed = 0, uses_anonymous_args = 0
 2450              	.LVL124:
 2451 0000 70B5     		push	{r4, r5, r6, lr}
 2452              	.LCFI10:
 2453              		.cfi_def_cfa_offset 16
 2454              		.cfi_offset 4, -16
 2455              		.cfi_offset 5, -12
 2456              		.cfi_offset 6, -8
 2457              		.cfi_offset 14, -4
 2458              	.LVL125:
1564:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   CanRxMsgTypeDef* pRxMsg = NULL;
1565:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1566:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Set RxMsg pointer */
1567:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if(FIFONumber == CAN_FIFO0)
 2459              		.loc 1 1567 0
 2460 0002 0029     		cmp	r1, #0
 2461 0004 00D0     		beq	.LCB2415
 2462 0006 83E0     		b	.L217	@long jump
 2463              	.LCB2415:
1568:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1569:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg = hcan->pRxMsg;
 2464              		.loc 1 1569 0
 2465 0008 436B     		ldr	r3, [r0, #52]
 2466              	.LVL126:
 2467              	.L218:
1570:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1571:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1572:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg = hcan->pRx1Msg;
1574:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1575:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1576:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the Id */
1577:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[FIFONumber].RIR;
 2468              		.loc 1 1577 0
 2469 000a 0A00     		movs	r2, r1
 2470 000c 1B32     		adds	r2, r2, #27
 2471 000e 1201     		lsls	r2, r2, #4
 2472 0010 0468     		ldr	r4, [r0]
 2473 0012 1459     		ldr	r4, [r2, r4]
 2474 0014 0422     		movs	r2, #4
 2475 0016 2240     		ands	r2, r4
 2476 0018 9A60     		str	r2, [r3, #8]
1578:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (pRxMsg->IDE == CAN_ID_STD)
 2477              		.loc 1 1578 0
 2478 001a 7BD1     		bne	.L219
1579:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1580:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_TI0R_STID
 2479              		.loc 1 1580 0
 2480 001c 0A00     		movs	r2, r1
 2481 001e 1B32     		adds	r2, r2, #27
 2482 0020 1201     		lsls	r2, r2, #4
 2483 0022 0468     		ldr	r4, [r0]
 2484 0024 1259     		ldr	r2, [r2, r4]
 2485 0026 520D     		lsrs	r2, r2, #21
 2486 0028 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 76


 2487              	.L220:
1581:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1582:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else
1583:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     pRxMsg->ExtId = (0xFFFFFFF8U & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_EXID_P
1585:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1586:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[FIFONumber].RIR) >> CAN_RI0R_RTR_Pos;
 2488              		.loc 1 1586 0
 2489 002a 0A00     		movs	r2, r1
 2490 002c 1B32     		adds	r2, r2, #27
 2491 002e 1201     		lsls	r2, r2, #4
 2492 0030 0468     		ldr	r4, [r0]
 2493 0032 1559     		ldr	r5, [r2, r4]
 2494 0034 6D08     		lsrs	r5, r5, #1
 2495 0036 0124     		movs	r4, #1
 2496 0038 2C40     		ands	r4, r5
 2497 003a DC60     		str	r4, [r3, #12]
1587:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the DLC */
1588:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_DLC_Po
 2498              		.loc 1 1588 0
 2499 003c 0468     		ldr	r4, [r0]
 2500 003e A418     		adds	r4, r4, r2
 2501 0040 6568     		ldr	r5, [r4, #4]
 2502 0042 0F24     		movs	r4, #15
 2503 0044 2C40     		ands	r4, r5
 2504 0046 1C61     		str	r4, [r3, #16]
1589:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the FMI */
1590:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->FMI = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[FIFONumber].RDTR) >> CAN_RDT0R_FMI_Po
 2505              		.loc 1 1590 0
 2506 0048 0468     		ldr	r4, [r0]
 2507 004a A446     		mov	ip, r4
 2508 004c 6244     		add	r2, r2, ip
 2509 004e 5468     		ldr	r4, [r2, #4]
 2510 0050 240A     		lsrs	r4, r4, #8
 2511 0052 FF22     		movs	r2, #255
 2512 0054 2240     		ands	r2, r4
 2513 0056 DA61     		str	r2, [r3, #28]
1591:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the FIFONumber */
1592:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->FIFONumber = FIFONumber;
 2514              		.loc 1 1592 0
 2515 0058 1962     		str	r1, [r3, #32]
1593:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Get the data field */
1594:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[0] = (CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2516              		.loc 1 1594 0
 2517 005a 0A01     		lsls	r2, r1, #4
 2518 005c 0468     		ldr	r4, [r0]
 2519 005e A418     		adds	r4, r4, r2
 2520 0060 B934     		adds	r4, r4, #185
 2521 0062 FF34     		adds	r4, r4, #255
 2522 0064 2468     		ldr	r4, [r4]
 2523 0066 1C75     		strb	r4, [r3, #20]
1595:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[1] = (CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2524              		.loc 1 1595 0
 2525 0068 0468     		ldr	r4, [r0]
 2526 006a A418     		adds	r4, r4, r2
 2527 006c B934     		adds	r4, r4, #185
 2528 006e FF34     		adds	r4, r4, #255
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 77


 2529 0070 2468     		ldr	r4, [r4]
 2530 0072 240A     		lsrs	r4, r4, #8
 2531 0074 5C75     		strb	r4, [r3, #21]
1596:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[2] = (CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2532              		.loc 1 1596 0
 2533 0076 0468     		ldr	r4, [r0]
 2534 0078 A418     		adds	r4, r4, r2
 2535 007a B934     		adds	r4, r4, #185
 2536 007c FF34     		adds	r4, r4, #255
 2537 007e 2468     		ldr	r4, [r4]
 2538 0080 240C     		lsrs	r4, r4, #16
 2539 0082 9C75     		strb	r4, [r3, #22]
1597:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[3] = (CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[FIFONumber].RDLR) >> CAN_RDL0R_
 2540              		.loc 1 1597 0
 2541 0084 0468     		ldr	r4, [r0]
 2542 0086 A418     		adds	r4, r4, r2
 2543 0088 B934     		adds	r4, r4, #185
 2544 008a FF34     		adds	r4, r4, #255
 2545 008c 2468     		ldr	r4, [r4]
 2546 008e 240E     		lsrs	r4, r4, #24
 2547 0090 DC75     		strb	r4, [r3, #23]
1598:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[4] = (CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2548              		.loc 1 1598 0
 2549 0092 0468     		ldr	r4, [r0]
 2550 0094 A418     		adds	r4, r4, r2
 2551 0096 BD34     		adds	r4, r4, #189
 2552 0098 FF34     		adds	r4, r4, #255
 2553 009a 2468     		ldr	r4, [r4]
 2554 009c 1C76     		strb	r4, [r3, #24]
1599:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[5] = (CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2555              		.loc 1 1599 0
 2556 009e 0468     		ldr	r4, [r0]
 2557 00a0 A418     		adds	r4, r4, r2
 2558 00a2 BD34     		adds	r4, r4, #189
 2559 00a4 FF34     		adds	r4, r4, #255
 2560 00a6 2468     		ldr	r4, [r4]
 2561 00a8 240A     		lsrs	r4, r4, #8
 2562 00aa 5C76     		strb	r4, [r3, #25]
1600:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[6] = (CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2563              		.loc 1 1600 0
 2564 00ac 0468     		ldr	r4, [r0]
 2565 00ae A418     		adds	r4, r4, r2
 2566 00b0 BD34     		adds	r4, r4, #189
 2567 00b2 FF34     		adds	r4, r4, #255
 2568 00b4 2468     		ldr	r4, [r4]
 2569 00b6 240C     		lsrs	r4, r4, #16
 2570 00b8 9C76     		strb	r4, [r3, #26]
1601:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   pRxMsg->Data[7] = (CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[FIFONumber].RDHR) >> CAN_RDH0R_
 2571              		.loc 1 1601 0
 2572 00ba 0468     		ldr	r4, [r0]
 2573 00bc A446     		mov	ip, r4
 2574 00be 6244     		add	r2, r2, ip
 2575 00c0 BD32     		adds	r2, r2, #189
 2576 00c2 FF32     		adds	r2, r2, #255
 2577 00c4 1268     		ldr	r2, [r2]
 2578 00c6 120E     		lsrs	r2, r2, #24
 2579 00c8 DA76     		strb	r2, [r3, #27]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 78


1602:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1603:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Release the FIFO */
1604:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Release FIFO0 */
1605:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2580              		.loc 1 1605 0
 2581 00ca 0029     		cmp	r1, #0
 2582 00cc 2AD1     		bne	.L221
1606:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1607:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO0);
 2583              		.loc 1 1607 0
 2584 00ce 0268     		ldr	r2, [r0]
 2585 00d0 D368     		ldr	r3, [r2, #12]
 2586              	.LVL127:
 2587 00d2 2024     		movs	r4, #32
 2588 00d4 2343     		orrs	r3, r4
 2589 00d6 D360     		str	r3, [r2, #12]
1608:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
1609:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Disable FIFO 0 overrun and message pending Interrupt */
1610:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV0 | CAN_IT_FMP0);
 2590              		.loc 1 1610 0
 2591 00d8 0268     		ldr	r2, [r0]
 2592 00da 5369     		ldr	r3, [r2, #20]
 2593 00dc 163C     		subs	r4, r4, #22
 2594 00de A343     		bics	r3, r4
 2595 00e0 5361     		str	r3, [r2, #20]
 2596              	.L222:
1611:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1612:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Release FIFO1 */
1613:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1614:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_FIFO_RELEASE(hcan, CAN_FIFO1);
1616:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
1617:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Disable FIFO 1 overrun and message pending Interrupt */
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_FOV1 | CAN_IT_FMP1);
1619:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1620:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   
1621:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if((hcan->State == HAL_CAN_STATE_BUSY_RX0) || (hcan->State == HAL_CAN_STATE_BUSY_RX1))
 2597              		.loc 1 1621 0
 2598 00e2 3D23     		movs	r3, #61
 2599 00e4 C35C     		ldrb	r3, [r0, r3]
 2600 00e6 222B     		cmp	r3, #34
 2601 00e8 27D0     		beq	.L223
 2602              		.loc 1 1621 0 is_stmt 0 discriminator 1
 2603 00ea 3D23     		movs	r3, #61
 2604 00ec C35C     		ldrb	r3, [r0, r3]
 2605 00ee 322B     		cmp	r3, #50
 2606 00f0 23D0     		beq	.L223
 2607              	.L224:
1622:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {   
1623:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* Disable interrupts: */
1624:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error warning Interrupt */
1625:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error passive Interrupt */
1626:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Bus-off Interrupt */
1627:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Last error code Interrupt */
1628:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /*  - Disable Error Interrupt */
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, CAN_IT_EWG |
1630:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_EPV |
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 79


1631:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_BOF |
1632:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_LEC |
1633:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_ERR );
1634:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1635:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1636:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Change CAN state */
1637:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   if (FIFONumber == CAN_FIFO0)
 2608              		.loc 1 1637 0 is_stmt 1
 2609 00f2 0029     		cmp	r1, #0
 2610 00f4 36D1     		bne	.L225
1638:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1639:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
 2611              		.loc 1 1639 0
 2612 00f6 3D23     		movs	r3, #61
 2613 00f8 C35C     		ldrb	r3, [r0, r3]
 2614 00fa DBB2     		uxtb	r3, r3
 2615 00fc 622B     		cmp	r3, #98
 2616 00fe 29D0     		beq	.L227
 2617 0100 722B     		cmp	r3, #114
 2618 0102 2BD0     		beq	.L228
 2619 0104 422B     		cmp	r3, #66
 2620 0106 1ED0     		beq	.L237
1640:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1641:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0):
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1643:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1644:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX1;
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1647:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX1;
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1650:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
1651:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
 2621              		.loc 1 1651 0
 2622 0108 0122     		movs	r2, #1
 2623 010a 3D23     		movs	r3, #61
 2624 010c C254     		strb	r2, [r0, r3]
1652:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2625              		.loc 1 1652 0
 2626 010e 1DE0     		b	.L230
 2627              	.LVL128:
 2628              	.L217:
1573:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2629              		.loc 1 1573 0
 2630 0110 836B     		ldr	r3, [r0, #56]
 2631              	.LVL129:
 2632 0112 7AE7     		b	.L218
 2633              	.L219:
1584:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2634              		.loc 1 1584 0
 2635 0114 0A00     		movs	r2, r1
 2636 0116 1B32     		adds	r2, r2, #27
 2637 0118 1201     		lsls	r2, r2, #4
 2638 011a 0468     		ldr	r4, [r0]
 2639 011c 1259     		ldr	r2, [r2, r4]
 2640 011e D208     		lsrs	r2, r2, #3
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 80


 2641 0120 5A60     		str	r2, [r3, #4]
 2642 0122 82E7     		b	.L220
 2643              	.L221:
1615:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     
 2644              		.loc 1 1615 0
 2645 0124 0268     		ldr	r2, [r0]
 2646 0126 1369     		ldr	r3, [r2, #16]
 2647              	.LVL130:
 2648 0128 2024     		movs	r4, #32
 2649 012a 2343     		orrs	r3, r4
 2650 012c 1361     		str	r3, [r2, #16]
1618:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2651              		.loc 1 1618 0
 2652 012e 0268     		ldr	r2, [r0]
 2653 0130 5369     		ldr	r3, [r2, #20]
 2654 0132 3034     		adds	r4, r4, #48
 2655 0134 A343     		bics	r3, r4
 2656 0136 5361     		str	r3, [r2, #20]
 2657 0138 D3E7     		b	.L222
 2658              	.L223:
1629:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_EPV |
 2659              		.loc 1 1629 0
 2660 013a 0268     		ldr	r2, [r0]
 2661 013c 5369     		ldr	r3, [r2, #20]
 2662 013e 164C     		ldr	r4, .L239
 2663 0140 2340     		ands	r3, r4
 2664 0142 5361     		str	r3, [r2, #20]
 2665 0144 D5E7     		b	.L224
 2666              	.L237:
1642:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2667              		.loc 1 1642 0
 2668 0146 1222     		movs	r2, #18
 2669 0148 053B     		subs	r3, r3, #5
 2670 014a C254     		strb	r2, [r0, r3]
 2671              	.L230:
1653:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1654:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1655:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   else /* FIFONumber == CAN_FIFO1 */
1656:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     switch(hcan->State)
1658:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
1659:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX1):
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX;
1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1662:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_RX0;
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1665:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_BUSY_TX_RX0;
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1668:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_READY;
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
1671:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
1672:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
1673:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1674:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Receive complete callback */ 
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 81


1675:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   HAL_CAN_RxCpltCallback(hcan);
 2672              		.loc 1 1675 0
 2673 014c FFF7FEFF 		bl	HAL_CAN_RxCpltCallback
 2674              	.LVL131:
1676:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
1677:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return function status */
1678:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return HAL_OK;
1679:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 2675              		.loc 1 1679 0
 2676 0150 0020     		movs	r0, #0
 2677              		@ sp needed
 2678 0152 70BD     		pop	{r4, r5, r6, pc}
 2679              	.LVL132:
 2680              	.L227:
1645:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2681              		.loc 1 1645 0
 2682 0154 3222     		movs	r2, #50
 2683 0156 3D23     		movs	r3, #61
 2684 0158 C254     		strb	r2, [r0, r3]
1646:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2685              		.loc 1 1646 0
 2686 015a F7E7     		b	.L230
 2687              	.L228:
1648:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2688              		.loc 1 1648 0
 2689 015c 5222     		movs	r2, #82
 2690 015e 3D23     		movs	r3, #61
 2691 0160 C254     		strb	r2, [r0, r3]
1649:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX0 */
 2692              		.loc 1 1649 0
 2693 0162 F3E7     		b	.L230
 2694              	.L225:
1657:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2695              		.loc 1 1657 0
 2696 0164 3D23     		movs	r3, #61
 2697 0166 C35C     		ldrb	r3, [r0, r3]
 2698 0168 DBB2     		uxtb	r3, r3
 2699 016a 622B     		cmp	r3, #98
 2700 016c 0BD0     		beq	.L232
 2701 016e 722B     		cmp	r3, #114
 2702 0170 0DD0     		beq	.L233
 2703 0172 522B     		cmp	r3, #82
 2704 0174 03D0     		beq	.L238
1669:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2705              		.loc 1 1669 0
 2706 0176 0122     		movs	r2, #1
 2707 0178 3D23     		movs	r3, #61
 2708 017a C254     		strb	r2, [r0, r3]
1670:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     }
 2709              		.loc 1 1670 0
 2710 017c E6E7     		b	.L230
 2711              	.L238:
1660:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2712              		.loc 1 1660 0
 2713 017e 1222     		movs	r2, #18
 2714 0180 153B     		subs	r3, r3, #21
 2715 0182 C254     		strb	r2, [r0, r3]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 82


1661:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_RX0_RX1):
 2716              		.loc 1 1661 0
 2717 0184 E2E7     		b	.L230
 2718              	.L232:
1663:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2719              		.loc 1 1663 0
 2720 0186 2222     		movs	r2, #34
 2721 0188 3D23     		movs	r3, #61
 2722 018a C254     		strb	r2, [r0, r3]
1664:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(HAL_CAN_STATE_BUSY_TX_RX0_RX1):
 2723              		.loc 1 1664 0
 2724 018c DEE7     		b	.L230
 2725              	.L233:
1666:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****         break;
 2726              		.loc 1 1666 0
 2727 018e 4222     		movs	r2, #66
 2728 0190 3D23     		movs	r3, #61
 2729 0192 C254     		strb	r2, [r0, r3]
1667:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default: /* HAL_CAN_STATE_BUSY_RX1 */
 2730              		.loc 1 1667 0
 2731 0194 DAE7     		b	.L230
 2732              	.L240:
 2733 0196 C046     		.align	2
 2734              	.L239:
 2735 0198 FF70FFFF 		.word	-36609
 2736              		.cfi_endproc
 2737              	.LFE53:
 2739              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 2740              		.align	1
 2741              		.weak	HAL_CAN_ErrorCallback
 2742              		.syntax unified
 2743              		.code	16
 2744              		.thumb_func
 2745              		.fpu softvfp
 2747              	HAL_CAN_ErrorCallback:
 2748              	.LFB49:
1439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 2749              		.loc 1 1439 0
 2750              		.cfi_startproc
 2751              		@ args = 0, pretend = 0, frame = 0
 2752              		@ frame_needed = 0, uses_anonymous_args = 0
 2753              		@ link register save eliminated.
 2754              	.LVL133:
1446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2755              		.loc 1 1446 0
 2756              		@ sp needed
 2757 0000 7047     		bx	lr
 2758              		.cfi_endproc
 2759              	.LFE49:
 2761              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2762              		.align	1
 2763              		.global	HAL_CAN_IRQHandler
 2764              		.syntax unified
 2765              		.code	16
 2766              		.thumb_func
 2767              		.fpu softvfp
 2769              	HAL_CAN_IRQHandler:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 83


 2770              	.LFB46:
1223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2771              		.loc 1 1223 0
 2772              		.cfi_startproc
 2773              		@ args = 0, pretend = 0, frame = 0
 2774              		@ frame_needed = 0, uses_anonymous_args = 0
 2775              	.LVL134:
 2776 0000 70B5     		push	{r4, r5, r6, lr}
 2777              	.LCFI11:
 2778              		.cfi_def_cfa_offset 16
 2779              		.cfi_offset 4, -16
 2780              		.cfi_offset 5, -12
 2781              		.cfi_offset 6, -8
 2782              		.cfi_offset 14, -4
 2783 0002 0400     		movs	r4, r0
 2784              	.LVL135:
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0)))
 2785              		.loc 1 1227 0
 2786 0004 0368     		ldr	r3, [r0]
 2787 0006 DA68     		ldr	r2, [r3, #12]
 2788 0008 D206     		lsls	r2, r2, #27
 2789 000a 08D5     		bpl	.L265
1228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2790              		.loc 1 1228 0 discriminator 1
 2791 000c 5A69     		ldr	r2, [r3, #20]
1227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV0)))
 2792              		.loc 1 1227 0 discriminator 1
 2793 000e 1207     		lsls	r2, r2, #28
 2794 0010 00D4     		bmi	.LCB2747
 2795 0012 89E0     		b	.L266	@long jump
 2796              	.LCB2747:
 2797              	.LVL136:
1234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2798              		.loc 1 1234 0
 2799 0014 1022     		movs	r2, #16
 2800 0016 DA60     		str	r2, [r3, #12]
1231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2801              		.loc 1 1231 0
 2802 0018 8025     		movs	r5, #128
 2803 001a AD00     		lsls	r5, r5, #2
 2804 001c 00E0     		b	.L243
 2805              	.LVL137:
 2806              	.L265:
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2807              		.loc 1 1224 0
 2808 001e 0025     		movs	r5, #0
 2809              	.LVL138:
 2810              	.L243:
1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1)))
 2811              		.loc 1 1238 0
 2812 0020 2368     		ldr	r3, [r4]
 2813 0022 1A69     		ldr	r2, [r3, #16]
 2814 0024 D206     		lsls	r2, r2, #27
 2815 0026 07D5     		bpl	.L244
1239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2816              		.loc 1 1239 0 discriminator 1
 2817 0028 5A69     		ldr	r2, [r3, #20]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 84


1238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_FOV1)))
 2818              		.loc 1 1238 0 discriminator 1
 2819 002a 5206     		lsls	r2, r2, #25
 2820 002c 04D5     		bpl	.L244
1242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2821              		.loc 1 1242 0
 2822 002e 8022     		movs	r2, #128
 2823 0030 D200     		lsls	r2, r2, #3
 2824 0032 1543     		orrs	r5, r2
 2825              	.LVL139:
1245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 2826              		.loc 1 1245 0
 2827 0034 1022     		movs	r2, #16
 2828 0036 1A61     		str	r2, [r3, #16]
 2829              	.L244:
1249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2830              		.loc 1 1249 0
 2831 0038 2368     		ldr	r3, [r4]
 2832 003a 5A69     		ldr	r2, [r3, #20]
 2833 003c D207     		lsls	r2, r2, #31
 2834 003e 1FD5     		bpl	.L245
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1)) ||
 2835              		.loc 1 1252 0
 2836 0040 9A68     		ldr	r2, [r3, #8]
 2837 0042 5C49     		ldr	r1, .L271
 2838 0044 0A40     		ands	r2, r1
 2839 0046 8A42     		cmp	r2, r1
 2840 0048 09D0     		beq	.L246
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2)))
 2841              		.loc 1 1253 0 discriminator 1
 2842 004a 9A68     		ldr	r2, [r3, #8]
 2843 004c 5A49     		ldr	r1, .L271+4
 2844 004e 0A40     		ands	r2, r1
1252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_1)) ||
 2845              		.loc 1 1252 0 discriminator 1
 2846 0050 8A42     		cmp	r2, r1
 2847 0052 04D0     		beq	.L246
1254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2848              		.loc 1 1254 0
 2849 0054 9A68     		ldr	r2, [r3, #8]
 2850 0056 5949     		ldr	r1, .L271+8
 2851 0058 0A40     		ands	r2, r1
1253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****        (__HAL_CAN_TRANSMIT_STATUS(hcan, CAN_TXMAILBOX_2)))
 2852              		.loc 1 1253 0
 2853 005a 8A42     		cmp	r2, r1
 2854 005c 10D1     		bne	.L245
 2855              	.L246:
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1)) ||
 2856              		.loc 1 1257 0
 2857 005e 9A68     		ldr	r2, [r3, #8]
 2858 0060 9207     		lsls	r2, r2, #30
 2859 0062 05D4     		bmi	.L247
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2)))
 2860              		.loc 1 1258 0 discriminator 1
 2861 0064 9A68     		ldr	r2, [r3, #8]
1257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK1)) ||
 2862              		.loc 1 1257 0 discriminator 1
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 85


 2863 0066 9205     		lsls	r2, r2, #22
 2864 0068 02D4     		bmi	.L247
1259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       {
 2865              		.loc 1 1259 0
 2866 006a 9B68     		ldr	r3, [r3, #8]
1258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****          (__HAL_CAN_GET_FLAG(hcan, CAN_FLAG_TXOK2)))
 2867              		.loc 1 1258 0
 2868 006c 9B03     		lsls	r3, r3, #14
 2869 006e 5DD5     		bpl	.L248
 2870              	.L247:
1262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 2871              		.loc 1 1262 0
 2872 0070 2000     		movs	r0, r4
 2873              	.LVL140:
 2874 0072 FFF7FEFF 		bl	CAN_Transmit_IT
 2875              	.LVL141:
 2876              	.L249:
1271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                    CAN_FLAG_TXOK0 | CAN_FLAG_TXOK1 | CAN_FLAG_TXOK2);
 2877              		.loc 1 1271 0
 2878 0076 2268     		ldr	r2, [r4]
 2879 0078 9168     		ldr	r1, [r2, #8]
 2880 007a 514B     		ldr	r3, .L271+12
 2881 007c 0B43     		orrs	r3, r1
 2882 007e 9360     		str	r3, [r2, #8]
 2883              	.L245:
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0) != 0U))
 2884              		.loc 1 1277 0
 2885 0080 2368     		ldr	r3, [r4]
 2886 0082 5A69     		ldr	r2, [r3, #20]
 2887 0084 9207     		lsls	r2, r2, #30
 2888 0086 02D5     		bpl	.L250
1278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2889              		.loc 1 1278 0 discriminator 1
 2890 0088 DB68     		ldr	r3, [r3, #12]
1277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO0) != 0U))
 2891              		.loc 1 1277 0 discriminator 1
 2892 008a 9B07     		lsls	r3, r3, #30
 2893 008c 52D1     		bne	.L267
 2894              	.L250:
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1) != 0U))
 2895              		.loc 1 1285 0
 2896 008e 2368     		ldr	r3, [r4]
 2897 0090 5A69     		ldr	r2, [r3, #20]
 2898 0092 D206     		lsls	r2, r2, #27
 2899 0094 02D5     		bpl	.L251
1286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2900              		.loc 1 1286 0 discriminator 1
 2901 0096 1B69     		ldr	r3, [r3, #16]
1285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_MSG_PENDING(hcan, CAN_FIFO1) != 0U))
 2902              		.loc 1 1285 0 discriminator 1
 2903 0098 9B07     		lsls	r3, r3, #30
 2904 009a 50D1     		bne	.L268
 2905              	.L251:
1293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 2906              		.loc 1 1293 0
 2907 009c 236C     		ldr	r3, [r4, #64]
 2908 009e 1D43     		orrs	r5, r3
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 86


 2909              	.LVL142:
 2910 00a0 2564     		str	r5, [r4, #64]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG)) &&
 2911              		.loc 1 1296 0
 2912 00a2 2368     		ldr	r3, [r4]
 2913 00a4 9A69     		ldr	r2, [r3, #24]
 2914 00a6 D207     		lsls	r2, r2, #31
 2915 00a8 09D5     		bpl	.L252
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2916              		.loc 1 1297 0 discriminator 1
 2917 00aa 5A69     		ldr	r2, [r3, #20]
1296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EWG)) &&
 2918              		.loc 1 1296 0 discriminator 1
 2919 00ac D205     		lsls	r2, r2, #23
 2920 00ae 06D5     		bpl	.L252
1298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2921              		.loc 1 1298 0
 2922 00b0 5A69     		ldr	r2, [r3, #20]
1297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2923              		.loc 1 1297 0
 2924 00b2 1204     		lsls	r2, r2, #16
 2925 00b4 03D5     		bpl	.L252
1301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* No need for clear of Error Warning Flag as read-only */
 2926              		.loc 1 1301 0
 2927 00b6 226C     		ldr	r2, [r4, #64]
 2928 00b8 0121     		movs	r1, #1
 2929 00ba 0A43     		orrs	r2, r1
 2930 00bc 2264     		str	r2, [r4, #64]
 2931              	.L252:
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV)) &&
 2932              		.loc 1 1306 0
 2933 00be 9A69     		ldr	r2, [r3, #24]
 2934 00c0 9207     		lsls	r2, r2, #30
 2935 00c2 09D5     		bpl	.L253
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2936              		.loc 1 1307 0 discriminator 1
 2937 00c4 5A69     		ldr	r2, [r3, #20]
1306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_EPV)) &&
 2938              		.loc 1 1306 0 discriminator 1
 2939 00c6 9205     		lsls	r2, r2, #22
 2940 00c8 06D5     		bpl	.L253
1308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2941              		.loc 1 1308 0
 2942 00ca 5A69     		ldr	r2, [r3, #20]
1307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2943              		.loc 1 1307 0
 2944 00cc 1204     		lsls	r2, r2, #16
 2945 00ce 03D5     		bpl	.L253
1311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* No need for clear of Error Passive Flag as read-only */ 
 2946              		.loc 1 1311 0
 2947 00d0 226C     		ldr	r2, [r4, #64]
 2948 00d2 0221     		movs	r1, #2
 2949 00d4 0A43     		orrs	r2, r1
 2950 00d6 2264     		str	r2, [r4, #64]
 2951              	.L253:
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF)) &&
 2952              		.loc 1 1316 0
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 87


 2953 00d8 9A69     		ldr	r2, [r3, #24]
 2954 00da 5207     		lsls	r2, r2, #29
 2955 00dc 09D5     		bpl	.L254
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2956              		.loc 1 1317 0 discriminator 1
 2957 00de 5A69     		ldr	r2, [r3, #20]
1316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_BOF)) &&
 2958              		.loc 1 1316 0 discriminator 1
 2959 00e0 5205     		lsls	r2, r2, #21
 2960 00e2 06D5     		bpl	.L254
1318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2961              		.loc 1 1318 0
 2962 00e4 5A69     		ldr	r2, [r3, #20]
1317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2963              		.loc 1 1317 0
 2964 00e6 1204     		lsls	r2, r2, #16
 2965 00e8 03D5     		bpl	.L254
1321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     /* No need for clear of Bus-Off Flag as read-only */
 2966              		.loc 1 1321 0
 2967 00ea 226C     		ldr	r2, [r4, #64]
 2968 00ec 0421     		movs	r1, #4
 2969 00ee 0A43     		orrs	r2, r1
 2970 00f0 2264     		str	r2, [r4, #64]
 2971              	.L254:
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC))         &&
 2972              		.loc 1 1326 0
 2973 00f2 9A69     		ldr	r2, [r3, #24]
 2974 00f4 7021     		movs	r1, #112
 2975 00f6 1142     		tst	r1, r2
 2976 00f8 37D0     		beq	.L255
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2977              		.loc 1 1327 0 discriminator 1
 2978 00fa 5A69     		ldr	r2, [r3, #20]
1326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_LEC))         &&
 2979              		.loc 1 1326 0 discriminator 1
 2980 00fc 1205     		lsls	r2, r2, #20
 2981 00fe 34D5     		bpl	.L255
1328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 2982              		.loc 1 1328 0
 2983 0100 5A69     		ldr	r2, [r3, #20]
1327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****      (__HAL_CAN_GET_IT_SOURCE(hcan, CAN_IT_ERR)))
 2984              		.loc 1 1327 0
 2985 0102 1204     		lsls	r2, r2, #16
 2986 0104 31D5     		bpl	.L255
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 2987              		.loc 1 1330 0
 2988 0106 9969     		ldr	r1, [r3, #24]
 2989 0108 7022     		movs	r2, #112
 2990 010a 0A40     		ands	r2, r1
 2991 010c 302A     		cmp	r2, #48
 2992 010e 30D0     		beq	.L257
 2993 0110 1AD9     		bls	.L269
 2994 0112 502A     		cmp	r2, #80
 2995 0114 32D0     		beq	.L261
 2996 0116 602A     		cmp	r2, #96
 2997 0118 35D0     		beq	.L262
 2998 011a 402A     		cmp	r2, #64
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 88


 2999 011c 21D1     		bne	.L256
1346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 3000              		.loc 1 1346 0
 3001 011e 226C     		ldr	r2, [r4, #64]
 3002 0120 4021     		movs	r1, #64
 3003 0122 0A43     		orrs	r2, r1
 3004 0124 2264     		str	r2, [r4, #64]
1347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 3005              		.loc 1 1347 0
 3006 0126 1CE0     		b	.L256
 3007              	.LVL143:
 3008              	.L266:
1224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3009              		.loc 1 1224 0
 3010 0128 0025     		movs	r5, #0
 3011 012a 79E7     		b	.L243
 3012              	.LVL144:
 3013              	.L248:
1267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       }
 3014              		.loc 1 1267 0
 3015 012c 8023     		movs	r3, #128
 3016 012e 1B01     		lsls	r3, r3, #4
 3017 0130 1D43     		orrs	r5, r3
 3018              	.LVL145:
 3019 0132 A0E7     		b	.L249
 3020              	.LVL146:
 3021              	.L267:
1281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 3022              		.loc 1 1281 0
 3023 0134 0021     		movs	r1, #0
 3024 0136 2000     		movs	r0, r4
 3025 0138 FFF7FEFF 		bl	CAN_Receive_IT
 3026              	.LVL147:
 3027 013c A7E7     		b	.L250
 3028              	.L268:
1289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 3029              		.loc 1 1289 0
 3030 013e 0121     		movs	r1, #1
 3031 0140 2000     		movs	r0, r4
 3032 0142 FFF7FEFF 		bl	CAN_Receive_IT
 3033              	.LVL148:
 3034 0146 A9E7     		b	.L251
 3035              	.LVL149:
 3036              	.L269:
1330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****     {
 3037              		.loc 1 1330 0
 3038 0148 102A     		cmp	r2, #16
 3039 014a 06D0     		beq	.L259
 3040 014c 202A     		cmp	r2, #32
 3041 014e 08D1     		bne	.L256
1338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 3042              		.loc 1 1338 0
 3043 0150 226C     		ldr	r2, [r4, #64]
 3044 0152 1021     		movs	r1, #16
 3045 0154 0A43     		orrs	r2, r1
 3046 0156 2264     		str	r2, [r4, #64]
1339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 89


 3047              		.loc 1 1339 0
 3048 0158 03E0     		b	.L256
 3049              	.L259:
1334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 3050              		.loc 1 1334 0
 3051 015a 226C     		ldr	r2, [r4, #64]
 3052 015c 0821     		movs	r1, #8
 3053 015e 0A43     		orrs	r2, r1
 3054 0160 2264     		str	r2, [r4, #64]
 3055              	.L256:
1361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }
 3056              		.loc 1 1361 0
 3057 0162 9A69     		ldr	r2, [r3, #24]
 3058 0164 7021     		movs	r1, #112
 3059 0166 8A43     		bics	r2, r1
 3060 0168 9A61     		str	r2, [r3, #24]
 3061              	.L255:
1365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   {
 3062              		.loc 1 1365 0
 3063 016a 236C     		ldr	r3, [r4, #64]
 3064 016c 002B     		cmp	r3, #0
 3065 016e 10D1     		bne	.L270
 3066              	.L242:
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3067              		.loc 1 1398 0
 3068              		@ sp needed
 3069              	.LVL150:
 3070 0170 70BD     		pop	{r4, r5, r6, pc}
 3071              	.LVL151:
 3072              	.L257:
1342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 3073              		.loc 1 1342 0
 3074 0172 226C     		ldr	r2, [r4, #64]
 3075 0174 2021     		movs	r1, #32
 3076 0176 0A43     		orrs	r2, r1
 3077 0178 2264     		str	r2, [r4, #64]
1343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_2):
 3078              		.loc 1 1343 0
 3079 017a F2E7     		b	.L256
 3080              	.L261:
1350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 3081              		.loc 1 1350 0
 3082 017c 226C     		ldr	r2, [r4, #64]
 3083 017e 8021     		movs	r1, #128
 3084 0180 0A43     		orrs	r2, r1
 3085 0182 2264     		str	r2, [r4, #64]
1351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       case(CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 3086              		.loc 1 1351 0
 3087 0184 EDE7     		b	.L256
 3088              	.L262:
1354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****           break;
 3089              		.loc 1 1354 0
 3090 0186 216C     		ldr	r1, [r4, #64]
 3091 0188 8022     		movs	r2, #128
 3092 018a 5200     		lsls	r2, r2, #1
 3093 018c 0A43     		orrs	r2, r1
 3094 018e 2264     		str	r2, [r4, #64]
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 90


1355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****       default:
 3095              		.loc 1 1355 0
 3096 0190 E7E7     		b	.L256
 3097              	.L270:
1368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3098              		.loc 1 1368 0
 3099 0192 2268     		ldr	r2, [r4]
 3100 0194 5368     		ldr	r3, [r2, #4]
 3101 0196 0421     		movs	r1, #4
 3102 0198 0B43     		orrs	r3, r1
 3103 019a 5360     		str	r3, [r2, #4]
1371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3104              		.loc 1 1371 0
 3105 019c 0122     		movs	r2, #1
 3106 019e 3D23     		movs	r3, #61
 3107 01a0 E254     		strb	r2, [r4, r3]
1384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****                                CAN_IT_EPV |
 3108              		.loc 1 1384 0
 3109 01a2 2268     		ldr	r2, [r4]
 3110 01a4 5369     		ldr	r3, [r2, #20]
 3111 01a6 0749     		ldr	r1, .L271+16
 3112 01a8 0B40     		ands	r3, r1
 3113 01aa 5361     		str	r3, [r2, #20]
1396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   }  
 3114              		.loc 1 1396 0
 3115 01ac 2000     		movs	r0, r4
 3116 01ae FFF7FEFF 		bl	HAL_CAN_ErrorCallback
 3117              	.LVL152:
1398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3118              		.loc 1 1398 0
 3119 01b2 DDE7     		b	.L242
 3120              	.L272:
 3121              		.align	2
 3122              	.L271:
 3123 01b4 01000004 		.word	67108865
 3124 01b8 00010008 		.word	134217984
 3125 01bc 00000110 		.word	268500992
 3126 01c0 19050100 		.word	66841
 3127 01c4 A470FFFF 		.word	-36700
 3128              		.cfi_endproc
 3129              	.LFE46:
 3131              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 3132              		.align	1
 3133              		.global	HAL_CAN_GetState
 3134              		.syntax unified
 3135              		.code	16
 3136              		.thumb_func
 3137              		.fpu softvfp
 3139              	HAL_CAN_GetState:
 3140              	.LFB50:
1475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   /* Return CAN state */
 3141              		.loc 1 1475 0
 3142              		.cfi_startproc
 3143              		@ args = 0, pretend = 0, frame = 0
 3144              		@ frame_needed = 0, uses_anonymous_args = 0
 3145              		@ link register save eliminated.
 3146              	.LVL153:
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 91


1477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 3147              		.loc 1 1477 0
 3148 0000 3D23     		movs	r3, #61
 3149 0002 C05C     		ldrb	r0, [r0, r3]
 3150              	.LVL154:
 3151 0004 C0B2     		uxtb	r0, r0
1478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3152              		.loc 1 1478 0
 3153              		@ sp needed
 3154 0006 7047     		bx	lr
 3155              		.cfi_endproc
 3156              	.LFE50:
 3158              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 3159              		.align	1
 3160              		.global	HAL_CAN_GetError
 3161              		.syntax unified
 3162              		.code	16
 3163              		.thumb_func
 3164              		.fpu softvfp
 3166              	HAL_CAN_GetError:
 3167              	.LFB51:
1487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c ****   return hcan->ErrorCode;
 3168              		.loc 1 1487 0
 3169              		.cfi_startproc
 3170              		@ args = 0, pretend = 0, frame = 0
 3171              		@ frame_needed = 0, uses_anonymous_args = 0
 3172              		@ link register save eliminated.
 3173              	.LVL155:
1488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** }
 3174              		.loc 1 1488 0
 3175 0000 006C     		ldr	r0, [r0, #64]
 3176              	.LVL156:
1489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_can.c **** 
 3177              		.loc 1 1489 0
 3178              		@ sp needed
 3179 0002 7047     		bx	lr
 3180              		.cfi_endproc
 3181              	.LFE51:
 3183              		.text
 3184              	.Letext0:
 3185              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3186              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3187              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 3188              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f042x6.h"
 3189              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 3190              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3191              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\include
 3192              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\lib\\gcc\\arm-none-eab
 3193              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\6 2017-q2-update\\arm-none-eabi\\includ
 3194              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 3195              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_can.h"
 3196              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s 			page 92


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_can.c
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:16     .text.HAL_CAN_ConfigFilter:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:23     .text.HAL_CAN_ConfigFilter:00000000 HAL_CAN_ConfigFilter
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:231    .text.HAL_CAN_ConfigFilter:00000118 $d
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:236    .text.HAL_CAN_MspInit:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:243    .text.HAL_CAN_MspInit:00000000 HAL_CAN_MspInit
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:258    .text.HAL_CAN_Init:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:265    .text.HAL_CAN_Init:00000000 HAL_CAN_Init
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:566    .text.HAL_CAN_MspDeInit:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:573    .text.HAL_CAN_MspDeInit:00000000 HAL_CAN_MspDeInit
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:588    .text.HAL_CAN_DeInit:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:595    .text.HAL_CAN_DeInit:00000000 HAL_CAN_DeInit
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:642    .text.HAL_CAN_Transmit:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:649    .text.HAL_CAN_Transmit:00000000 HAL_CAN_Transmit
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1052   .text.HAL_CAN_Transmit:00000220 $d
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1062   .text.HAL_CAN_Transmit_IT:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1069   .text.HAL_CAN_Transmit_IT:00000000 HAL_CAN_Transmit_IT
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1327   .text.HAL_CAN_Transmit_IT:00000154 $d
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1332   .text.HAL_CAN_Receive:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1339   .text.HAL_CAN_Receive:00000000 HAL_CAN_Receive
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1838   .text.HAL_CAN_Receive_IT:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:1845   .text.HAL_CAN_Receive_IT:00000000 HAL_CAN_Receive_IT
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2072   .text.HAL_CAN_Sleep:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2079   .text.HAL_CAN_Sleep:00000000 HAL_CAN_Sleep
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2198   .text.HAL_CAN_WakeUp:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2205   .text.HAL_CAN_WakeUp:00000000 HAL_CAN_WakeUp
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2304   .text.HAL_CAN_TxCpltCallback:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2311   .text.HAL_CAN_TxCpltCallback:00000000 HAL_CAN_TxCpltCallback
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2326   .text.CAN_Transmit_IT:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2332   .text.CAN_Transmit_IT:00000000 CAN_Transmit_IT
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2411   .text.CAN_Transmit_IT:00000058 $d
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2416   .text.HAL_CAN_RxCpltCallback:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2423   .text.HAL_CAN_RxCpltCallback:00000000 HAL_CAN_RxCpltCallback
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2438   .text.CAN_Receive_IT:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2444   .text.CAN_Receive_IT:00000000 CAN_Receive_IT
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2735   .text.CAN_Receive_IT:00000198 $d
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2740   .text.HAL_CAN_ErrorCallback:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2747   .text.HAL_CAN_ErrorCallback:00000000 HAL_CAN_ErrorCallback
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2762   .text.HAL_CAN_IRQHandler:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:2769   .text.HAL_CAN_IRQHandler:00000000 HAL_CAN_IRQHandler
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:3123   .text.HAL_CAN_IRQHandler:000001b4 $d
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:3132   .text.HAL_CAN_GetState:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:3139   .text.HAL_CAN_GetState:00000000 HAL_CAN_GetState
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:3159   .text.HAL_CAN_GetError:00000000 $t
C:\Users\Wojciech\AppData\Local\Temp\ccL4I3PO.s:3166   .text.HAL_CAN_GetError:00000000 HAL_CAN_GetError
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
